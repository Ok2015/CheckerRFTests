*** Setting ***
Documentation     Library for Checker Soft LTD (Rev date: 07.04.2022 17:38 | v.004)
Library           SeleniumLibrary
Library           String
Library           Collections
Library           ExcelLibrary
Library           DateTime
Library           ImapLibrary
Library           json
Library           RequestsLibrary
Library           OperatingSystem
Library           xlrd
Library           BuiltIn
Library           openpyxl

*** Variables ***
${TestURLs}       https://eu.checker-soft.com/testing    # https://eu.checker-soft.com/testing,https://eu.checker-soft.com/preproduction,https://eu.checker-soft.com/demo
${TestURLs ALL systems}    https://sistema.mistero.com.br,https://eu.checker-soft.com/hollowmen-ro,https://eu.checker-soft.com/serveandcheck,https://eu.checker-soft.com/gfk-ukraine,https://gfk-russia.com,https://www.webethere.net,https://marketest.checker.co.il,https://ms-online.co.il,https://misonline.co.il,http://mwi.checker.co.il,https://tovanot.checker.co.il,https://asia.checker-soft.com/coredata,https://csc.ajis-group.co.jp,https://ru.checker-soft.com/sqiman-ru,https://www.imystery.ru,https://eu.checker-soft.com/testing,https://eu.checker-soft.com/demo,https://asia.checker-soft.com/demo,https://latam.checker-soft.com/demo,https://eu.checker-soft.com/preproduction    # https://sistema.mistero.com.br,https://eu.checker-soft.com/hollowmen-ro,https://eu.checker-soft.com/serveandcheck,https://eu.checker-soft.com/gfk-ukraine,https://gfk-russia.com,https://www.webethere.net,https://marketest.checker.co.il,https://ms-online.co.il,https://misonline.co.il,http://mwi.checker.co.il,https://tovanot.checker.co.il,https://asia.checker-soft.com/coredata,https://csc.ajis-group.co.jp,https://ru.checker-soft.com/sqiman-ru,https://www.imystery.ru,https://eu.checker-soft.com/testing,https://eu.checker-soft.com/demo,https://asia.checker-soft.com/demo,https://latam.checker-soft.com/demo,https://eu.checker-soft.com/preproduction
${check emails or no?}    NO    # YES or NO
${check reports?}    NO    # YES or NO
${Max brows win?}    YES    # YES or NO
${BROWSER}        Chrome    # Chrome, Firefox, Opera (Internet Explorer - to recheck! \ Microsoft Edge is not supported!!!)
${TestUrls-UpTime}    https://online.r-m.co.il,https://system.serveandcheck.com,https://eu.checker-soft.com/gfk-ukraine,https://ipsos-russia.com,https://tyaonline.com,https://marketest.checker.co.il,https://ms-online.co.il,https://www.misonline.co.il,https://tovanot.checker.co.il,https://csc.ajis-group.co.jp,https://ru.checker-soft.com/profpoint-ru,https://www.imystery.ru,https://eu.checker-soft.com/testing
${RFShopperEmail}    robotshopperemail@gmail.com
${RFManagerEmail}    robotmailbox01@gmail.com

*** Keywords ***
Login as a Manager
    [Arguments]    ${ManagerUsername}    ${ManagerPassword}
    Enter existing login and password.AD    ${ManagerUsername}    ${ManagerPassword}    #${ManagerUsername}    ${ManagerPassword}
    Switch language.AD    ${UILangauageID}

Login as a Shopper
    Enter login and password.SD    ${RobotTestShopper 02}    ${RobotTestShopper 02}
    Enable agreements.SD
    Switch language.SD    ${UILangauageID}
    Check Shoppers Main Page page

Enter login and password.SD
    [Arguments]    ${username}    ${password}
    go to.AD    ${URL}/c_login.php
    Log To Console    ${\n}Login to account: name: "${username}"/pass:"${password}"
    Wait Until Page Contains Element    name=username
    Input Text    name=username    ${username}
    Input Text    name=password    ${password}
    Click Element    ${id=submit_button}
    Log to console    Please wait...
    Run keyword and ignore error    Enable agreements.SD
    #Run keyword and ignore error    Switch language.SD    ${UILangauageID}
    Log to console    Shopper is logged in (+)

Enter existing login and password.AD
    [Arguments]    ${username}    ${password}
    go to.AD    ${URL}/login.php
    Log To Console    Login into a system using next credentials: username = "${username}" pass ="${password}"
    Wait Until Page Contains Element    ${id=login_email}
    Input Text    ${id=login_email}    ${username}
    Input Text    ${id=login_password}    ${password}
    Click Element    ${id=submit_button}
    Check errors on page [-1]
    #Switch language.AD    ${UILangauageID}
    #Wait Until Page Contains    Welcome,

Check Log In page.AD
    #Wait Until Page Contains Element    //*[@id="FiltersArea"]/div/form
    go to.AD    ${URL}/login.php
    Check errors on page [2]
    #Page should contain element    //*[@id="FiltersArea"]/div/p[5]/a[3]
    Page should contain element    //*[@id="FiltersArea"]/div/p[3]

Check Main Page setings.AD
    #Run Keyword If    '${lang_ID}'=='11'    Set Global Variable    ${lang_ID}    ${XLS Column: en_UK}
    ${IsElementVisible}=    Run Keyword And Return Status    Element Should Be Visible    id=idCategoryAssignationsEditbox
    Run Keyword If    ${IsElementVisible}    DEL_All
    ELSE    Log to console    connection is added
    Click button    //input[@id='save']

Check Main Page.AD
    [Arguments]    ${URL}
    go to.AD    ${URL}/main-menu.php
    Page should contain    Welcome, ${ManagerUsername}!
    Check errors on page [2]
    #Wait Until Page Contains Element    //*[@id="menu_top_level"]/tbody/tr/td[1]/a
    Page should contain element    xpath=//a[@href="user-main-menu-options.php"]
    Page should contain element    xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[1]/tbody/tr/td[1]/table/tbody/tr[2]/td[2]
    Page should contain element    xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[1]/tbody/tr/td[2]/table/tbody/tr[2]/td[2]
    Page should contain element    xpath=//td[@class='mainMenu-line2'][2]/table[@class='insideMain']/tbody/tr[@class='titleInsideMain']/td[@class='insideMain']
    Page should contain element    xpath=//tr/td[@class='begin-report-area-td']/center/table/tbody/tr[1]/td[2]/table[2]/tbody/tr/td[@class='mainMenu-line2'][2]/table[@class='insideMain']/tbody/tr[@class='titleInsideMain']/td[@class='insideMain']
    Page should contain element    xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[2]/tbody/tr/td[2]/table/tbody/tr[2]/td[2]
    Page should contain element    xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[1]/tbody/tr/td[1]/table/tbody/tr[4]/td
    Page should contain element    xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[1]/tbody/tr/td[2]/table/tbody/tr[4]/td
    Page should contain element    xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[2]/tbody/tr/td[1]/table/tbody/tr[4]/td
    Page should contain element    xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[2]/tbody/tr/td[2]/table/tbody/tr[4]/td
    Page should contain element    xpath=//*[@id="main_menu_title_text"]/tbody/tr/td[3]/form
    Page should contain element    xpath=//*[@id="set-language"]/span    # select language box
    Page should contain element    xpath=//tr/td[@class='gray-lighter2'][1]
    Page should contain element    xpath=//td[2]/div[@class='MainMenuLink']/a[@class='MainMenuLink']
    Page should contain element    xpath=//td[@id='the_cell_with_the_program']/table[5]/tbody/tr[@class='bottom-tr']
    Page should contain element    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[2]/td[2]/div/a    # Your main menu settings url
    Log to console    Main page is valid. Contains: xpath=//a[@href="user-main-menu-options.php"] xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[1]/tbody/tr/td[1]/table/tbody/tr[2]/td[2] xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[1]/tbody/tr/td[2]/table/tbody/tr[2]/td[2] xpath=//td[@class='mainMenu-line2'][2]/table[@class='insideMain']/tbody/tr[@class='titleInsideMain']/td[@class='insideMain'] xpath=//tr/td[@class='begin-report-area-td']/center/table/tbody/tr[1]/td[2]/table[2]/tbody/tr/td[@class='mainMenu-line2'][2]/table[@class='insideMain']/tbody/tr[@class='titleInsideMain']/td[@class='insideMain'] xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[2]/tbody/tr/td[2]/table/tbody/tr[2]/td[2] xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[1]/tbody/tr/td[1]/table/tbody/tr[4]/td xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[1]/tbody/tr/td[2]/table/tbody/tr[4]/td xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[2]/tbody/tr/td[1]/table/tbody/tr[4]/td xpath=//*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[1]/td[2]/table[2]/tbody/tr/td[2]/table/tbody/tr[4]/td xpath=//*[@id="main_menu_title_text"]/tbody/tr/td[3]/form xpath=//*[@id="set-language"]/span xpath=//tr/td[@class='gray-lighter2'][1] xpath=//td[2]/div[@class='MainMenuLink']/a[@class='MainMenuLink'] xpath=//td[@id='the_cell_with_the_program']/table[5]/tbody/tr[@class='bottom-tr'] //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/table/tbody/tr[2]/td[2]/div/a

Search test item
    [Arguments]    ${TestItem}
    go to.AD    ${URL}/menu-manage.php
    Input Text    //tr/td[3]/form/input[1]    ${TestItem}
    Click Button    //tr/td[3]/form/input[4]
    [Teardown]

Add new shopper.AD
    [Arguments]    ${RobotTestShopper}    ${Robot country}    ${Robot region}    ${Robot city}
    go to.AD    ${URL}/checkers.php
    Log to console    Let`s create test shopper with name = "${RobotTestShopper}"
    Wait until page contains element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Click button    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Wait until page contains element    //*[@id="tabs"]/ul/li[1]/a
    Mouse over    //input[@id='field_Fullname']
    Input Text    //input[@id='field_Fullname']    ${RobotTestShopper}
    Mouse over    id=field_Username
    Input Text    id=field_Username    ${RobotTestShopper}
    Mouse over    //*[@id="idPasswordEditbox"]/div
    Click element    //td[@id='idPasswordEditbox']/div[@class='tedit-desc']/a[@id='HideRedundant']
    sleep    1
    Input Text    //input[@id='field_Password']    ${RobotTestShopper}
    Click element    //*[@id="tabs"]/ul/li[2]
    Sleep    1
    Click element    //*[@id="tabs"]/ul/li[2]
    Sleep    1
    Click element    //*[@id="tabs"]/ul/li[2]
    Sleep    1
    ####
    Select country/region/city.AD
    ####
    Click element    //*[@id="tabs"]/ul/li[1]
    Click element    //*[@id="addnew"]
    Check errors on page [-1]
    Log to console    ${RobotTestShopper} - has been registered in a system (with next details: name | country | region | city \ ${RobotTestShopper} | ${Robot country} | ${Robot region} | ${Robot city})

Check Shoppers Main Page page
    go to.AD    ${URL}/c_main.php
    Wait Until Page Contains Element    class=center_screen_top
    Page should contain element    class=footers-line
    Page should contain element    id=set-language
    Log to console    Shopper is logged in!
    #Check shopper message.SD

Check Shoppers Main Page elements
    #Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Click link    xpath=//a[@href="c_main.php"]
    Wait Until Page Contains Element    class=center_screen_top
    Page should contain element    class=footers-line
    Page should contain element    id=set-language
    Page should contain element    class=td-menu1
    Page should contain link    xpath=//a[@href="c_ordered-crits.php"]
    Page should contain link    xpath=//a[@href="c_ordered-crits.php?showJobBoard=1"]
    Page should contain link    xpath=//a[@href="c_choose-client.php"]
    Page should contain link    xpath=//a[@href="c_unfinished-crits.php"]
    Page should contain element    class=menuTitleTR
    Page should contain element    class=menuTitle2
    Page should contain link    xpath=//a[@href="c_survey-select.php"]
    Page should contain link    xpath=//a[@href="c_branch-addresses.php"]
    Page should contain link    xpath=//a[@href="c_certificate-list.php"]
    Page should contain link    xpath=//a[@href="c_file-library.php"]
    Page should contain link    xpath=//a[@href="c_show-sets.php"]
    Page should contain element    class=menuTitle3
    Page should contain link    xpath=//a[@href="c_crit-history.php"]
    Page should contain link    xpath=//a[@href="c_report-refund.php"]
    Page should contain link    xpath=//a[@href="c_add-refund.php"]
    Page should contain link    xpath=//a[@href="checkers.php?edit=y&auth_mode=2"]
    Page should contain link    xpath=//a[@href="c_agreements.php"]
    Page should contain link    xpath=//a[@href="c_edit-availability.php"]
    Page should contain element    class=title
    Page should contain element    class=td-menu2
    Page should contain element    class=td-menu3
    Page should contain element    class=td-menu4
    Page should contain link    xpath=//a[@href="c_logoff.php"]

Check Shoppers Main Page elements in English
    #Click link    xpath=//a[@href="c_main.php"]
    #Check `Orders` menu
    Wait Until Page Contains Element    xpath=//a[@href="c_logoff.php"]
    Element Text Should Be    class=menuTitle    Orders    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_ordered-crits.php"]    Assigned orders    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_ordered-crits.php?showJobBoard=1"]    Show job board    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_choose-client.php"]    Initiate review    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_unfinished-crits.php"]    Continue unfinished review    ignore_case=True
    Page Should Contain Element    class=footers-info    #footer line
    #Check `Questionnaires` menu
    Element Text Should Be    class=menuTitle2    Questionnaires    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_survey-select.php"]    Surveys selection    ignore_case=True
    #Element Text Should Be    xpath=//a[@href="c_branch-addresses.php"]    Branch addresses listing    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_certificate-list.php"]    CheckerTificate    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_file-library.php"]    Files library    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_show-sets.php"]    Show questionnaire    ignore_case=True
    #Check `Personal information` menu
    Element Text Should Be    class=menuTitle3    Personal information    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_crit-history.php"]    Survey history    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_report-refund.php"]    Personal refund report    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_add-refund.php"]    Add refund record    ignore_case=True
    Element Text Should Be    xpath=//a[@href="checkers.php?edit=y&auth_mode=2"]    Edit personal information    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_agreements.php"]    Agreements    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_edit-availability.php"]    Edit work hours    ignore_case=True
    #Page should contain    Note
    #Page should contain    Please make sure that your user details are complete
    Page should contain    Welcome
    Page should contain    View available questionnaires
    Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off    ignore_case=True
    #Page should contain    You have completed
    Log to console    Main Menu and its elements are available in English!

Check Shoppers Main Page elements in Russian
    #Click link    xpath=//a[@href="c_main.php"]
    #Check `Orders` menu
    Wait Until Page Contains Element    xpath=//a[@href="c_logoff.php"]
    Element Text Should Be    class=menuTitle    Заказы    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_ordered-crits.php"]    Ваши задания    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_ordered-crits.php?showJobBoard=1"]    Предлагаемые задания    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_choose-client.php"]    Инициировать проверку    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_unfinished-crits.php"]    Продолжить незавершенный отчет    ignore_case=True
    Page Should Contain Element    class=footers-info    #footer line
    #Check `Questionnaires` menu
    Element Text Should Be    class=menuTitle2    Анкеты    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_survey-select.php"]    Выбор опросов    ignore_case=True
    #Element Text Should Be    xpath=//a[@href="c_branch-addresses.php"]    Список адресов точек    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_certificate-list.php"]    Сертификаты    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_file-library.php"]    Библиотека файлов    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_show-sets.php"]    Анкеты / Инструкции    ignore_case=True
    #Check `Personal information` menu
    Element Text Should Be    class=menuTitle3    Личная информация    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_crit-history.php"]    Выполненные задания    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_report-refund.php"]    Информация по оплатам    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_add-refund.php"]    Добавить запись о возврате денег    ignore_case=True
    Element Text Should Be    xpath=//a[@href="checkers.php?edit=y&auth_mode=2"]    Профиль Тайного покупателя    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_agreements.php"]    Соглашения    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_edit-availability.php"]    Редакция рабочих часов    ignore_case=True
    #Page should contain    Примечание
    #Page should contain    Пожалуйста, убедитесь в том, что Вы внесли всю необходимую информацию.
    #Page should contain    Вы заполнили Ваш профиль на
    Page should contain    Добро пожаловать
    Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Выход из системы    ignore_case=True
    Log to console    Main Menu and its elements are available in selected language!

Switch language.AD
    [Arguments]    ${lang_ID}
    go to.AD    ${URL}/menu-manage.php
    Wait Until Page Contains Element    id=set-language
    ${lang}=    Set variable    //*[@id="user_lang_id"]/option[${lang_ID}]
    Click element    id=set-language
    Mouse over    id=language-dialog-form
    Sleep    1
    Wait Until Page Contains Element    id=set-language
    Select From List By Value    id=user_lang_id    ${lang_ID}
    Set Global Variable    ${lang_ID}
    Log    ${lang_ID}
    Sleep    1
    ${langX}=    Evaluate    ${lang_ID}+1
    ${lang2}=    Get Text    //*[@id="user_lang_id"]/option[${lang_ID}]
    ${lang3}=    Get Text    //*[@id="user_lang_id"]/option[${lang_ID}]
    ${lang4}=    Get Value    ${lang}
    ${lang5}=    Get Value    //*[@id="user_lang_id"]/option[${langX}]
    ${lang6}=    Get Value    //*[@id="user_lang_id"]
    Click Button    default=Ok
    Log to console    Selecting UI language --> "${lang5}"
    Run Keyword If    '${lang_ID}'=='11'    Set Global Variable    ${lang_ID}    ${XLS Column: en_UK}
    Run Keyword If    '${lang_ID}'=='42'    Set Global Variable    ${lang_ID}    ${XLS Column: ua_UA}
    Run Keyword If    '${lang_ID}'=='1'    Set Global Variable    ${lang_ID}    ${XLS Column: ar_EG}
    Run Keyword If    '${lang_ID}'=='2'    Set Global Variable    ${lang_ID}    ${XLS Column: ar_AE}
    Run Keyword If    '${lang_ID}'=='3'    Set Global Variable    ${lang_ID}    ${XLS Column: ar_SA}
    Run Keyword If    '${lang_ID}'=='4'    Set Global Variable    ${lang_ID}    ${XLS Column: bs_BA}
    Run Keyword If    '${lang_ID}'=='5'    Set Global Variable    ${lang_ID}    ${XLS Column: bg_BG}
    Run Keyword If    '${lang_ID}'=='6'    Set Global Variable    ${lang_ID}    ${XLS Column: hr_CR}
    Run Keyword If    '${lang_ID}'=='7'    Set Global Variable    ${lang_ID}    ${XLS Column: cs_CZ}
    Run Keyword If    '${lang_ID}'=='8'    Set Global Variable    ${lang_ID}    ${XLS Column: de_DE}
    Run Keyword If    '${lang_ID}'=='9'    Set Global Variable    ${lang_ID}    ${XLS Column: nl_NL}
    Run Keyword If    '${lang_ID}'=='10'    Set Global Variable    ${lang_ID}    ${XLS Column: en_AU}
    Run Keyword If    '${lang_ID}'=='12'    Set Global Variable    ${lang_ID}    ${XLS Column: en_US}
    Run Keyword If    '${lang_ID}'=='13'    Set Global Variable    ${lang_ID}    ${XLS Column: en_v2}
    Run Keyword If    '${lang_ID}'=='14'    Set Global Variable    ${lang_ID}    ${XLS Column: en_SRV}
    Run Keyword If    '${lang_ID}'=='20'    Set Global Variable    ${lang_ID}    ${XLS Column: nl_BE}
    Run Keyword If    '${lang_ID}'=='21'    Set Global Variable    ${lang_ID}    ${XLS Column: fr_FR}
    Run Keyword If    '${lang_ID}'=='22'    Set Global Variable    ${lang_ID}    ${XLS Column: fr_BE}
    Run Keyword If    '${lang_ID}'=='23'    Set Global Variable    ${lang_ID}    ${XLS Column: hu_HU}
    Run Keyword If    '${lang_ID}'=='24'    Set Global Variable    ${lang_ID}    ${XLS Column: jp_JP}
    Run Keyword If    '${lang_ID}'=='25'    Set Global Variable    ${lang_ID}    ${XLS Column: il_HE}
    Run Keyword If    '${lang_ID}'=='26'    Set Global Variable    ${lang_ID}    ${XLS Column: il_HEBAK}
    Run Keyword If    '${lang_ID}'=='27'    Set Global Variable    ${lang_ID}    ${XLS Column: il_HES}
    Run Keyword If    '${lang_ID}'=='28'    Set Global Variable    ${lang_ID}    ${XLS Column: it_IT}
    Run Keyword If    '${lang_ID}'=='29'    Set Global Variable    ${lang_ID}    ${XLS Column: lt_LTU}
    Run Keyword If    '${lang_ID}'=='30'    Set Global Variable    ${lang_ID}    ${XLS Column: mk_MK}
    Run Keyword If    '${lang_ID}'=='31'    Set Global Variable    ${lang_ID}    ${XLS Column: pl_PL}
    Run Keyword If    '${lang_ID}'=='32'    Set Global Variable    ${lang_ID}    ${XLS Column: pt_BR}
    Run Keyword If    '${lang_ID}'=='33'    Set Global Variable    ${lang_ID}    ${XLS Column: pt_PT}
    Run Keyword If    '${lang_ID}'=='34'    Set Global Variable    ${lang_ID}    ${XLS Column: ro_RO}
    Run Keyword If    '${lang_ID}'=='35'    Set Global Variable    ${lang_ID}    ${XLS Column: sr_SR}
    Run Keyword If    '${lang_ID}'=='36'    Set Global Variable    ${lang_ID}    ${XLS Column: sk_SK}
    Run Keyword If    '${lang_ID}'=='37'    Set Global Variable    ${lang_ID}    ${XLS Column: sl_SI}
    Run Keyword If    '${lang_ID}'=='38'    Set Global Variable    ${lang_ID}    ${XLS Column: zh_CM}
    Run Keyword If    '${lang_ID}'=='39'    Set Global Variable    ${lang_ID}    ${XLS Column: tu_TUR}
    Run Keyword If    '${lang_ID}'=='40'    Set Global Variable    ${lang_ID}    ${XLS Column: ua_RU}
    Run Keyword If    '${lang_ID}'=='41'    Set Global Variable    ${lang_ID}    ${XLS Column: ru_v2}
    Run Keyword If    '${lang_ID}'=='43'    Set Global Variable    ${lang_ID}    ${XLS Column: zh_SC}
    Run Keyword If    '${lang_ID}'=='44'    Set Global Variable    ${lang_ID}    ${XLS Column: zh_CM}
    Run Keyword If    '${lang_ID}'=='45'    Set Global Variable    ${lang_ID}    ${XLS Column: ka_GE}
    Run Keyword If    '${lang_ID}'=='46'    Set Global Variable    ${lang_ID}    ${XLS Column: nn_NO}
    Run Keyword If    '${lang_ID}'=='47'    Set Global Variable    ${lang_ID}    ${XLS Column: ru_Romir_Toyota}
    Run Keyword If    '${lang_ID}'=='16'    Set Global Variable    ${lang_ID}    ${XLS Column: es_CA}
    Run Keyword If    '${lang_ID}'=='17'    Set Global Variable    ${lang_ID}    ${XLS Column: es_SP}
    Log    [Translation file] relevant column is: "${lang_ID}".
    Check errors on page [-1]

Check Shoppers Ordered reviews page elements in English
    Click link    xpath=//a[@href="c_ordered-crits.php"]
    Page should not contain    warning
    Page should not contain    notice
    #Check Filters
    Wait Until Page Contains    Ordered reviews
    Page Should Contain Element    id=set-language
    Element Should Contain    //html/body/center/form/table/tbody/tr[1]/td[1]    Choose client\nSelect    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[2]    Choose job type:\nSelect    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[3]    Choose region\nSelect    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[4]    Branch    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[6]    Range start:    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[7]    Range end:    ignore_case=True
    Page Should Contain Element    id=Filter
    Page Should Contain Element    class=footers-info    #footer line
    #Check `Ordered scorecards` menu
    Element Text Should Be    //center/table/tbody/tr[1]/td    Ordered reviews    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_ordered-crits.php?showJobBoard=1"]    Show job board    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_show-sets.php"]    Show questionnaire    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_unfinished-crits.php"]    Continue unfinished review    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_branch-addresses.php"]    Branch addresses listing    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_edit-availability.php"]    Edit work hours    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Main menu    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off    ignore_case=True
    Log to console    Ordered reviews page and its elements are available in English!

Open Main Menu
    Click link    xpath=//a[@href="c_main.php"]
    Page should not contain    warning
    Page should not contain    notice
    Sleep    1

Check Shoppers Ordered reviews page elements in Russian
    Click link    xpath=//a[@href="c_ordered-crits.php"]
    #Check Filters
    Wait Until Page Contains    Ваши задания
    Page Should Contain Element    id=set-language
    Element Should Contain    //html/body/center/form/table/tbody/tr[1]/td[1]    Выбрать клиента\nВыбрать    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[2]    Выбрать тип проекта:\nВыбрать    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[3]    Выбрать регион:\nВыбрать    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[4]    Название точки    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[6]    С:    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[7]    По:    ignore_case=True
    Page Should Contain Element    id=Filter
    Page Should Contain Element    class=footers-info    #footer line
    #Check `Ordered scorecards` menu
    Element Text Should Be    //center/table/tbody/tr[1]/td    Ваши задания    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_ordered-crits.php?showJobBoard=1"]    Предлагаемые задания    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_show-sets.php"]    Анкеты / Инструкции    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_unfinished-crits.php"]    Продолжить незавершенный отчет    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_branch-addresses.php"]    Список адресов точек    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_edit-availability.php"]    Редакция рабочих часов    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Основное меню    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Выход из системы    ignore_case=True
    Log to console    Ordered reviews page and its elements are available in English!

Check Shoppers Job Board Page elements in English
    Click link    xpath=//a[@href="c_ordered-crits.php?showJobBoard=1"]
    #Check `Page elements` menu
    Wait Until Page Contains Element    xpath=//a[@href="c_logoff.php"]
    Element Text Should Be    //table/tbody/tr/td[2]/span    Job board    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[1]    Choose client\nSelect    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[2]    Choose job type:\nSelect    ignore_case=True
    Page Should Contain    Choose region
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[4]    Choose city\nSelect    ignore_case=True
    Element Text Should Be    //center/form/table/tbody/tr[1]/td[5]    Branch    ignore_case=True
    Page Should Contain Element    id=date_from
    Page Should Contain Element    id=date_to
    Page Should Contain    Range start:
    Page Should Contain    Range end:
    Page Should Contain Element    //*[@id="Filter"]
    Page Should Contain    Select options and click on 'Display', in order to show available jobs
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off
    Page Should Contain Element    class=footers-info    #footer line
    #Check `Ordered reviews` menu
    Element Text Should Be    xpath=//a[@href="c_ordered-crits.php"]    Ordered reviews    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_show-sets.php"]    Show questionnaire    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_unfinished-crits.php"]    Continue unfinished review    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_branch-addresses.php"]    Branch addresses listing    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_edit-availability.php"]    Edit work hours    ignore_case=True
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Main menu    ignore_case=True
    Log to console    Job Board page and its elements are available in English!

Check Initiate Review Page elements in English
    Click link    xpath=//a[@href="c_choose-client.php"]
    #Check `Page elements` menu
    Wait Until Page Contains Element    xpath=//a[@href="c_logoff.php"]
    Page Should Contain    Choose client
    Page Should Contain    Choose client
    Page Should Contain Element    id=ClientID
    Element Text Should Be    id=set-language    Language
    Page Should Contain Element    class=footers-info    #footer line
    Log to console    Initiate Review page and its elements are available in English!

Check Unfinished reviews Page elements in English
    Click link    xpath=//a[@href="c_unfinished-crits.php"]
    #Check `Page elements` menu
    Wait Until Page Contains Element    xpath=//a[@href="c_main.php"]
    Page Should Contain    Unfinished reviews
    Page Should Contain    Please choose a review you wish to continue filling:
    Page Should Contain Element    id=table_rows
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[1]    Review number
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[2]/a    Start time
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[3]/a    Questionnaire name
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[4]/a    Short branch name
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[5]/a    City
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[6]/a    Region name
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[7]/a    Address
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[8]/a    Client name
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[9]/a    Was sent back to reviewer
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[10]/a    Description
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[11]/a    Sample
    Page Should Contain Element    class=footers-info    #footer line
    #Page Should Contain    There are no unfinished reviews.
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Main menu
    Log to console    Unfinished reviews page and its elements are available in English!

Check Surveys selection Page elements in English
    Click link    xpath=//a[@href="c_survey-select.php"]
    #Check `Page elements` menu
    Wait Until Page Contains Element    xpath=//a[@href="c_main.php"]
    Page Should Contain    Please select a survey
    Page Should Contain    Surveys selection
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Back to main menu
    #Check `Table`
    Page Should Contain Element    id=table_rows
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[1]    Survey name
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[2]    Questionnaire name
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[3]    Sample name
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[4]    Note for surveyors
    #Page Should Contain    There are no unfinished reviews.
    Log to console    Surveys selection page and its elements are available in English!

Check Branch addresses listing Page elements in English
    Click link    xpath=//a[@href="c_branch-addresses.php"]
    #Check `Page elements` menu
    Wait Until Page Contains Element    xpath=//a[@href="c_main.php"]
    Page Should Contain    Branch addresses listing
    Page Should Contain    Choose client:
    Page Should Contain Element    id=ClientID
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Main menu
    Page Should Contain Element    //*[@id="go"]
    Log to console    Surveys selection page and its elements are available in English!

Check CheckerTificate Page elements in English
    Click link    xpath=//a[@href="c_certificate-list.php"]
    Wait Until Page Contains Element    xpath=//a[@href="c_main.php"]
    #Check 'default' page elements
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Main menu
    Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off
    #Check page elements
    Page Should Contain    CheckerTificate
    Page Should Contain    Select the CheckerTificate program you wish to take:
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[1]    Status
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[2]    Certificate Name
    Log to console    Page and its elements are available in English!

Check Files library Page elements in English
    Click link    xpath=//a[@href="c_file-library.php"]
    #Check 'default' page elements
    Wait Until Page Contains Element    xpath=//a[@href="c_main.php"]
    Page Should Contain    Files library
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Main menu
    Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off
    Element Text Should Be    xpath=//a[@href="javascript:history.go(-1);"]    Go back
    #Check page elements
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[1]    Name
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[2]    Description
    Log to console    Page and its elements are available in English!

Check `Show questionnaire`page elements in English
    Click link    xpath=//a[@href="c_crit-history.php"]
    #Check 'default' page elements
    Wait Until Page Contains Element    xpath=//a[@href="c_main.php"]
    Page Should Contain    Survey history
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Main menu
    Page Should Contain Element    //body/div[3]
    Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off
    Element Text Should Be    xpath=//a[@href="javascript:history.go(-1);"]    Go back
    #Check page elements
    Page Should Contain    Date
    Page Should Contain Element    id=show
    Page Should Contain Element    id=TheDate
    Log to console    Page and its elements are available in English!

Check `Personal refund report` page elements in English
    Click link    xpath=//a[@href="c_report-refund.php"]
    #Check 'default' page elements
    Wait Until Page Contains Element    xpath=//a[@href="c_main.php"]
    Page Should Contain    Personal refund report
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Main menu
    Page Should Contain Element    class=footers-info    #footer line
    #Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off
    #Element Text Should Be    xpath=//a[@href="javascript:history.go(-1);"]    Go back
    #Check page elements
    Page Should Contain    Date range
    Page Should Contain    Approved
    Page Should Contain    Paid:
    Page Should Contain    Flow type
    Page Should Contain    Report type
    Page Should Contain Element    id=go
    Page Should Contain Element    id=TheDate
    Page Should Contain Element    id=ApprovedFilter
    Page Should Contain Element    id=PaidFilter
    Page Should Contain Element    id=fyf
    Page Should Contain Element    id=ReportType
    Log to console    Page and its elements are available in English!

Check `Add refund record` page elements in English
    Click link    xpath=//a[@href="c_add-refund.php"]
    #Check 'default' page elements
    Wait Until Page Contains Element    id=set-language
    Page Should Contain    Add refund record
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    //center/center/p[2]/a    Back to main menu
    Page Should Contain Element    class=footers-info    #footer line
    #Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off
    #Element Text Should Be    xpath=//a[@href="javascript:history.go(-1);"]    Go back
    #Check page elements
    #Page Should Contain    No items found
    Page Should Contain Element    //*[@id="big_tedit_wrapping_table"]/tbody/tr/td/table/tbody/tr/td[2]/button
    Page Should Contain Element    //*[@id="page_division_wrapping_table"]/tbody/tr/td[1]/input[1]
    #Page Should Contain    Showing all
    Page Should Contain Element    //*[@id="page_division_wrapping_table"]/tbody/tr/td[1]
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[1]    Value
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[2]    Description
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[3]    Invoice number
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[4]    FlowName
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[5]    Added by user
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[6]    Card number
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[7]    Added at
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[8]    Linked review
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[9]    Linked client
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[10]    Linked branch
    Log to console    Page and its elements are available in English!

Check `Preferred regions` page elements in English
    Click link    default=Preferred regions
    #Check 'default' page elements
    Wait Until Page Contains Element    id=set-language
    Page Should Contain    Preferred regions
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_survey-select.php"]    Back to main menu
    Page Should Contain Element    class=footers-info    #footer line
    #Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off
    #Element Text Should Be    xpath=//a[@href="javascript:history.go(-1);"]    Go back
    #Check page elements
    #Page Should Contain    No items found
    Page Should Contain Element    id=update
    Page Should Contain    Preferred regions for reviewer
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[1]/a    Select
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[2]/a    Region name
    Element Text Should Be    //*[@id="table_rows"]/thead/tr/th[3]/a    Country name
    Log to console    Page and its elements are available in English!

Check `Edit personal information` page elements in English
    Click link    default=Edit personal information
    #Check 'default' page elements
    Wait Until Page Contains Element    id=set-language
    Page Should Contain    Edit personal information
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Element Text Should Be    id=set-language    Language
    #Element Text Should Be    xpath=//a[@href="c_survey-select.php"]    Back to main menu
    Page Should Contain Element    class=footers-info    #footer line
    #Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off
    #Element Text Should Be    xpath=//a[@href="javascript:history.go(-1);"]    Go back
    #Check page elements
    #Page Should Contain    No items found
    Page Should Contain Element    //*[@id="save"]
    Page Should Contain    ReviewerID \
    Page Should Contain    Delete picture
    Page Should Contain    Upload a different picture
    Page Should Contain Element    //*[@id="shopper_list"]/input[1]
    Page Should Contain Element    //*[@id="shopper_list"]/a/img
    Page Should Contain    Password \
    Page Should Contain    Letters and numbers only
    Page Should Contain    Edit
    Page Should Contain    Full name
    Page Should Contain    Password
    Page Should Contain    Picture
    Page Should Contain    Address
    Page Should Contain    Country
    Page Should Contain    Region
    Page Should Contain    City
    Page Should Contain Element    //*[@id="save"]
    Page Should Contain Button    default=Cancel
    Element Text Should Be    //html/body/center/a    Remove yourself from the system
    Log to console    Page and its elements are available in English!

Check `Agreements` page elements in English
    Click link    xpath=//a[@href="c_agreements.php"]
    #Check 'default' page elements
    Wait Until Page Contains Element    id=set-language
    Page Should Contain    Show agreements
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Element Text Should Be    id=set-language    Language
    #Element Text Should Be    xpath=//a[@href="c_survey-select.php"]    Back to main menu
    Page Should Contain Element    class=footers-info    #footer line
    Element Text Should Be    xpath=//a[@href="c_main.php"]    Main menu
    #Element Text Should Be    xpath=//a[@href="javascript:history.go(-1);"]    Go back
    #Check page elements
    #Page Should Contain    No items found
    Log to console    Page and its elements are available in English!

Check `Edit work hours` page elements in English
    Click link    xpath=//a[@href="c_edit-availability.php"]
    #Check 'default' page elements
    Wait Until Page Contains Element    id=set-language
    Page Should Contain    Edit work hours
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Element Text Should Be    id=set-language    Language
    Element Text Should Be    xpath=//a[@href="c_survey-select.php"]    Back to main menu
    Page Should Contain Element    class=footers-info    #footer line
    #Element Text Should Be    xpath=//a[@href="c_logoff.php"]    Log off
    #Element Text Should Be    xpath=//a[@href="javascript:history.go(-1);"]    Go back
    #Check page elements
    #Page Should Contain    No items found
    Page Should Contain Element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td[2]/button
    Element Text Should Be    //*[@id="c_availability"]/thead/tr/th[1]    ID
    Element Text Should Be    //*[@id="c_availability"]/thead/tr/th[2]    Date
    Element Text Should Be    //*[@id="c_availability"]/thead/tr/th[3]    Day in week
    Element Text Should Be    //*[@id="c_availability"]/thead/tr/th[4]    Start time
    Element Text Should Be    //*[@id="c_availability"]/thead/tr/th[5]    End time
    Log to console    Page and its elements are available in English!

Check Main Page elements
    [Arguments]    ${lang_ID}
    # Activate all main menu elements!
    go to.AD    ${URL}/main-menu.php
    # not valid locator - doesnot work CheckLanguageKeyword \ \ \ Waiting-plural for assignment \ \ \ ${lang_ID}
    # not valid locator - doesnot work CheckLanguageKeyword \ \ \ Of which are urgent: \ \ \ ${lang_ID}
    # not valid locator - doesnot work CheckLanguageKeyword \ \ \ Expired assignments: \ \ \ ${lang_ID}
    # not valid locator - doesnot work CheckLanguageKeyword \ \ \ Mass orders awaiting approval \ \ \ ${lang_ID}
    # not valid locator - doesnot work CheckLanguageKeyword \ \ \ Search \ \ \ ${lang_ID}
    CheckLanguageKeyword    GoToUserMainMenuOptions    ${lang_ID}
    CheckLanguageKeyword    Assignations    ${lang_ID}
    CheckLanguageKeyword    Assignments confirmation    ${lang_ID}
    CheckLanguageKeyword    Criticisms    ${lang_ID}
    CheckLanguageKeyword    Budget control    ${lang_ID}
    CheckLanguageKeyword    menu-operation.php    ${lang_ID}
    # \ \ \ Waiting for acceptance:
    # \ \ \ Of which are urgent:
    # \ \ \ Expired while waiting for acceptance:
    # \ \ \ Waiting for implementation:
    # \ \ \ In progress:
    # \ \ \ Awaiting approval:
    # \ \ \ Expired after acceptance:
    # \ \ \ Active assessors count:
    # \ \ \ Unconfirmed self registered assessors count:
    # \ \ \ Active clients count:
    # \ \ \ Scorecards left:
    # \ \ \ Phone surveys left:
    # \ \ \ Internet surveys left:
    # \ \ \ Certifications left:
    # \ \ \ Panel reviews left:
    # \ \ \ SMS surveys left:
    # \ \ \ Field surveys left:
    # \ \ \ Email surveys left:
    # \ \ \ Shelf surveys left:
    # \ \ \ Imported reviews left:
    # \ \ \ SMSs left:
    # \ \ \ Files storage quota
    # \ \ \ Archive storage quota
    Page should contain element    //*[@id="main_menu_title_text"]/tbody/tr/td[3]/form
    Check Main menu elements    ${lang_ID}

Check Management page elements
    [Arguments]    ${lang_ID}
    go to.AD    ${URL}/menu-manage.php
    #CheckLanguageKeyword    Call Center Dashboard    ${lang_ID}
    CheckLanguageKeyword    General    ${lang_ID}
    CheckLanguageKeyword    Clients    ${lang_ID}
    CheckLanguageKeyword    panelists.php    ${lang_ID}
    CheckLanguageKeyword    checkers.php    ${lang_ID}
    CheckLanguageKeyword    messages.php    ${lang_ID}
    CheckLanguageKeyword    messages.php-description    ${lang_ID}
    CheckLanguageKeyword    users.php    ${lang_ID}
    # Element Text Should Be \ \ \ xpath=//a[@href=""]
    CheckLanguageKeyword    Phone surveys    ${lang_ID}
    CheckLanguageKeyword    Surveys.php    ${lang_ID}
    CheckLanguageKeyword    phone-survey-management.php    ${lang_ID}
    CheckLanguageKeyword    samples.php    ${lang_ID}
    CheckLanguageKeyword    phone-survey-management-summary.php    ${lang_ID}
    CheckLanguageKeyword    Client actions    ${lang_ID}
    CheckLanguageKeyword    report-client-actions.php    ${lang_ID}
    CheckLanguageKeyword    EditActions    ${lang_ID}
    Check Main menu elements    ${lang_ID}

Check Main menu elements
    [Arguments]    ${lang_ID}
    Page should contain element    //form/input[@class='searchClass']
    Page should not contain    warning
    Page should not contain    notice
    #CheckLanguageKeyword    UserLanguage    ${lang_ID}
    CheckLanguageKeyword    Language    ${lang_ID}
    CheckLanguageKeyword    MainMenu    ${lang_ID}
    CheckLanguageKeyword    menu-manage.php    ${lang_ID}
    CheckLanguageKeyword    menu-questions.php    ${lang_ID}
    CheckLanguageKeyword    menu-training.php    ${lang_ID}
    CheckLanguageKeyword    menu-operation.php    ${lang_ID}
    CheckLanguageKeyword    menu-reports.php    ${lang_ID}
    CheckLanguageKeyword    menu-import.php    ${lang_ID}
    CheckLanguageKeyword    user-guide.php    ${lang_ID}
    CheckLanguageKeyword    menu-settings.php    ${lang_ID}
    CheckLanguageKeyword    logoff.php    ${lang_ID}
    Page should contain element    //form/input[@class='searchClass']

Check Questionnaires page elements
    [Arguments]    ${lang_ID}
    go to.AD    ${URL}/menu-questions.php
    CheckLanguageKeyword    sets.php-description    ${lang_ID}
    CheckLanguageKeyword    chapters.php    ${lang_ID}
    CheckLanguageKeyword    custom-scales.php    ${lang_ID}
    CheckLanguageKeyword    question-lookup.php    ${lang_ID}
    CheckLanguageKeyword    bankq-print.php    ${lang_ID}
    CheckLanguageKeyword    menu-questions.php    ${lang_ID}
    CheckLanguageKeyword    sets.php    ${lang_ID}
    #CheckLanguageKeyword    Sets    ${lang_ID}
    CheckLanguageKeyword    set-type-characteristics.php    ${lang_ID}
    CheckLanguageKeyword    AdvancedOptions    ${lang_ID}
    CheckLanguageKeyword    question-settings-for-reports.php    ${lang_ID}
    CheckLanguageKeyword    help-text-subst-codes.php    ${lang_ID}
    #CheckLanguageKeyword    Client task types    ${lang_ID}
    Check Main menu elements    ${lang_ID}

Check Certification page elements
    [Arguments]    ${lang_ID}
    Go to    ${URL}/menu-training.php
    Page should not contain    warning
    Page should not contain    notice
    Check Main menu elements    ${lang_ID}
    CheckLanguageKeyword    CheckerTificate    ${lang_ID}
    CheckLanguageKeyword    certificates.php    ${lang_ID}
    CheckLanguageKeyword    cert_map.php    ${lang_ID}
    CheckLanguageKeyword    report-certifications.php    ${lang_ID}

Check Operation page elements
    [Arguments]    ${lang_ID}
    Go to    ${URL}/menu-operation.php
    Page should not contain    warning
    Page should not contain    notice
    CheckLanguageKeyword    operation-panel.php    ${lang_ID}
    CheckLanguageKeyword    items-assignment-manual-per-user.php    ${lang_ID}
    CheckLanguageKeyword    reviews-edit.php    ${lang_ID}
    CheckLanguageKeyword    order-send-to-suitable.php    ${lang_ID}
    CheckLanguageKeyword    items-assignment-manual.php    ${lang_ID}
    CheckLanguageKeyword    Orders    ${lang_ID}
    CheckLanguageKeyword    FieldOrder    ${lang_ID}
    CheckLanguageKeyword    shahar_bridge.php?name=mass_order-description    ${lang_ID}
    CheckLanguageKeyword    crit-do-order.php    ${lang_ID}
    CheckLanguageKeyword    crit-do-order.php-description    ${lang_ID}
    #CheckLanguageKeyword    menu-operation.php    ${lang_ID}
    CheckLanguageKeyword    crits-handling.php    ${lang_ID}
    CheckLanguageKeyword    orders-assignment-manual.php    ${lang_ID}
    CheckLanguageKeyword    crit-orders-handle.php    ${lang_ID}
    CheckLanguageKeyword    crit-orders-handle.php-description    ${lang_ID}
    CheckLanguageKeyword    orders-management.php    ${lang_ID}
    CheckLanguageKeyword    checkers-assignation.php    ${lang_ID}
    CheckLanguageKeyword    mass-sms.php    ${lang_ID}
    CheckLanguageKeyword    check-condition.php    ${lang_ID}
    #CheckLanguageKeyword    users-files.php    ${lang_ID}
    CheckLanguageKeyword    perform-crit-as-checker.php    ${lang_ID}
    #CheckLanguageKeyword    Answer recoding    ${lang_ID}
    CheckLanguageKeyword    mass-answer-recode.php    ${lang_ID}
    CheckLanguageKeyword    crit-show-by-id.php    ${lang_ID}
    CheckLanguageKeyword    checkers-files-settings.php    ${lang_ID}
    CheckLanguageKeyword    General    ${lang_ID}
    CheckLanguageKeyword    field-surveys.php    ${lang_ID}
    CheckLanguageKeyword    Field surveys    ${lang_ID}
    CheckLanguageKeyword    field-surveys-activity-map.php    ${lang_ID}
    CheckLanguageKeyword    InternetSurveys    ${lang_ID}
    CheckLanguageKeyword    internet-surveys.php    ${lang_ID}
    CheckLanguageKeyword    PanelSurveys    ${lang_ID}
    CheckLanguageKeyword    panel-surveys.php    ${lang_ID}
    CheckLanguageKeyword    Recycle bin    ${lang_ID}
    CheckLanguageKeyword    criticisms-cancellation.php    ${lang_ID}
    CheckLanguageKeyword    criticisms-purge-binary-data.php    ${lang_ID}
    #CheckLanguageKeyword    crits-remove-data.php    ${lang_ID}
    Check Main menu elements    ${lang_ID}

Check Report page elements
    [Arguments]    ${lang_ID}
    Go to    ${URL}/menu-reports.php
    Page should not contain    warning
    Page should not contain    notice
    CheckLanguageKeyword    System reports    ${lang_ID}
    CheckLanguageKeyword    report-property.php    ${lang_ID}
    CheckLanguageKeyword    report-property.php-description    ${lang_ID}
    CheckLanguageKeyword    report-prop-xref.php    ${lang_ID}
    CheckLanguageKeyword    report-investigator.php    ${lang_ID}
    CheckLanguageKeyword    report-question-by-question.php    ${lang_ID}
    CheckLanguageKeyword    crit-show-by-id-anls.php    ${lang_ID}
    CheckLanguageKeyword    report-question-perflevel-gauge.php    ${lang_ID}
    CheckLanguageKeyword    report-question-groups.php    ${lang_ID}
    CheckLanguageKeyword    report-survey-stats.php    ${lang_ID}
    CheckLanguageKeyword    report-property-benchmark.php    ${lang_ID}
    CheckLanguageKeyword    report-performance-concentr.php    ${lang_ID}
    CheckLanguageKeyword    report-browser.php    ${lang_ID}
    CheckLanguageKeyword    report-deviancy.php    ${lang_ID}
    CheckLanguageKeyword    report-deviancy.php-description    ${lang_ID}
    CheckLanguageKeyword    report-perf-level.php    ${lang_ID}
    CheckLanguageKeyword    report-perf-level-by-prop.php    ${lang_ID}
    CheckLanguageKeyword    report-combined.php    ${lang_ID}
    CheckLanguageKeyword    report-network-status.php    ${lang_ID}
    CheckLanguageKeyword    report-network-status.php-description    ${lang_ID}
    CheckLanguageKeyword    report-grade-by-question.php    ${lang_ID}
    CheckLanguageKeyword    client-kpi-settings.php    ${lang_ID}
    CheckLanguageKeyword    report-perf-level-2.php    ${lang_ID}
    CheckLanguageKeyword    report-perf-levels-by-datecycle.php    ${lang_ID}
    CheckLanguageKeyword    report-results-breakdown.php    ${lang_ID}
    CheckLanguageKeyword    report-answer-percentage.php    ${lang_ID}
    CheckLanguageKeyword    Product reports    ${lang_ID}
    CheckLanguageKeyword    report-pos-analysis.php    ${lang_ID}
    CheckLanguageKeyword    report-product-question.php    ${lang_ID}
    CheckLanguageKeyword    Checker reports    ${lang_ID}
    CheckLanguageKeyword    report-operation-performence.php    ${lang_ID}
    CheckLanguageKeyword    report-perf-status.php    ${lang_ID}
    CheckLanguageKeyword    report-refusals.php-description    ${lang_ID}
    CheckLanguageKeyword    report-acqusitions-for-client.php    ${lang_ID}
    CheckLanguageKeyword    report-surveyors-performance.php    ${lang_ID}
    CheckLanguageKeyword    report-crit-modifications.php    ${lang_ID}
    CheckLanguageKeyword    report-branches-sets-asgn-objctvs.php    ${lang_ID}
    CheckLanguageKeyword    report-cash-flow.php    ${lang_ID}
    CheckLanguageKeyword    report-cash-flow.php-description    ${lang_ID}
    CheckLanguageKeyword    report-summary-for-client.php    ${lang_ID}
    CheckLanguageKeyword    report-checkers-performance.php    ${lang_ID}
    CheckLanguageKeyword    report-checkers-performance.php-description    ${lang_ID}
    CheckLanguageKeyword    report-checker-perf-details.php    ${lang_ID}
    CheckLanguageKeyword    report-checkers-refund.php    ${lang_ID}
    CheckLanguageKeyword    report-client-billing.php    ${lang_ID}
    CheckLanguageKeyword    Operation reports    ${lang_ID}
    CheckLanguageKeyword    report-branches.php    ${lang_ID}
    CheckLanguageKeyword    report-calls.php    ${lang_ID}
    CheckLanguageKeyword    report-branch-properties.php    ${lang_ID}
    CheckLanguageKeyword    report-branch-properties.php-description    ${lang_ID}
    CheckLanguageKeyword    report-users-refund.php    ${lang_ID}
    CheckLanguageKeyword    report-sms.php    ${lang_ID}
    CheckLanguageKeyword    report-sms.php-description    ${lang_ID}
    CheckLanguageKeyword    report-checker-props.php    ${lang_ID}
    CheckLanguageKeyword    report-checker-props.php-description    ${lang_ID}
    CheckLanguageKeyword    report-burned_checkers.php    ${lang_ID}
    CheckLanguageKeyword    report-client-profitability.php    ${lang_ID}
    #CheckLanguageKeyword    report-email.php    ${lang_ID}
    CheckLanguageKeyword    report-checker-pics.php    ${lang_ID}
    CheckLanguageKeyword    report-logins.php    ${lang_ID}
    #CheckLanguageKeyword    report-client-activity-concentration.php    ${lang_ID}
    #CheckLanguageKeyword    Survey    ${lang_ID}
    CheckLanguageKeyword    report-survey-breakdown.php    ${lang_ID}
    #CheckLanguageKeyword    General    ${lang_ID}
    CheckLanguageKeyword    export-crits-3.php    ${lang_ID}
    CheckLanguageKeyword    report-surveyors-status.php    ${lang_ID}
    CheckLanguageKeyword    export-crits2.php    ${lang_ID}
    CheckLanguageKeyword    report-client-actions.php    ${lang_ID}
    CheckLanguageKeyword    reports-list.php    ${lang_ID}
    CheckLanguageKeyword    report-client-actions-summary.php    ${lang_ID}
    CheckLanguageKeyword    reports-tabs.php    ${lang_ID}
    CheckLanguageKeyword    client-reviews-status-management.php    ${lang_ID}
    #CheckLanguageKeyword    ExportedDataReportsController    ${lang_ID}
    Check Main menu elements    ${lang_ID}

Check Import page elements
    [Arguments]    ${lang_ID}
    Go to    ${URL}/menu-import.php
    CheckLanguageKeyword    import-branches.php    ${lang_ID}
    CheckLanguageKeyword    import-checkers.php    ${lang_ID}
    CheckLanguageKeyword    Import-products.php    ${lang_ID}
    CheckLanguageKeyword    import-zipcodes.php    ${lang_ID}
    CheckLanguageKeyword    import-workers.php    ${lang_ID}
    CheckLanguageKeyword    import-cities.php    ${lang_ID}
    CheckLanguageKeyword    import-users.php    ${lang_ID}
    CheckLanguageKeyword    import-branch-contacts.php    ${lang_ID}
    CheckLanguageKeyword    Import-orders-mass.php    ${lang_ID}
    CheckLanguageKeyword    Import-orders-multiple.php    ${lang_ID}
    CheckLanguageKeyword    Criticisms    ${lang_ID}
    CheckLanguageKeyword    import-profiles.php    ${lang_ID}
    #CheckLanguageKeyword    import-filelist.php    ${lang_ID}
    CheckLanguageKeyword    auto-import-filelist.php    ${lang_ID}
    CheckLanguageKeyword    import-upload.php    ${lang_ID}
    CheckLanguageKeyword    import-action.php    ${lang_ID}
    Check Main menu elements    ${lang_ID}
    CheckLanguageKeyword    Orders    ${lang_ID}
    Upload file for import
    Branch codes for importing
    Perform import
    Auto import profiles

Check Userguide page elements
    [Arguments]    ${lang_ID}
    Go to    ${URL}/user-guide.php
    Check Main menu elements    ${lang_ID}
    #

Check Settings page elements
    [Arguments]    ${lang_ID}
    Go to    ${URL}/menu-settings.php
    Check Main menu elements    ${lang_ID}
    Page should not contain    warning
    Page should not contain    notice
    # \ \ \ Element Text Should Be \ \ \ xpath=//a[@href=""]
    Element Text Should Be    //*[@id="FiltersArea"]/table/tbody/tr/td/table/tbody/tr[2]/td/span    Company
    Element Text Should Be    xpath=//a[@href="company-display.php"]    Display
    Element Text Should Be    xpath=//a[@href="company-email.php"]    Company e-mail settings
    Element Text Should Be    xpath=//a[@href="icons-settings.php"]    Icons settings
    Element Text Should Be    xpath=//a[@href="company-css-images.php"]    Images for system design
    Element Text Should Be    xpath=//a[@href="company-info.php"]    General information
    Element Text Should Be    xpath=//a[@href="company-email-accounts.php"]    Email accounts
    Element Text Should Be    xpath=//a[@href="company-css-editor.php"]    System design editor
    Element Text Should Be    xpath=//a[@href="privacy-management.php"]    Privacy management
    Element Text Should Be    xpath=//a[@href="company-images.php"]    Company images settings
    Element Text Should Be    xpath=//a[@href="company_default_footers.php"]    Default Email footers
    Element Text Should Be    xpath=//a[@href="company-css-editor-popup.php"]    Company CSS Editor
    Element Text Should Be    xpath=//a[@href="required-agreements.php"]    Required agreements
    #
    Element Text Should Be    //*[@id="FiltersArea"]/table/tbody/tr/td/table/tbody/tr[7]/td/span    Regional settings
    Element Text Should Be    xpath=//a[@href="countries.php"]    Countries settings
    Element Text Should Be    xpath=//a[@href="region-cities.php"]    Associate regions to city
    Element Text Should Be    xpath=//a[@href="regions.php"]    Regions settings
    Element Text Should Be    xpath=//a[@href="country-regions.php"]    Associate regions to country
    Element Text Should Be    xpath=//a[@href="cities.php"]    Cities definitions
    #
    Element Text Should Be    //*[@id="FiltersArea"]/table/tbody/tr/td/table/tbody/tr[10]/td/span    Operation
    Element Text Should Be    xpath=//a[@href="company-operation.php"]    Operation settings
    Element Text Should Be    xpath=//a[@href="settings-jobboard.php"]    Job board settings
    Element Text Should Be    xpath=//a[@href="company-user-automatic-notifications.php"]    Users automatic notifications
    Element Text Should Be    xpath=//a[@href="panelist-props.php"]    Panelists properties
    Element Text Should Be    xpath=//a[@href="company-agreements.php"]    Agreements
    Element Text Should Be    xpath=//a[@href="company-operation-messages.php"]    Operation messages
    Element Text Should Be    xpath=//a[@href="company_shopper_reg.php"]    Assessors self registration
    Element Text Should Be    xpath=//a[@href="company-checker-disp.php"]    Assessor display settings
    Element Text Should Be    xpath=//a[@href="company-panel-settings.php"]    Panels settings
    Element Text Should Be    xpath=//a[@href="index.php?Controller=CallCenterShifts&Action=ListShifts"]    Phone surveys settings
    Element Text Should Be    xpath=//a[@href="company-assignments.php"]    Assignments settings
    Element Text Should Be    xpath=//a[@href="company-checker-automatic-notifications.php"]    Assessors automatic notifications settings
    Element Text Should Be    xpath=//a[@href="checker-props.php"]    Assessor characteristics
    Element Text Should Be    xpath=//a[@href="qa-questions.php"]    Quality assurance questions
    #
    Element Text Should Be    //*[@id="FiltersArea"]/table/tbody/tr/td/table/tbody/tr[16]/td/span    Administration
    Element Text Should Be    xpath=//a[@href="user-role-types.php"]    Roles
    Element Text Should Be    xpath=//a[@href="currencies.php"]    Currencies
    Element Text Should Be    xpath=//a[@href="settings-creditcards.php"]    Edit credit cards
    Element Text Should Be    xpath=//a[@href="settings-bank-names.php"]    Edit bank names
    Element Text Should Be    xpath=//a[@href="stage-types.php"]    Types of QA stages
    Element Text Should Be    xpath=//a[@href="cash-flow-types.php"]    Edit cash flow types
    Element Text Should Be    xpath=//a[@href="settings-creditcard-types.php"]    Edit credit card types
    Element Text Should Be    xpath=//a[@href="settings-holidays.php"]    Holidays definitions
    Element Text Should Be    xpath=//a[@href="alt-langs.php"]    Alternative languages
    Element Text Should Be    xpath=//a[@href="client-cash-flow-types.php"]    Client cash flow types
    Element Text Should Be    xpath=//a[@href="company-panel-trns-types.php"]    Panel return types
    Element Text Should Be    xpath=//a[@href="settings-special-days.php"]    Special days definitions
    #
    Element Text Should Be    //*[@id="FiltersArea"]/table/tbody/tr/td/table/tbody/tr[21]/td/span    Customization
    Element Text Should Be    xpath=//a[@href="table-fields.php"]    Custom fields
    Element Text Should Be    xpath=//a[@href="index.php?Controller=BlockedIPs"]    Blocked IPs
    Element Text Should Be    xpath=//a[@href="attachment-types.php"]    Attachment types
    Element Text Should Be    xpath=//a[@href="index.php?Controller=IPWhiteList"]    Whitelisted IPs
    Element Text Should Be    xpath=//a[@href="sb-api.php"]    [-1]sb-api.php

Get translation file
    [Arguments]    ${SavedLanguageID}
    Open Excel    ${TranslationFile}
    Check Cell Type    ${SheetName}    2    1
    ${Count1}    Get Column Count    ${SheetName}
    @{Count1}    ExcelLibrary.Get Column Values    ${SheetName}    5
    #FOR    ${Var1}    IN    @{Count1}
    # \ \ \ Log to Console \ \ \ ${Var1}
    ${Count1}    Get Sheet Names
    ${Count1}    Get Row Count    ${SheetName}
    ${Var1}    Read Cell Data By Coordinates    ${SheetName}    1    10
    Log    ${Var1}
    Run Keyword If    '${SavedLanguageID}'=='${English UK}'    Get translation from file    ${XLS Column: en_UK}
    Run Keyword If    '${SavedLanguageID}'=='${Ukrainian}'    Get translation from file    ${XLS Column: ua_UA}
    Run Keyword If    '${SavedLanguageID}'=='${Arabic (Egypt)}'    Get translation from file    ${XLS Column: ar_EG}
    Run Keyword If    '${SavedLanguageID}'=='${Arabic (Saudi Arabia)}'    Get translation from file    ${XLS Column: ar_AE}
    Run Keyword If    '${SavedLanguageID}'=='${Arabic (UAE)}'    Get translation from file    ${XLS Column: ar_SA}
    Run Keyword If    '${SavedLanguageID}'=='${Bosnian}'    Get translation from file    ${XLS Column: bs_BA}
    Run Keyword If    '${SavedLanguageID}'=='${Bulgarian}'    Get translation from file    ${XLS Column: bg_BG}
    Run Keyword If    '${SavedLanguageID}'=='${Croatian}'    Get translation from file    ${XLS Column: hr_CR}
    Run Keyword If    '${SavedLanguageID}'=='${Czech}'    Get translation from file    ${XLS Column: cs_CZ}
    Run Keyword If    '${SavedLanguageID}'=='${German}'    Get translation from file    ${XLS Column: de_DE}
    Run Keyword If    '${SavedLanguageID}'=='${Dutch}'    Get translation from file    ${XLS Column: nl_NL}
    Run Keyword If    '${SavedLanguageID}'=='${English Australia}'    Get translation from file    ${XLS Column: en_AU}
    Run Keyword If    '${SavedLanguageID}'=='${English US}'    Get translation from file    ${XLS Column: en_US}
    Run Keyword If    '${SavedLanguageID}'=='${English v2}'    Get translation from file    ${XLS Column: en_v2}
    Run Keyword If    '${SavedLanguageID}'=='${English (Retail surveys)}'    Get translation from file    ${XLS Column: en_SRV}
    Run Keyword If    '${SavedLanguageID}'=='${Dutch Flemish}'    Get translation from file    ${XLS Column: nl_BE}
    Run Keyword If    '${SavedLanguageID}'=='${French}'    Get translation from file    ${XLS Column: fr_FR}
    Run Keyword If    '${SavedLanguageID}'=='${French (Belgium)}'    Get translation from file    ${XLS Column: fr_BE}
    Run Keyword If    '${SavedLanguageID}'=='${Hungarian}'    Get translation from file    ${XLS Column: hu_HU}
    Run Keyword If    '${SavedLanguageID}'=='${Japanese}'    Get translation from file    ${XLS Column: jp_JP}
    Run Keyword If    '${SavedLanguageID}'=='${Hebrew}'    Get translation from file    ${XLS Column: il_HE}
    Run Keyword If    '${SavedLanguageID}'=='${Hebrew (reviews)}'    Get translation from file    ${XLS Column: il_HEBAK}
    Run Keyword If    '${SavedLanguageID}'=='${Hebrew (surveys)}'    Get translation from file    ${XLS Column: il_HES}
    Run Keyword If    '${SavedLanguageID}'=='${Italian}'    Get translation from file    ${XLS Column: it_IT}
    Run Keyword If    '${SavedLanguageID}'=='${Lithuanian}'    Get translation from file    ${XLS Column: lt_LTU}
    Run Keyword If    '${SavedLanguageID}'=='${Macedonian}'    Get translation from file    ${XLS Column: mk_MK}
    Run Keyword If    '${SavedLanguageID}'=='${Polish}'    Get translation from file    ${XLS Column: pl_PL}
    Run Keyword If    '${SavedLanguageID}'=='${Portuguese (Brazil)}'    Get translation from file    ${XLS Column: pt_BR}
    Run Keyword If    '${SavedLanguageID}'=='${Portuguese (Portugal)}'    Get translation from file    ${XLS Column: pt_PT}
    Run Keyword If    '${SavedLanguageID}'=='${Romanian}'    Get translation from file    ${XLS Column: ro_RO}
    Run Keyword If    '${SavedLanguageID}'=='${Serbian}'    Get translation from file    ${XLS Column: sr_SR}
    Run Keyword If    '${SavedLanguageID}'=='${Slovak}'    Get translation from file    ${XLS Column: sk_SK}
    Run Keyword If    '${SavedLanguageID}'=='${Slovene}'    Get translation from file    ${XLS Column: sl_SI}
    Run Keyword If    '${SavedLanguageID}'=='${Thai}'    Get translation from file    ${XLS Column: zh_CM}
    Run Keyword If    '${SavedLanguageID}'=='${Turkish}'    Get translation from file    ${XLS Column: tu_TUR}
    Run Keyword If    '${SavedLanguageID}'=='${Russian}'    Get translation from file    ${XLS Column: ua_RU}
    Run Keyword If    '${SavedLanguageID}'=='${Russian v2}'    Get translation from file    ${XLS Column: ru_v2}
    Run Keyword If    '${SavedLanguageID}'=='${Chinese}'    Get translation from file    ${XLS Column: zh_SC}
    Run Keyword If    '${SavedLanguageID}'=='${Chinese- Mandarin}'    Get translation from file    ${XLS Column: zh_CM}
    Run Keyword If    '${SavedLanguageID}'=='${Georgian}'    Get translation from file    ${XLS Column: ka_GE}
    Run Keyword If    '${SavedLanguageID}'=='${Norwegian}'    Get translation from file    ${XLS Column: nn_NO}
    Run Keyword If    '${SavedLanguageID}'=='${ru_Romir_Toyota}'    Get translation from file    ${XLS Column: ru_Romir_Toyota}
    Run Keyword If    '${SavedLanguageID}'=='${Spanish (Catalan)}'    Get translation from file    ${XLS Column: es_CA}
    Run Keyword If    '${SavedLanguageID}'=='${Spanish- Spain}'    Get translation from file    ${XLS Column: es_SP}

Get translation from file
    [Arguments]    ${SavedLanguageID}
    Log to Console    ${SavedLanguageID}
    ${GoToUserMainMenuOptions}    Read Cell Data by Name    ${SheetName}    ${SavedLanguageID}4222
    Log to Console    ${GoToUserMainMenuOptions}

Edit shopper profile.AD
    [Arguments]    ${RobotTestShopper}
    go to.AD    ${URL}/checkers.php?edit=${found ID}
    Log to console    Open ${URL}/checkers.php?edit=${found ID}
    Wait until page contains element    //*[@id="tabs"]/ul/li[1]/a
    Element Should Contain    //*[@id="tabs"]/ul/li[1]    Basic
    Element Should Contain    //*[@id="tabs"]/ul/li[2]    Address and location
    Element Should Contain    //*[@id="tabs"]/ul/li[3]    Contact details
    Element Should Contain    //*[@id="tabs"]/ul/li[4]    More info
    Element Should Contain    //*[@id="tabs"]/ul/li[5]    Settings
    Page Should Contain    Refunds
    Page Should Contain    Login
    Page Should Contain    days
    Page Should Contain    CheckerTificate
    Page Should Contain    regions
    Log to console    Let`s update the "${RobotTestShopper}" profile
    Get Title
    Click element    //*[@id="tabs"]/ul/li[1]
    Wait until page contains element    //*[@id="save"]
    Input Text    //input[@id='field_Fullname']    ${UpdatedShopperName}
    Mouse over    //input[@id='field_CheckerCode']
    Input Text    //input[@id='field_CheckerCode']    RFCheckerCode_02
    Check errors on page [-1]    #FIX HERE
    Click element    //*[@id="tabs"]/ul/li[3]    #Contact details tab
    Wait until page contains element    //*[@id="save"]
    Input Text    //input[@id='field_Phone']    +380670118780
    Input Text    //input[@id='field_Phone2']    +972462281492
    Input Text    //input[@id='field_Phone3']    +972462281493
    Input Text    //input[@id='field_Email_Primary']    ${RFShopperEmail}
    Input Text    //input[@id='field_Email_Secondary']    2-${RFShopperEmail}
    Click element    //*[@id="tabs"]/ul/li[4]
    Wait until page contains element    //*[@id="save"]
    Input Text    //input[@id='field_BirthDated']    01
    Input Text    //input[@id='field_BirthDatem']    02
    Input Text    //input[@id='field_BirthDatey']    2018
    #Input Text    //input[@id='field_BirthDate']    02-02-2014
    Input Text    //input[@id='field_DailyCritLimit']    100
    Input Text    //input[@id='field_MonthlyCritLimit']    1000
    Input Text    //textarea[@id='field_CheckerComments']    ${Assessor comment 1}
    ###
    Click element    //*[@id="tabs"]/ul/li[1]
    Wait until page contains element    //input[@id='field_CheckerPriority']
    Input Text    //input[@id='field_CheckerPriority']    100
    Wait until page contains element    //*[@id="save"]
    Click element    //*[@id="tabs"]/ul/li[4]
    Wait until page contains element    //*[@id="idLanguageOverrideEditbox"]
    Set focus to element    //*[@id="idLanguageOverrideEditbox"]
    Click element    //*[@id="idLanguageOverrideEditbox"]/table/tbody/tr/td/span/button
    Scroll Element Into View    xpath=//li[contains(.,'English Australia')]
    Click element    xpath=//li[contains(.,'English Australia')]
    Input Text    //input[@id='field_IdNumber']    IdNumber - RF 001
    Input Text    //input[@id='field_SSN']    SSN - RF 001
    Input text    //input[@id='field_AvailabilityRadious']    6
    #Input Text    //input[@id='field_ICQ']    ICQ - RF 001
    #Input Text    //input[@id='field_Skype']    Skype - RF 001
    #Input Text    //input[@id='field_Messenger']    Messenger - RF 001
    #
    Click element    //*[@id="tabs"]/ul/li[1]
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    ${1}=    Run keyword and return status    Page should contain element    //tbody/tr[38]/td[2]/input[190]
    ${2}=    Run keyword and return status    Page should contain element    id=shopper_list
    Run keyword if    "${1}"=="True"    Choose File    //tbody/tr[38]/td[2]/input[1]    ${CURDIR}\\Extra files\\Images\\RF portrait.jpg
    Run keyword if    "${2}"=="True"    Choose File    //*[@id="shopper_list"]/input[2]    ${CURDIR}\\Extra files\\Images\\RF portrait.jpg
    log to console    Selecting profile picture
    log to console    Editing password to "${RobotTestShopper}"
    Click element    //*[@id="HideRedundant"]
    Wait until page contains element    //input[@id='field_Password']
    Input text    //input[@id='field_Password']    ${RobotTestShopper}
    Click element    //*[@id="tabs"]/ul/li[5]
    Select dropdown.AD    //*[@id="idCSSFileNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'RobotShopperCSS.css')]
    Validate value (text)    //*[@id="idCSSFileNameEditbox"]/table/tbody/tr/td/span/button    RobotShopperCSS.css
    ########################
    Click element    //*[@id="tabs"]/ul/li[2]
    Input text    //input[@id='field_HouseNumber']    55
    Input text    //input[@id='field_Address']    Landing Lange, APT 4
    Input text    //input[@id='field_Zipcode']    4455
    Input text    //input[@id='field_ZipcodeAdditional']    4578
    Select dropdown.AD    //*[@id="idTimeZoneEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Europe/Kiev')]
    Click element    //*[@id="tabs"]/ul/li[1]
    Click Save/Add/Delete/Cancel button.AD
    Page should contain    successfully
    go to.AD    ${URL}/checkers.php?edit=${found ID}
    Wait until page contains element    //input[@id='field_Fullname']
    ####VALIDATE VALUES - TAB 1
    ${UpdatedShopperFName}    Get Element Attribute    //input[@id='field_Fullname']    value
    Should Be Equal    ${UpdatedShopperFName}    ${UpdatedShopperName}
    ${ShopperName}    Get Element Attribute    //input[@id='field_Username']    value
    Should Be Equal    ${ShopperName}    ${RobotTestShopper}
    ${Code}    Get Element Attribute    //input[@id='field_CheckerCode']    value
    Should Be Equal    ${Code}    RFCheckerCode_02
    ${Priority}    Get Element Attribute    //input[@id='field_CheckerPriority']    value
    Should Be Equal    ${Priority}    100
    ####VALIDATE VALUES - TAB 2
    Click element    //*[@id="tabs"]/ul/li[2]
    Validate value (value)    //input[@id='field_HouseNumber']    55
    Validate value (value)    //input[@id='field_Address']    Landing Lange, APT 4
    Validate value (value)    //input[@id='field_Zipcode']    4455
    Validate value (value)    //input[@id='field_ZipcodeAdditional']    4578
    Validate value (text)    //*[@id="idTimeZoneEditbox"]/table/tbody/tr/td/span/button    Europe/Kiev
    ####VALIDATE VALUES - TAB 3
    Click element    //*[@id="tabs"]/ul/li[3]
    Wait until page contains element    //*[@id="save"]
    ######
    ${field_Phone}    Get Element Attribute    //input[@id='field_Phone']    value
    Should Be Equal    ${field_Phone}    +380670118780
    ${field_Phone2}    Get Element Attribute    //input[@id='field_Phone2']    value
    Should Be Equal    ${field_Phone2}    +972462281492
    ${field_Phone3}    Get Element Attribute    //input[@id='field_Phone3']    value
    Should Be Equal    ${field_Phone3}    +972462281493
    ${field_Email_Primary}    Get Element Attribute    //input[@id='field_Email_Primary']    value
    Should Be Equal    ${field_Email_Primary}    ${RFShopperEmail}
    ${field_Email_Secondary}=    Get Element Attribute    //input[@id='field_Email_Secondary']    value
    Should Be Equal    ${field_Email_Secondary}    2-${RFShopperEmail}
    ####VALIDATE VALUES - TAB 4
    Click element    //*[@id="tabs"]/ul/li[4]
    Wait until page contains element    //*[@id="save"]
    #${field_BirthDate}=    Get Element Attribute    //input[@id='field_BirthDate']    value
    ${field_BirthDay}=    Get Element Attribute    //input[@id='field_BirthDated']    value
    ${field_BirthMonth}=    Get Element Attribute    //input[@id='field_BirthDatem']    value
    ${field_BirthYear}=    Get Element Attribute    //input[@id='field_BirthDatey']    value
    Should Be Equal    ${field_BirthDay}    01
    Should Be Equal    ${field_BirthMonth}    02
    Should Be Equal    ${field_BirthYear}    2018
    #Should Be Equal    ${field_BirthDate}    02-02-2014
    Validate value (value)    //input[@id='field_AvailabilityRadious']    6
    Validate value (value)    //input[@id='field_MonthlyCritLimit']    1000
    Validate value (value)    //input[@id='field_DailyCritLimit']    100
    ${language}=    Get text    //*[@id="idLanguageOverrideEditbox"]/table/tbody/tr/td/span/button
    Should Be Equal    ${language}    English Australia
    ${Id Number}=    Get Element Attribute    //input[@id='field_IdNumber']    value
    Should Be Equal    ${Id Number}    IdNumber - RF 001
    ${SSN}=    Get Element Attribute    //input[@id='field_SSN']    value
    Should Be Equal    ${SSN}    SSN - RF 001
    ###checking profile picture
    Click element    //*[@id="tabs"]/ul/li[1]
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    sleep    1
    Run keyword and ignore error    Page Should Contain Image    //*[@id="shopper_list"]/a/img
    Element Should Be Visible    //img[contains(@src, "portrait.jpg")]
    log to console    Profile picture is correct
    ######
    Log to console    ${RobotTestShopper} profile has been updated successfully. ${\n}Added values:${\n}full name="${UpdatedShopperName}",${\n}phone:"${field_Phone}",${\n}email1+email2:"robotmailbox01@gmail.com",${\n}birthd date,${\n}language is set to "English Australia"

CheckLanguageKeyword
    [Arguments]    ${LanguageKeyword}    ${XLS Column}
    Open Excel    ${TranslationFile}
    ${Row Count}    Get Row Count    ${SheetName}
    ${RowIndex}=    Set variable    1
    ${RowIndex1}=    Evaluate    ${RowIndex}+1
    Log to Console    Please wait: searching next phrase "${LanguageKeyword}" (+ its locator) in XLS file ...
    FOR    ${RowIndex1}    IN RANGE    ${Row Count}
    Log    ${RowIndex1}
    ${CurrentLanguageKeyword1}    Read Cell Data By Coordinates    ${SheetName}    0    ${RowIndex1}
    ${CurrentLanguageKeyword}=    Convert To String    ${CurrentLanguageKeyword1}
    Log    ${CurrentLanguageKeyword}
    Run Keyword If    '${LanguageKeyword}'=="${CurrentLanguageKeyword}"    exit for loop
    ${RowIndexFinal}=    Evaluate    ${RowIndex1}+1    # row index to row line
    Log to Console    validating row    # ${RowIndexFinal}
    ${CorrectTranslation}    Read Cell Data By Name    ${SheetName}    ${XLS Column}${RowIndexFinal}
    Log to Console    Done. Found --> ${CorrectTranslation}
    ${LocatorXpath}    Read Cell Data By Name    ${SheetName}    AY${RowIndexFinal}
    Log to Console    ${LocatorXpath}
    Element Text Should Be    ${LocatorXpath}    ${CorrectTranslation}

Create test order (MASS) - BASIC
    [Arguments]    ${test order description}    ${RobotTestClient}    ${Auto Questionnaire}
    go to.AD    ${URL}/shahar_bridge.php?name=mass_order
    Log to console    --------------------------CREATING MASS ORDER. Please wait...--------------------------
    Wait until page contains element    id=cke_setobjText
    Set Focus To Element    //div[@id='container']/table[@id='width_limiter']/tbody/tr/td[@id='the_cell_with_the_program']/table[@id='side_menu']/tbody/tr/td[@class='middle-right']/form/table/tbody/tr[2]/td[1]/b
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]/table/tbody/tr/td/span/button
    Set Focus To Element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]
    #
    Click element    xpath=//li[contains(.,'${RobotTestClient}')]
    Validate value (text)    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]/table/tbody/tr/td/span/button    ${RobotTestClient}
    Input text    //input[@id='start_time']    ${order start_time}
    Input text    //input[@id='end_time']    ${order end_time}
    Input text    //*[@id="dates"]/tbody/tr[3]/td/table/tbody/tr/td[1]/table/tbody/tr[1]/td/input    1
    Validate value (value)    //input[@id='start_time']    ${order start_time}    #    ${order start_time}
    Validate value (value)    //input[@id='end_time']    ${order end_time}
    Validate value (value)    //*[@id="dates"]/tbody/tr[3]/td/table/tbody/tr/td[1]/table/tbody/tr[1]/td/input    1
    Set checkbox.AD    //input[@id='EnforceFillingdates']    None
    Set checkbox.AD    //input[@id='edwe']    None
    #
    sleep    1
    Click element    //table[@id='dates']/tbody/tr[1]/td/table/tbody/tr/td[2]/table/tbody/tr[1]/td/input[2]
    sleep    1
    Click element    //table[@id='dates']/tbody/tr[1]/td/table/tbody/tr/td[2]/table/tbody/tr[2]/td/input[2]
    sleep    1
    Wait until page contains element    id=cke_setobjText    10
    Click element    //*[@id="sets_data"]
    Set Focus To Element    //*[@id="sets_data"]
    Click element    xpath=//option[contains(.,'${Auto Questionnaire}')]
    List Selection Should Be    //*[@id="sets_data"]    ${Auto Questionnaire}
    Run keyword and ignore error    Click element    //table[@class='doublebox']/tbody/tr/td[1]/select/option[1]
    Run keyword and ignore error    Click element    //td[2]/table[@class='doublebox']/tbody/tr/td[2]/input[@class='buttons'][2]
    sleep    2
    Wait until page contains element    //*[@id="BriefingID"]
    Select dropdown.AD    //*[@id="BriefingID"]    xpath=//option[contains(.,'${RF Briefing}')]
    List Selection Should Be    //*[@id="BriefingID"]    ${RF Briefing}
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[2]/table/tbody/tr/td/span/button
    Click element    //div[3]/div/ul/li[2]/a/span[2]
    Set Focus To Element    xpath=//option[contains(.,'${RF Project}')]
    sleep    1
    click element    //div[3]/ul/li[1]/label/span
    Validate value (text)    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[2]/table/tbody/tr/td/span/button    ${RF Project}
    #    Select From List By Label    Projects    ${RF Project}
    #    List Selection Should Be    Projects    ${RF Project}
    #Select Frame    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[1]/td[2]/span/span[2]/span/table/tbody/tr[2]/td/iframe
    #${Planned Day}    Get text
    #Input text    //input[@id='start_date']    28-10-2021
    Input text    //input[@id='end_date']    29-12-2025
    Validate value (value)    //input[@id='end_date']    29-12-2025
    ${Planned Time}    Get text    //input[@id='start_time']
    ${Planned Branch Name}    Get text    //table[@class='doublebox']/tbody/tr/td[3]/select
    ${Planned Date}    Get text    //input[@id='start_date']
    Click button    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    Element text should be    //div[@id='container']/table[@id='width_limiter']/tbody/tr/td[@id='the_cell_with_the_program']/table[@id='side_menu']/tbody/tr/td[@class='middle-right']/span/center    Please specify description
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_57"]    ${test order description}
    Run Keyword If    ${preprod?}    Enter editor text.AD    //*[@id="cke_51"]    ${test order description}
    Run Keyword If    ${demo?}    Enter editor text.AD    //*[@id="cke_51"]    ${test order description}
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Click button    //input[@class='btn-input']
    Set focus to element    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    Wait until page contains element    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    Wait until page contains element    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    Click ELEMENT    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    Wait until page contains element    //td[@class='report-dir'][1]
    ${Order Day}    Get text    //td[@class='report-dir'][1]
    ${Order Time}    Get text    //td[@class='report-dir'][2]
    ${Order Branch Name}    Get text    //td[@class='report-dir'][3]
    ${Order Date}    Get text    //td[@class='report-firstcol']
    Should be equal    ${Order Day}    ${Tday}
    Should be equal    ${Order Time}    ${order start_time}-${order end_time}
    Should be equal    ${Order Branch Name}    ${Short auto branch name 01}
    Should be equal    ${Order Date}    ${DD.MM.YY}
    Run keyword and ignore error    Page should contain    ${test order description}
    #
    Page should contain    Questionnaire name: ${Auto Questionnaire}
    Page should contain    Start date: ${DD.MM.YY}
    Page should contain    Number of branches: 1
    Page should contain    Reviews per branch: 1
    Page should contain    Number of visits scheduled: 1
    Page should contain    Description:
    Log to console    ----> Order`s precreation details are next: Date: "${Order Date}"; Day: "${Order Day}"; Time: "${Order Time}"; Short Branch Name: "${Order Branch Name}"
    ${Order`s is Date}=    Set global variable    ${Order Date}
    sleep    1
    Click button    //*[@id="side_menu"]/tbody/tr/td[3]/table/tbody/tr/td/form/input
    Wait until page contains element    id=cke_setobjText    30
    Check errors on page [-1]
    Log to console    --------------------------Status: OK, (MASS) order is created

Get order details
    ${order ID}    Get Text    //table[@id='table_rows']/tbody/tr[@class='report1 ']/td[@class='report-dir'][1]
    Set Global Variable    ${order ID}
    Log to console    1st order ID in a list is ${order ID}
    Exit For Loop

Open Job page and search order
    [Arguments]    ${test order description}
    go to.AD    ${URL}/c_ordered-crits.php
    Check errors on page [-1]
    ${index}    Set Variable    1
    @{elements}    Get Webelements    //*[@id="orders_list"]/tbody/tr
    #iterate for each row
    FOR    ${element}    IN    @{elements}
    Set global variable    ${index}
    Set global variable    ${element}
    ${AD description}=    Get Text    //*[@id="orders_list"]/tbody/tr[${index}]/td[4]    #Description column should be the 4
    Set global variable    ${AD description}
    Set global variable    ${index}
    Log to console    ${index}. AR --> ${AD description}
    Log to console    ER --> ${test order description} - ${DD.MM.YY}
    Run Keyword If    '${AD description}'=='${test order description} - ${DD.MM.YY}'    Simulate job
    Run Keyword If    '${AD description}'=='${test order description} - ${DD.MM.YY}'    Accept job
    ${index}=    Evaluate    ${index}+1
    Log to console    -----------------------------------------

Get order details.SD
    ${Job ID}    Get Text    //table[@id='orders_list']/tbody/tr[@class='report1 ']/td[@class='report-dir'][6]
    Set Global Variable    ${Job ID}
    Log to console    1st job ID in a list is ${Job ID}
    Exit For Loop

Accept job
    Log To Console    Status: OK, accepting job by pressing "Accept" button
    Wait Until Page Contains Element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Status ID}]/form[1]
    sleep    1
    Click element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Status ID}]/form[1]    #Accept button    //*[@id="orders_list"]/tbody/tr[${index}]/td[6]/form[1]
    Check errors on page [-1]
    Log    Status: order accepted by shopper
    SeleniumLibrary.Capture Page Screenshot

Search test client
    [Arguments]    ${RobotTestClient}
    go to.AD    ${URL}/menu-manage.php
    Input Text    //tr/td[3]/form/input[1]    ${RobotTestClient}
    Click Button    //tr/td[3]/form/input[4]
    Page should not contain    warning
    Page should not contain    notice

SET UP
    Log to console    ${\n}==============SET UP TEST SETTINGS (GENERAL)==============
    ${MM.DD.YY}=    Get Current Date    result_format=%m.%d.%Y
    ${HH:MM:SS}=    Get Current Date    result_format=%H:%M:%S
    ${DD.MM.YY}=    Get Current Date    result_format=%d.%m.%Y    #set date format
    ${DD-MM-YY}=    Get Current Date    result_format=%d-%m-%Y
    ${Tday}=    Get Current Date    result_format=%A
    ${HH:MM}=    Get Current Date    result_format=%H:%M
    ${Ttime}=    Get Current Date    result_format=datetime
    ${date minus 30 days}    Subtract Time From Date    ${Ttime}    30 days    result_format=%d-%m-%Y
    ${date-minus-7-days}    Subtract Time From Date    ${Ttime}    7 days    result_format=%d-%m-%Y
    ${date plus 4 days}    Add Time To Date    ${Ttime}    4 days    result_format=%d.%m.%Y
    ${date minus 1 day}    Subtract Time From Date    ${Ttime}    1 days    result_format=%d.%m.%Y
    Log to console    SuiteName: ${SUITE NAME}
    Log to console    TestName: ${TEST NAME}
    Log to console    Date: "${DD.MM.YY}"; Day: "${Tday}"; Time: "${HH:MM:SS}".
    Set global variable    ${DD-MM-YY}
    Set global variable    ${HH:MM:SS}
    Set global variable    ${MM.DD.YY}
    Set global variable    ${HH:MM}
    Set global variable    ${Tday}
    Set global variable    ${Ttime}
    Set global variable    ${DD.MM.YY}
    Set global variable    ${date minus 30 days}
    Set global variable    ${date plus 4 days}
    Set global variable    ${date minus 1 day}
    Set global variable    ${date-minus-7-days}
    ###
    ${Pageurl} =    Execute Javascript    return window.location.href    #get short test URL
    ${URL1index}=    Fetch From Right    ${URL}    /
    ${URLIndex}    Convert To Upper Case    ${URL1index}
    Log to console    STARTING TO TEST NEXT URL: "${URL}"
    Log to console    SYSTEM IN SHORT: [${URLIndex}]
    Set global variable    ${URL1index}
    Set global variable    ${URLIndex}
    ##
    ${env}=    Set variable    ${URL}
    ${check env?}=    Run Keyword And Return Status    Should contain    ${env}    testing
    Set global variable    ${check env?}
    ###
    Log    System: [${URL1index}]
    Log    ------------------------------
    Log    Check emails
    ${ab}=    Set variable    ${check emails or no?}
    ${check emails?}=    Run Keyword And Return Status    Should contain    ${ab}    YES
    Log    ${check emails?}
    Set global variable    ${check emails?}
    Run Keyword If    '${check emails?}'=='True'    log to console    Check emails?="YES"
    Run Keyword If    '${check emails?}'=='True'    Gmail. Delete all emails.
    Run Keyword If    '${check emails?}'=='False'    log to console    Check emails?="NO"
    ${ab}=    Set variable    ${check reports?}
    ${check reports?}=    Run Keyword And Return Status    Should contain    ${ab}    YES
    Log    ${check reports?}
    Set global variable    ${check reports?}
    Run Keyword If    '${check reports?}'=='True'    log to console    Check reports?="YES"
    Run Keyword If    '${check reports?}'=='False'    log to console    Check reports?="NO"
    ${RF REVN DT}    Set variable    <hr /> <p style="text-align:center"><span style="font-size:10px"><strong><span style="color:#000000">RF REVN DT:</span>&nbsp;<span style="color:#c0392b">${DD.MM.YY}</span> <span style="color:#000000">ENV/SYS</span>:&nbsp;<a href="${URL}">${URLIndex}</a></strong></span></p> <hr />
    Set global variable    ${RF REVN DT}
    #
    ##
    ${current env?}=    Set variable    ${URL}
    ${demo?}=    Run Keyword And Return Status    Should contain    ${current env?}    demo
    ${preprod?}=    Run Keyword And Return Status    Should contain    ${current env?}    preproduction
    ${testing?}=    Run Keyword And Return Status    Should contain    ${current env?}    testing
    Set global variable    ${demo?}
    Set global variable    ${preprod?}
    Set global variable    ${testing?}
    Log to console    ------------------------------------------TEST START------------------------------------------

Add new client
    go to.AD    ${URL}/clients.php
    Wait until page contains element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Check errors on page [-1]
    Input text    id=field_clientname    ${RobotTestClient}
    Mouse down    id=idIsActiveEditbox
    Checkbox Should Be Selected    name=field_IsActive
    Input text    id=field_AlternateClientDescription    This client is created for autotests. Please do not edit it. Created ${DD.MM.YY}
    Mouse down    id=field_ShowNonFilledQuestionInReports
    Checkbox Should Be Selected    id=field_ShowNonFilledQuestionInReports
    Checkbox Should Be Selected    id=field_ShowGradeInNetworkStatusReport
    Click button    //input[@id='addnew']
    Check errors on page [-1]
    Log to console    "${RobotTestClient}" has been added

Edit client.AD
    go to.AD    ${URL}/clients.php?edit=${client ID}
    Wait until page contains element    //input[@id='field_address']
    Input Text    //input[@id='field_address']    721 Broadway 721 Broadway, New York, NY 10003, USA
    Input Text    //input[@id='field_clientname']    ${RobotTestClient}
    Input Text    //input[@id='field_AlternateClientDescription']    This client is created for RF autotests
    Input Text    //input[@id='field_phone']    +380670118780
    Input Text    //input[@id='field_fax']    +1600000
    Input Text    //input[@id='field_email']    robotmailbox01@gmail.com
    Input Text    //*[@id="field_AlternateClientName"]    ${RF Type of client}
    Input Text    //input[@id='field_ScoreRangeMax']    1000
    #
    Set checkbox.AD    //input[@id='field_CritCommentAlertBySms']    None
    Set checkbox.AD    //input[@id='field_CritCommentAlertByEmail']    None
    Set checkbox.AD    //input[@id='field_CritAlertAllBySms']    None
    Set checkbox.AD    //input[@id='field_CritAlertAllByEmail']    None
    Set checkbox.AD    //input[@id='field_CritAlertMinimumBySms']    None
    Set checkbox.AD    //input[@id='field_CritAlertMinimumByEmail']    None
    Set checkbox.AD    //input[@id='field_ShowQuestionCode']    true
    Set checkbox.AD    //input[@id='field_CritAlertCriticalByEmail']    None
    Set checkbox.AD    //input[@id='field_AutomaticCritApproval']    None
    Run keyword and ignore error    Choose File    //table/tbody/tr/td[1]/table/tbody/tr[52]/td[2]/input[1]    c:\\RobotTests2021\\Extra files\\IMAGES\\RF checker.gif
    Input Text    //input[@id='field_BonusSystemName']    Bonus system RF
    Page should contain    Max size: 50k, Allowed file types: .gif,.jpg,.jpeg,.png,.bmp
    #
    Input Text    //input[@id='field_AlertOnMinimum']    ${empty}
    Input Text    //input[@id='field_DynChartMinValue']    ${empty}
    Input Text    //input[@id='field_DynChartMaxValue']    ${empty}
    Input Text    //input[@id='field_MinScore']    ${empty}
    Input Text    //input[@id='field_MaxScore']    1000
    Input Text    //input[@id='field_RepotDecimals']    2
    Input Text    //input[@id='field_ScoreRangeMin']    ${empty}
    Input Text    //input[@id='field_RepotDecimalsForWeights']    4
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    ###
    go to.AD    ${URL}/clients.php?edit=${client ID}
    Wait until page contains element    //input[@id='field_clientname']
    Validate value (value)    //input[@id='field_clientname']    ${RobotTestClient}
    Validate value (value)    //input[@id='field_phone']    +380670118780
    Validate value (value)    //input[@id='field_fax']    +1600000
    Validate value (value)    //input[@id='field_email']    robotmailbox01@gmail.com
    Validate value (value)    //input[@id='field_AlternateClientDescription']    This client is created for RF autotests
    Validate value (value)    //*[@id="field_AlternateClientName"]    ${RF Type of client}
    #    Validate value (value)    //input[@id='field_ScoreRangeMax']    ${empty}
    #    Validate value (value)    //input[@id='field_AlertOnMinimum']    ${empty}
    Log to console    "${RobotTestClient}" client profile has been updated successfully
    Log to console    Client address="721 Broadway 721 Broadway, New York, NY 10003, USA"
    Log to console    Client description="This client is created for autotests. Please do not edit it. (${DD.MM.YY})"
    Log to console    Client phone="+380670118780"
    Log to console    Client fax="+1600000"
    Log to console    Client email="robotmailbox01@gmail.com"
    Log to console    Client type="${RF Type of client}"
    Checkbox should be selected    //input[@id='field_IsActive']
    Checkbox should not be selected    //input[@id='field_CritCommentAlertByEmail']
    Checkbox should not be selected    //input[@id='field_CritAlertAllByEmail']
    Checkbox should not be selected    //input[@id='field_CritAlertMinimumByEmail']
    Checkbox should not be selected    //input[@id='field_CritAlertCriticalByEmail']
    Checkbox should be selected    //input[@id='field_ShowNonFilledQuestionInReports']
    Checkbox should be selected    //input[@id='field_ShowQuestionCode']
    Checkbox should be selected    //input[@id='field_ShowGradeInNetworkStatusReport']

Deactivate client
    [Arguments]    ${Client ID}
    go to.AD    ${URL}/clients.php?edit=${found ID}
    Log to console    Let`s deactivate the client using status checkbox on client profile page at ${URL}/clients.php?edit=${found ID}
    Get Title
    ${Client status}    Get Element Attribute    //*[@id="field_IsActive"]    checked
    Log    ${Client status}
    Mouse down    //*[@id="field_IsActive"]
    Run keyword if    '${Client status}'=='true'    Unselect Checkbox    //*[@id="field_IsActive"]
    Wait until page contains element    id=save
    ${checked1}    checkbox should not be selected    //input[@id='field_IsActive']
    Wait until page contains element    id=save
    Check errors on page [-1]
    Click button    id=save
    Check errors on page [-1]
    Go to    ${URL}/clients.php?edit=${found ID}
    Log to console    Reopening the profile page. Сlient status checkbox is set to "No"
    ${Client status}    Get Element Attribute    //input[@id='field_IsActive']    checked
    log    ${Client status}
    Should Be Equal    ${Client status}    ${None}
    Log to console    Client ${RobotTestClient} profile has been deactivated

Activate client
    [Arguments]    ${Client ID}
    go to.AD    ${URL}/clients.php?edit=${found ID}
    Log to console    Let`s activate the client on ${URL}/clients.php?edit=${found ID}
    Get Title
    ${Client status}    Get Element Attribute    //*[@id="field_IsActive"]    checked
    Log    ${Client status}
    Mouse down    //*[@id="field_IsActive"]
    Run keyword if    '${Client status}'=='None'    Select Checkbox    //*[@id="field_IsActive"]
    Wait until page contains element    id=save
    ${checked1}    checkbox should be selected    //input[@id='field_IsActive']
    Click Save/Add/Delete/Cancel button.AD
    Go to    ${URL}/clients.php?edit=${found ID}
    Check errors on page [-1]
    ${Client status}    Get Element Attribute    //input[@id='field_IsActive']    checked
    log    ${Client status}
    Should Be Equal    ${Client status}    true
    Log to console    Client ${RobotTestClient} profile has been activated

Add/edit new branch.AD
    [Arguments]    ${Short auto branch name}    ${Full auto branch name}
    Check errors on page [-1]
    Log to console    Let`s add/update "${Short auto branch name}" branch
    Wait until page contains element    //input[@id='field_branchName']
    Input text    //input[@id='field_branchName']    ${Short auto branch name}
    Input text    //input[@id='field_BranchFullname']    ${Full auto branch name}
    Input text    //input[@id='field_BranchCode']    RFBrCode-01
    Input text    //input[@id='field_address']    Zelena street 45A, 44
    Input text    //input[@id='field_HouseNumber']    345
    Input text    //input[@id='field_Zipcode']    0354354
    Input text    //input[@id='field_Phone']    +74564456454
    Input text    //textarea[@id='field_OpeningHours']    07:00 - 18:00
    Set checkbox.AD    //input[@id='field_CritAlertAllByEmail']    true
    Set checkbox.AD    //input[@id='field_CritAlertAllBySms']    false
    Set checkbox.AD    //input[@id='field_CritAlertMinimumBySms']    false
    Set checkbox.AD    //input[@id='field_CritAlertMinimumByEmail']    true
    Input text    //input[@id='field_TargetFinalGrade']    10
    Run keyword and ignore error    Select dropdown.AD    //*[@id="prop2501"]    //*[@id="prop2501"]/option[2]
    Run keyword and ignore error    Select dropdown.AD    //*[@id="prop3085"]    //*[@id="prop3085"]/option[2]
    Select country/region/city.AD
    ####
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    Log to console    "${Short auto branch name 01}" branch has been added(updated)
    go to.AD    ${URL}/branches.php?client=${client ID}
    Wait until page contains element    //button[@class='btn-input']
    ${Rows} =    Get Element Count    //*[@id="table_rows"]/tbody/tr
    ${index}    Set Variable    1
    ${ItemIsVisible?}    Run keyword and return status    Page should contain    ${Short auto branch name 01}
    FOR    ${rowindex}    IN RANGE    ${Rows}
        ${act name}    get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        Run Keyword If    "${act name}"=="${Short auto branch name 01}"    Check if sorting is visible.AD    id="table_rows"
        Run Keyword If    "${act name}"=="${Short auto branch name 01}"    exit for loop
        ${index}=    Evaluate    ${index}+1
        Log    try ${index}.
    END
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[3]    ${Full auto branch name}
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[4]    RFBrCode-01
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[5]    Yes
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[6]    Zelena street 45A, 44
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[7]    345
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[8]    Robot city 01
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[9]    Robot region 01
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[10]    0354354
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[11]    +74564456454
    Element text should be    //*[@id="table_rows"]/tbody/tr[${index}]/td[17]    10.000000
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[1]    ID
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[2]    Short branch name
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[3]    Full name
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[4]    Branch code
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[5]    Active?
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[6]    Address
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[7]    House number
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[8]    City
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[9]    Region name
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[10]    Postcode
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[11]    Phone
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[12]    Users
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[13]    Branch contacts
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[14]    Set geolocation coordinates manually
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[15]    Latitude
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[16]    Longitude
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[17]    Target final grade
    Element text should be    //*[@id="table_rows"]/thead/tr[1]/th[18]    Edit branch task contacts
    Log to console    "${Short auto branch name 01}" branch has been saved properly

Create new questionnaire
    [Arguments]    ${RobotTestQ-ry}
    go to.AD    ${URL}/sets.php
    Wait until page contains element    //button[@class='btn-input']
    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Log to console    Let`s add new "${RobotTestQ-ry}" questionnaire
    Set focus to element    //input[@id='field_SetName']
    Input text    //input[@id='field_SetName']    ${RobotTestQ-ry}
    ${a}=    Set variable    ${RobotTestQ-ry}
    ${certificate}=    Run Keyword And Return Status    Should contain    ${a}    Certificate
    ${shopper}=    Run Keyword And Return Status    Should contain    ${a}    Shopper
    ${internet}=    Run Keyword And Return Status    Should contain    ${a}    Internet
    ${customers}=    Run Keyword And Return Status    Should contain    ${a}    Customers
    ${surveys}=    Run Keyword And Return Status    Should contain    ${a}    Surveys
    ${field}=    Run Keyword And Return Status    Should contain    ${a}    Field
    ${panel}=    Run Keyword And Return Status    Should contain    ${a}    Panel
    ${training}=    Run Keyword And Return Status    Should contain    ${a}    Training
    ${sms}=    Run Keyword And Return Status    Should contain    ${a}    SMS
    ${email}=    Run Keyword And Return Status    Should contain    ${a}    Email
    ${pos}=    Run Keyword And Return Status    Should contain    ${a}    POS
    Execute JavaScript    window.document.getElementById("field_QuestionsPerPage").scrollIntoView(true)
    Run Keyword If    '${certificate}'=='True'    select q-ry type / Certificate
    Run Keyword If    '${shopper}'=='True'    select q-ry type / Shopper
    Run Keyword If    '${internet}'=='True'    select q-ry type / Internet
    Run Keyword If    "${customers}"=="True"    Select dropdown.AD    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Customers')]
    Run Keyword If    "${surveys}"=="True"    Select dropdown.AD    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Surveys')]
    Run Keyword If    "${field}"=="True"    Select dropdown.AD    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Field')]
    Run Keyword If    "${panel}"=="True"    Select dropdown.AD    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Panel')]
    Run Keyword If    "${training}"=="True"    Select dropdown.AD    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Training')]
    Run Keyword If    "${sms}"=="True"    Click element    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button
    Run Keyword If    "${sms}"=="True"    Click element    //body/div[4]/ul/li[9]/label
    Run Keyword If    "${email}"=="True"    Click element    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button
    Run Keyword If    "${email}"=="True"    Click element    //body/div[4]/ul/li[10]/label
    Run Keyword If    "${pos}"=="True"    Select dropdown.AD    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'POS')]
    set focus to element    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    Click element    id=field_AllowSimulation
    Click element    //input[@id='field_AllowCheckerToSetFinishTime']
    Click element    //input[@id='field_IsGlobalSet']
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    Log to console    Created new q-ry (name: "${RobotTestQ-ry}"; AllowSimulatio=Yes; AllowCheckerToSetFinishTime=Yes; IsGlobalSet=Yes)
    [Teardown]

Get ID
    [Arguments]    ${table id}    ${name}    ${ID column index}    ${NAME column index}
    Log to console    --- Searching "${name}" element ID:
    ${id}=    Set variable    0
    ${index}=    Set Variable    1
    ${Rows} =    Get Element Count    //*[@${table id}]/tbody/tr    #how many (columns) do we have    //*[@${table id}]/thead/tr[1]/th
    FOR    ${rowindex}    IN RANGE    ${Rows}
        ${act name}=    get text    //*[@${table id}]/tbody/tr[${index}]/td[${NAME column index}]
        #Exit For Loop If    ${is element visible}==False
        Run keyword if    '${act name}'=='${name}'    Exit for loop
        ${id}=    Evaluate    ${id}+1
        ${index}=    Evaluate    ${index}+1
    END
    ${found ID}=    Get Text    //*[@${table id}]/tbody/tr[${index}]/td[${ID column index}]
    ${found name}=    Get Text    //*[@${table id}]/tbody/tr[${index}]/td[${NAME column index}]
    set global variable    ${found ID}
    set global variable    ${found name}
    Log to console    (+) Found! Item name = "${found name}" ID = "${found ID}"
    ${final index}=    set variable    ${index}
    set global variable    ${final index}

Search Element.AD
    [Arguments]    ${SearchCriteria}    ${Table ID}
    Log to console    Searching "${SearchCriteria}" via the system`s search bar...Please wait...
    Search test item    ${SearchCriteria}
    ${ItemIsFound}=    Set variable    ${Table ID}
    ${ItemIsVisible}=    Run Keyword And Return Status    Element Should Be Visible    ${ItemIsFound}
    ${ItemIsNotVisible}=    Run Keyword And Return Status    Element Should Not Be Visible    ${ItemIsFound}
    Set global variable    ${ItemIsVisible}
    Set global variable    ${ItemIsNotVisible}

Edit questionnaire.AD
    [Arguments]    ${code}    ${Grading system}    ${One Page logic?}    ${atach files?}
    go to.AD    ${URL}/sets.php?edit=${found ID}
    ${a}=    Set variable    ${Robot q-ry}
    ${certificate}=    Run Keyword And Return Status    Should contain    ${a}    Certificate
    Wait until page contains element    //input[@id='field_SetDescription']
    Input Text    //input[@id='field_SetDescription']    Questionnaire description: RF REVN DT ${DD.MM.YY}
    Input Text    //input[@id='field_SetCode']    ${code}
    Input Text    //input[@id='field_QuestionsPerPage']    50
    Run keyword if    ${certificate}    Select dropdown.AD    //*[@id="idDependencyCertificateLinkEditbox"]/table/tbody/tr/td/span/button/span[2]    xpath=//li[contains(.,'RF 001-Shopper Registration [Certificate]')]
    Run keyword if    ${certificate}    Input text    //input[@id='field_MaxRetake']    0
    Run keyword if    ${certificate}    Input text    //input[@id='field_RetakeChillingDays']    0
    Run keyword if    ${certificate}    Input text    //input[@id='field_DependencySetGrade']    0
    Select dropdown.AD    //*[@id="idAllowCritFileUploadEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${atach files?}')]
    Select dropdown.AD    //*[@id="idGradingSystemEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Grading system}')]
    ######
    Click element    //*[@id="idShowTOCEditbox"]/table/tbody/tr/td/span/button
    sleep    1
    Set focus to element    field_ShowTOC
    Run keyword and ignore error    Click element    //div[18]/ul/li[2]/label/span
    Run keyword and ignore error    Click element    //div[17]/ul/li[2]/label
    #    sleep    1
    #    Run keyword and ignore error    Click element    id=ui-multiselect-field_ShowTOC-option-1
    #Select from list by index    field_ShowTOC    1
    #Select dropdown.AD    //*[@id="idShowTOCEditbox"]/table/tbody/tr/td/span/button    //div[17]/ul/li[2]/label
    Select dropdown.AD    //*[@id="idAutoSectionWeightsEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Never')]
    Click element    //*[@id="idCSSFileNameEditbox"]/table/tbody/tr/td/span/button
    Click element    //div[3]/ul/li[1]/label
    Select dropdown.AD    //*[@id="idSetDesignEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Default')]
    Select dropdown.AD    //*[@id="idOnePageLogicEditbox"]/table/tbody/tr/td/span/button    ${One Page logic?}
    Set checkbox.AD    //input[@id='field_AllowCheckerToSetLang']    true
    Set checkbox.AD    //input[@id='field_AllowSimulation']    true
    Set checkbox.AD    //input[@id='field_ShowTimer']    true
    Set checkbox.AD    //input[@id='field_ShowFreeTextBox']    true
    Set checkbox.AD    //input[@id='field_ClearFalseDisplayConditionsQuestions']    None
    Set checkbox.AD    //input[@id='field_ShowHeader']    true
    Set checkbox.AD    //input[@id='field_ShowFooter']    true
    Set checkbox.AD    //input[@id='field_ShowSaveAndExitButton']    true
    Set checkbox.AD    //input[@id='field_ShowPreviewButton']    true
    Set checkbox.AD    //input[@id='field_ShowRestartButton']    true
    Set checkbox.AD    //input[@id='field_ShowExitDeleteButton']    true
    Set checkbox.AD    //input[@id='field_ShowBackButton']    true
    Set checkbox.AD    //input[@id='field_ShowTimer']    true
    Set checkbox.AD    //input[@id='field_RestrictGalleryAccess']    None
    Set checkbox.AD    //input[@id='field_AutomaticApproval']    None
    Set checkbox.AD    //input[@id='field_EnableNonansweredConfirmation']    None
    Set checkbox.AD    //input[@id='field_IsAvailableToAllClients']    true
    Set checkbox.AD    //input[@id='field_ShowNotFilled']    true
    Set checkbox.AD    //input[@id='field_IsGlobalSet']    true
    Set checkbox.AD    //input[@id='field_VOIPAllowed']    None
    Set checkbox.AD    //input[@id='field_AllowSimulation']    true
    Set checkbox.AD    //input[@id='field_AllowCheckerToSetFinishTime']    None
    Set checkbox.AD    //input[@id='field_AnswersActAsSubmit']    true
    Run keyword if    '${Robot q-ry}'=='RF Questionnaire [GLOBAL]'    Set checkbox.AD    //input[@id='field_AnswersActAsSubmit']    None
    Set checkbox.AD    //input[@id='field_ConfirmationQuestions']    None
    Set checkbox.AD    //input[@id='field_AnswersActAsSubmit']    None
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_AutoApprovePayment']    true
    Select dropdown.AD    //*[@id="idCharNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Q-re type charac-s}')]
    Select dropdown.AD    //*[@id="idEnableQuestionNumberingInFormEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Question code')]
    Run keyword and ignore error    Input Text    //input[@id='field_DefaultPaymentForChecker']    30.00
    Input Text    //input[@id='field_DefaultPurchaseLimit']    4.00
    Input Text    //input[@id='field_DefaultNonRefundableServicePayment']    4.00
    Input Text    //input[@id='field_DefaultTransportationPayment']    3.00
    Run keyword and ignore error    Input Text    //input[@id='field_DefaultBonusPayment']    1.00
    Click element    //*[@id="idShowProgressBarEditbox"]/table/tbody/tr/td/span/button
    Wait until page contains    Bottom
    Run keyword and ignore error    Click element    //body/div[12]/div/ul/li[2]/a/span[2]
    Run keyword and ignore error    Click element    //div[12]/div/ul/li[2]/a/span[2]
    Run keyword and ignore error    Click element    //body/div[13]/div/ul/li[2]/a/span[2]
    Run keyword and ignore error    Click element    //div[13]/div/ul/li[2]/a/span[2]
    Run keyword and ignore error    Click element    //div[11]/div/ul/li[2]/a/span[2]
    sleep    1
    Click element    //*[@id="ui-multiselect-field_ShowProgressBar-option-0"]
    Click element    //*[@id="ui-multiselect-field_ShowProgressBar-option-1"]
    Click element    //*[@id="ui-multiselect-field_ShowProgressBar-option-3"]
    Click Save/Add/Delete/Cancel button.AD
    Page should contain    uccessfully
    go to.AD    ${URL}/sets.php?edit=${found ID}
    Reload page
    Wait until page contains element    //input[@id='field_SetDescription']
    Validate value (value)    //input[@id='field_DefaultPurchaseLimit']    4.00
    Validate value (value)    //input[@id='field_DefaultNonRefundableServicePayment']    4.00
    Validate value (value)    //input[@id='field_DefaultTransportationPayment']    3.00
    Validate value (text)    //*[@id="idCharNameEditbox"]/table/tbody/tr/td/span/button    ${Q-re type charac-s}
    Run keyword if    '${certificate}'=='False'    Validate value (text)    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    ${RobotTestClient}
    Validate value (text)    //*[@id="idAllowedFileTypeEditbox"]/table/tbody/tr/td/span/button    All
    Validate value (text)    //*[@id="idSetDesignEditbox"]/table/tbody/tr/td/span/button    Default
    Validate value (text)    //*[@id="idCSSFileNameEditbox"]/table/tbody/tr/td/span/button    Default
    Validate value (value)    //input[@id='field_SetDescription']    Questionnaire description: RF REVN DT ${DD.MM.YY}
    Validate value (value)    //input[@id='field_SetCode']    ${code}
    Validate value (value)    //input[@id='field_QuestionsPerPage']    50
    Validate value (text)    //*[@id="idAllowCritFileUploadEditbox"]/table/tbody/tr/td/span/button    ${atach files?}
    Validate value (text)    //*[@id="idGradingSystemEditbox"]/table/tbody/tr/td/span/button    ${Grading system}
    Validate value (text)    //*[@id="idAutoSectionWeightsEditbox"]/table/tbody/tr/td/span/button    Never
    Validate value (value)    //input[@id='field_SetName']    ${Robot q-ry}
    Validate value (text)    //*[@id="idShowProgressBarEditbox"]/table/tbody/tr/td/span/button    Bottom, Top, Bullets
    Validate value (text)    //*[@id="idAltLangNameEditbox"]/table/tbody/tr/td/span/button    (Not selected)
    Validate value (text)    //*[@id="idEnableQuestionNumberingInFormEditbox"]/table/tbody/tr/td/span/button    Question code
    Validate value (text)    //*[@id="idShowTOCEditbox"]/table/tbody/tr/td/span/button    Bottom
    CHECKBOX SHOULD NOT BE SELECTED    //input[@id='field_EnableValidationQuestion']
    CHECKBOX SHOULD NOT BE SELECTED    //input[@id='field_ForceImageStamp']
    CHECKBOX SHOULD NOT BE SELECTED    //input[@id='field_EnableNonansweredConfirmation']
    CHECKBOX SHOULD NOT BE SELECTED    //input[@id='field_ConfirmationQuestions']
    CHECKBOX SHOULD NOT BE SELECTED    //input[@id='field_AllowCheckerToSetFinishTime']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowNotFilled']
    Run keyword if    '${Robot q-ry}'=='RF Questionnaire [GLOBAL]'    CHECKBOX SHOULD NOT BE SELECTED    //input[@id='field_AnswersActAsSubmit']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_IsActive']
    #Validate value (text)    //*[@id="idOnePageLogicEditbox"]/table/tbody/tr/td/span/button    ${One Page logic?}
    Run keyword and ignore error    CHECKBOX SHOULD BE SELECTED    //input[@id='field_AutoApprovePayment']
    CHECKBOX SHOULD NOT BE SELECTED    //input[@id='field_ClearFalseDisplayConditionsQuestions']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowFreeTextBox']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowHeader']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowFooter']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowSaveAndExitButton']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowPreviewButton']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowRestartButton']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowExitDeleteButton']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowBackButton']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_ShowTimer']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_AllowCheckerToSetLang']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_IsGlobalSet']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_IsAvailableToAllClients']
    CHECKBOX SHOULD NOT BE SELECTED    //input[@id='field_VOIPAllowed']
    CHECKBOX SHOULD BE SELECTED    //input[@id='field_AllowSimulation']
    Log to console    "${Robot q-ry}" qry description has been updated/saved successfully
    Page should contain    Edit questionnaire contents
    Page should contain    Edit questionnaire-to-branch association
    Page should contain    Edit questionnaire access
    Page should contain    Edit briefings
    Page should contain    Edit target grades
    Page should contain    Performance level questions
    Page should contain    Alternative languages conditions
    Page should contain    Duplicate questionnaire
    Page should contain    Payments
    Page should contain    Display options
    Page should contain    General
    Log to console    Default page elements are seen

Assign order (via orders-management.php).AD
    [Arguments]    ${test order description}
    go to.AD    ${URL}/orders-management.php
    Log To Console    Let`s search an order (by its description="${test order description}") on order management page
    Log To Console    We are looking order in table by order description, validating each row----> (expected description: "${test order description}") and get its ID
    Click element    //span/select[@id='ClientID']
    Set Focus To Element    //span/select[@id='ClientID']
    Wait until page contains element    xpath=//option[contains(.,'${RobotTestClient}')]
    Click element    xpath=//option[contains(.,'${RobotTestClient}')]    #//*[@id="ClientID"]/option[215]
    Click element    //input[@id='refresh']
    Wait until page contains element    //*[@id="table_rows"]/tbody/tr
    ${index}    Set Variable    1
    ${elements}=    Get Element Count    //*[@id="table_rows"]/tbody/tr
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${elements}
        ${rowindex}=    Evaluate    ${rowindex}+1
        Set global variable    ${rowindex}
        ${actual order description}=    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[3]
        Run Keyword If    "${actual order description}" == "${test order description}"    Get order ID
        Log to console    № ${rowindex}. Found order with description in AD --> ${actual order description}
    END    #
    Run keyword and ignore error    Order page - check elements. AD    Ordered, awaiting assignation    ${DD.MM.YY}    ${Tday}    06:02    23:59
    Log To Console    Let`s assign the order using shopper property: 'Autotest'='Autotest-YES'
    go to.AD    ${URL}/crit-order-assignments.php?OrderID=${found order ID}
    Wait until page contains element    //form/input[@id='show']
    Select dropdown.AD    //select[@id='PropID']    xpath=//option[contains(.,'${Property name}')]
    sleep    1
    Select dropdown.AD    //*[@id="ValueID"]    xpath=//option[contains(.,'Autotest-YES')]
    Select dropdown.AD    //*[@id="pleaseFilter"]    //*[@id="pleaseFilter"]/option[2]
    Wait until page contains element    //form/input[@id='show']
    Click Element    //input[@id='show']
    Wait until page contains element    //*[@id="tabs"]/ul
    Element text should be    //*[@id="tabs"]/ul/li[2]/a    Map
    Element text should be    //*[@id="tabs"]/ul/li[1]/a    List
    Page should contain element    //input[@id='cancel_assignment']
    Page should contain element    //input[@id='scm']
    Element text should be    //th[@class='report-firstcol']    Order?
    Element text should be    //th[@class='report-dir'][1]/a[@class='report-caption']    Shopper code
    Element text should be    //th[@class='report-dir'][2]/a[@class='report-caption']    Shopper
    Element text should be    //th[@class='report-dir'][3]/a[@class='report-caption']    Phone
    Element text should be    //th[@class='report-dir'][4]/a[@class='report-caption']    Show shopper schedule
    Element text should be    //th[@class='report-dir'][5]/a[@class='report-caption']    Survey status
    Element text should be    //th[@class='report-dir'][6]/a[@class='report-caption']    Last visit in branch
    Element text should be    //th[@class='report-dir'][7]/a[@class='report-caption']    Distance
    Element text should be    //th[@class='report-dir'][8]/font/a[@class='tedit-caption']    Shopper comments
    Element text should be    //th[@class='report-dir'][9]/a[@class='report-caption']    Age
    Element text should be    //th[@class='report-dir'][10]/a[@class='report-caption']    Shopper priority
    Element text should be    //th[@class='report-dir'][11]/a[@class='report-caption']    Postcode
    Element text should be    //th[@class='report-dir'][12]/a[@class='report-caption']    Mismatch reason
    ###
    Execute JavaScript    window.document.getElementById("do_assignment").scrollIntoView(true)
    Element text should be    //td[@class='report-dir'][1]    RFCheckerCode_02
    Element text should be    //td[@class='report-dir'][2]    Robot 02 [Full Name]
    Element text should be    //td[@class='report-dir'][3]    +380670118780
    #Element text should be    //td[@class='report-dir'][4]    (1)
    #    Element text should be    //td[@class='report-dir'][5]    ${empty}
    #    Element text should be    //td[@class='report-dir'][6]    ${empty}
    Run keyword and ignore error    Element text should be    //td[@class='report-dir'][7]    13451.45
    Element text should be    //td[@class='report-dir'][8]    ${Assessor comment 1}
    Element text should be    //td[@class='report-dir'][9]    4
    Element text should be    //td[@class='report-dir'][10]    100
    Element text should be    //td[@class='report-dir'][11]    4455
    Run keyword and ignore error    Element text should be    //td[@class='report-dir'][12]    Accepted
    ###
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Set focus to element    //*[@id="assignmenttable"]/tbody/tr/td[1]/input
    Click Element    //*[@id="assignmenttable"]/tbody/tr/td[1]/input
    Click Element    //input[@id='do_assignment']
    Page should contain    1 orders assigned
    Log to console    Order `${found order ID}` (description="${test order description}") is assigned!
    Wait until page contains    Assigned, awaiting shopper acceptance
    Wait until page contains    ${test order description}
    #Check errors on page [-1]    FAILS ON TESTING

Deactivate shopper
    Get shopper ID    //*[@id="checkers_table"]/tbody/tr[1]/td[1]    //*[@id="checkers_table"]/tbody/tr[1]/td[2]
    Log to console    Open ${URL}/checkers.php?edit=${found ID}
    go to.AD    ${URL}/checkers.php?edit=${found ID}
    Check errors on page [-1]
    Log to console    Let`s deactivate the "${RobotTestShopper 01}"
    Get Title
    Click element    //*[@id="tabs"]/ul/li[1]
    Mouse over    //input[@id='field_IsActive']
    ${status}    Get Element Attribute    //input[@id='field_IsActive']    checked
    Run keyword if    '${status}'=='true'    Unselect Checkbox    //input[@id='field_IsActive']
    sleep    1
    ${checked1}    checkbox should not be selected    //input[@id='field_IsActive']
    sleep    1
    Click button    id=save
    Log to console    Shopper "${RobotTestShopper 01}" profile has been deactivated
    Exit forloop
    Check errors on page [-1]

Activate shopper
    Get ID    id="checkers_table"    ${RobotTestShopper 01}    1    2
    go to.AD    ${URL}/checkers.php?edit=${found ID}
    Log to console    Let`s activate "${RobotTestShopper 01}" profile
    Get Title
    Click element    //*[@id="tabs"]/ul/li[1]
    Mouse over    //input[@id='field_IsActive']
    ${status}    Get Element Attribute    //input[@id='field_IsActive']    checked
    Run keyword if    '${status}'=='None'    Select Checkbox    //input[@id='field_IsActive']
    ${checked1}    checkbox should be selected    //input[@id='field_IsActive']
    Click button    id=save
    Log to console    Shopper "${RobotTestShopper 01}" profile has been activated
    Check errors on page [-1]
    #Run Keyword If    '${check emails?}'=='True'    GMAIL: Your user is now Active.AD

Add new questionnaire (shopper can not select date)
    [Arguments]    ${Auto Questionnaire}
    go to.AD    ${URL}/sets.php?addnew
    Log to console    Let`s add new questionnaire: 1. Allow select language 2. Autoapprove 3. Shopper can not select date
    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr/td/table/tbody/tr/td/button
    Page should not contain    warning
    Page should not contain    notice
    Input text    //input[@id='field_SetName']    ${Auto Questionnaire}
    set focus to element    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button
    Page should not contain    Notice
    Click element    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button
    Click element    xpath=//li[contains(.,'${RobotTestClient}')]
    Select Checkbox    //input[@id='field_AllowCheckerToSetFinishTime']
    Select Checkbox    //input[@id='field_AutomaticApproval']
    Select Checkbox    //input[@id='field_AllowCheckerToSetLang']
    Click element    //input[@id='field_IsGlobalSet']
    Click element    //input[@id='addnew']
    Page should not contain    warning
    Page should not contain    notice

Open Job page and reject order
    [Arguments]    ${test order description}
    go to.AD    ${URL}/c_ordered-crits.php
    Check errors on page [-1]
    ${index}    Set Variable    1
    @{elements}    Get Webelements    //*[@id="orders_list"]/tbody/tr
    #iterate for each row
    FOR    ${element}    IN    @{elements}
    Set global variable    ${index}
    Set global variable    ${element}
    ${AD description}=    Get Text    //*[@id="orders_list"]/tbody/tr[${index}]/td[4]    #Description column should be the 4
    Check errors on page [-1]
    Set global variable    ${AD description}
    Log to console    ${index}. AR --> ${AD description}
    Log to console    ER --> ${test order description} - ${DD.MM.YY}
    Run Keyword If    '${AD description}'=='${test order description} - ${DD.MM.YY}'    Reject job
    ${index}=    Evaluate    ${index}+1
    Log to console    -----------------------------------------

Reject job
    Wait Until Page Contains Element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Status ID}]/form[2]
    Log to console    Pressing "Reject" button
    sleep    3
    Click element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Status ID}]/form[2]
    Wait Until Page Contains Element    //html/body/center/form/input[1]
    Input text    //html/body/center/form/input[1]    n/a for me today - ${DD.MM.YY}
    Log to console    Typing rejecting reason: "n/a for me today - ${DD.MM.YY}"
    Check errors on page [-1]
    Click element    id=send
    Check errors on page [-1]
    Wait Until Page Contains    Your refusal was recorded
    Log to console    Status: OK, "Your refusal was recorded"
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${ReviewID} =    Fetch From Right    ${Pageurl}    =
    log    ${ReviewID}
    Set global variable    ${ReviewID}
    Check errors on page [-1]
    Log to console    Q-ry has been rejected by shopper

Accept and Reject job.SD
    Log to console    Accepting job...
    sleep    1
    Click element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Status ID}]/form[1]    #//*[@id="orders_list"]/tbody/tr[${index}]/td[9]/form[1]
    Run Keyword If    '${check emails?}'=='True'    GMAIL: ALERT (no email body).AD    Email subject: RF Alert 01 (Accepted) rev date (${DD.MM.YY}); Status${\n} (Accepted, awaiting implementation)
    Check errors on page [-1]
    Scroll Element Into View    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Begin scorecard ID}]
    Element Text Should Be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Begin scorecard ID}]    You can not enter the review data today
    sleep    2
    Log to console    Shopper can see next message: "You can not enter the scorecard data today"
    Click element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Status ID}]/form[1]    #//table[@id='orders_list']/tbody/tr[@class='report${index} ']/td[@class='report-dir'][15]/form[@class='inline']/input[@id='Reject']
    Log to console    Clicking "Reject" button
    #Input text    //html/body/center/form/input[1]    n/a (date: ${DD.MM.YY})
    Log to console    Shoper skips entering text into a reason box
    Check errors on page [-1]
    Click element    id=send
    Reload page
    Check errors on page [-1]
    Wait Until Page Contains    Your refusal was recorded
    Check errors on page [-1]
    Log to console    Review has been rejected by shopper (order ID: ${found order ID})

Open Job page, accept and reject order
    [Arguments]    ${test order description}
    go to.AD    ${URL}/c_ordered-crits.php
    Check errors on page [-1]
    ${index}    Set Variable    1
    @{elements}    Get Webelements    //*[@id="orders_list"]/tbody/tr
    #${Orders q-ty on page}    Get Length    @{elements}
    #iterate for each row
    FOR    ${element}    IN    @{elements}
        ${AD description}=    Get Text    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Description ID}]
        ${order id}=    Get Text    //*[@id="orders_list"]/tbody/tr[${index}]/td[${OrderID ID}]
        Set global variable    ${order id}
        Set global variable    ${AD description}
        Set global variable    ${index}
        Log to console    ${index}. Searching order by description...
        Log to console    ER order description --> ${test order description}
        Log to console    AR order description --> ${AD description}
        Run Keyword If    '${AD description}'=='${test order description}'    Accept and Reject job.SD
        ${index}=    Evaluate    ${index}+1
        Log to console    -----------------------------------------
    END

Get order ID
    ${i}=    set variable    2
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${x}=    Run Keyword And Return Status    Should contain    ${Pageurl} =    operation-panel.php
    Run Keyword If    '${x}'=='True'    Evaluate index    ${i}
    ${found order ID}=    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[${i}]
    set global variable    ${found order ID}
    Log to console    Status: Order is found. Row ID="${rowindex}"; Order ID="${found order ID}"
    Exit for loop

Cancel order assignment
    [Arguments]    ${test order description}
    go to.AD    ${URL}/crit-order-assignments.php?OrderID=${found order ID}
    Wait until page contains element    //form/input[@id='show']
    Click Element    //select[@id='PropID']
    Click Element    xpath=//option[contains(.,'Autotest')]
    Wait until page contains element    id=ValueID
    Click Element    id=ValueID
    Click Element    //table[3]/tbody/tr/td[2]/select[@id='pleaseFilter']
    Click Element    xpath=//option[contains(.,'Autotest')]
    Click Element    xpath=//option[contains(.,'Autotest-YES')]
    sleep    2
    Set focus to element    //*[@id="pleaseFilter"]
    Click Element    //*[@id="pleaseFilter"]/option[2]
    Wait until page contains element    //form/input[@id='show']
    Click Element    //input[@id='show']
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Click Element    //*[@id="assignmenttable"]/tbody/tr/td[1]/input
    sleep    1
    Click Element    id=cancel_assignment
    Page should contain    Status: Ordered, awaiting assignation
    Log to console    Order assignment `${found order ID}` is cancelled!
    sleep    1

Switch language.SD
    [Arguments]    ${lang_ID}
    #go to    ${URL}/c_ordered-crits.php
    Check errors on page [-1]
    Wait Until Page Contains Element    id=set-language
    ${lang}=    Set variable    //*[@id="user_lang_id"]/option[${lang_ID}]
    Click element    id=set-language
    Mouse over    id=language-dialog-form
    Sleep    1
    Wait Until Page Contains Element    id=set-language
    Select From List By value    id=user_lang_id    ${lang_ID}
    Set Global Variable    ${lang_ID}
    Log    ${lang_ID}
    Sleep    1
    ${langX}=    Evaluate    ${lang_ID}+1
    ${lang2}=    Get Text    //*[@id="user_lang_id"]/option[${lang_ID}]
    ${lang3}=    Get Text    id=user_lang_id
    ${lang4}=    Get Value    ${lang}
    ${lang5}=    Get Text    //*[@id="user_lang_id"]/option[${langX}]
    ${lang6}=    Get Value    //*[@id="user_lang_id"]
    Check errors on page [-1]
    Click Button    default=Ok
    Sleep    1
    #${lang3}=    Get Value    //*[@id="user_lang_id"]/option[${lang_ID}]
    Check errors on page [-1]
    SeleniumLibrary.Capture Page Screenshot
    Log to console    The selected language is --> language with index=${lang_ID}.
    Run Keyword If    '${lang_ID}'=='11'    Set Global Variable    ${lang_ID}    ${XLS Column: en_UK}
    Run Keyword If    '${lang_ID}'=='42'    Set Global Variable    ${lang_ID}    ${XLS Column: ua_UA}
    Run Keyword If    '${lang_ID}'=='1'    Set Global Variable    ${lang_ID}    ${XLS Column: ar_EG}
    Run Keyword If    '${lang_ID}'=='2'    Set Global Variable    ${lang_ID}    ${XLS Column: ar_AE}
    Run Keyword If    '${lang_ID}'=='3'    Set Global Variable    ${lang_ID}    ${XLS Column: ar_SA}
    Run Keyword If    '${lang_ID}'=='4'    Set Global Variable    ${lang_ID}    ${XLS Column: bs_BA}
    Run Keyword If    '${lang_ID}'=='5'    Set Global Variable    ${lang_ID}    ${XLS Column: bg_BG}
    Run Keyword If    '${lang_ID}'=='6'    Set Global Variable    ${lang_ID}    ${XLS Column: hr_CR}
    Run Keyword If    '${lang_ID}'=='7'    Set Global Variable    ${lang_ID}    ${XLS Column: cs_CZ}
    Run Keyword If    '${lang_ID}'=='8'    Set Global Variable    ${lang_ID}    ${XLS Column: de_DE}
    Run Keyword If    '${lang_ID}'=='9'    Set Global Variable    ${lang_ID}    ${XLS Column: nl_NL}
    Run Keyword If    '${lang_ID}'=='10'    Set Global Variable    ${lang_ID}    ${XLS Column: en_AU}
    Run Keyword If    '${lang_ID}'=='12'    Set Global Variable    ${lang_ID}    ${XLS Column: en_US}
    Run Keyword If    '${lang_ID}'=='13'    Set Global Variable    ${lang_ID}    ${XLS Column: en_v2}
    Run Keyword If    '${lang_ID}'=='14'    Set Global Variable    ${lang_ID}    ${XLS Column: en_SRV}
    Run Keyword If    '${lang_ID}'=='20'    Set Global Variable    ${lang_ID}    ${XLS Column: nl_BE}
    Run Keyword If    '${lang_ID}'=='21'    Set Global Variable    ${lang_ID}    ${XLS Column: fr_FR}
    Run Keyword If    '${lang_ID}'=='22'    Set Global Variable    ${lang_ID}    ${XLS Column: fr_BE}
    Run Keyword If    '${lang_ID}'=='23'    Set Global Variable    ${lang_ID}    ${XLS Column: hu_HU}
    Run Keyword If    '${lang_ID}'=='24'    Set Global Variable    ${lang_ID}    ${XLS Column: jp_JP}
    Run Keyword If    '${lang_ID}'=='25'    Set Global Variable    ${lang_ID}    ${XLS Column: il_HE}
    Run Keyword If    '${lang_ID}'=='26'    Set Global Variable    ${lang_ID}    ${XLS Column: il_HEBAK}
    Run Keyword If    '${lang_ID}'=='27'    Set Global Variable    ${lang_ID}    ${XLS Column: il_HES}
    Run Keyword If    '${lang_ID}'=='28'    Set Global Variable    ${lang_ID}    ${XLS Column: it_IT}
    Run Keyword If    '${lang_ID}'=='29'    Set Global Variable    ${lang_ID}    ${XLS Column: lt_LTU}
    Run Keyword If    '${lang_ID}'=='30'    Set Global Variable    ${lang_ID}    ${XLS Column: mk_MK}
    Run Keyword If    '${lang_ID}'=='31'    Set Global Variable    ${lang_ID}    ${XLS Column: pl_PL}
    Run Keyword If    '${lang_ID}'=='32'    Set Global Variable    ${lang_ID}    ${XLS Column: pt_BR}
    Run Keyword If    '${lang_ID}'=='33'    Set Global Variable    ${lang_ID}    ${XLS Column: pt_PT}
    Run Keyword If    '${lang_ID}'=='34'    Set Global Variable    ${lang_ID}    ${XLS Column: ro_RO}
    Run Keyword If    '${lang_ID}'=='35'    Set Global Variable    ${lang_ID}    ${XLS Column: sr_SR}
    Run Keyword If    '${lang_ID}'=='36'    Set Global Variable    ${lang_ID}    ${XLS Column: sk_SK}
    Run Keyword If    '${lang_ID}'=='37'    Set Global Variable    ${lang_ID}    ${XLS Column: sl_SI}
    Run Keyword If    '${lang_ID}'=='38'    Set Global Variable    ${lang_ID}    ${XLS Column: zh_CM}
    Run Keyword If    '${lang_ID}'=='39'    Set Global Variable    ${lang_ID}    ${XLS Column: tu_TUR}
    Run Keyword If    '${lang_ID}'=='40'    Set Global Variable    ${lang_ID}    ${XLS Column: ua_RU}
    Run Keyword If    '${lang_ID}'=='41'    Set Global Variable    ${lang_ID}    ${XLS Column: ru_v2}
    Run Keyword If    '${lang_ID}'=='43'    Set Global Variable    ${lang_ID}    ${XLS Column: zh_SC}
    Run Keyword If    '${lang_ID}'=='44'    Set Global Variable    ${lang_ID}    ${XLS Column: zh_CM}
    Run Keyword If    '${lang_ID}'=='45'    Set Global Variable    ${lang_ID}    ${XLS Column: ka_GE}
    Run Keyword If    '${lang_ID}'=='46'    Set Global Variable    ${lang_ID}    ${XLS Column: nn_NO}
    Run Keyword If    '${lang_ID}'=='47'    Set Global Variable    ${lang_ID}    ${XLS Column: ru_Romir_Toyota}
    Run Keyword If    '${lang_ID}'=='16'    Set Global Variable    ${lang_ID}    ${XLS Column: es_CA}
    Run Keyword If    '${lang_ID}'=='17'    Set Global Variable    ${lang_ID}    ${XLS Column: es_SP}
    Log    XLS column is --> "${lang_ID}".
    Check errors on page [-1]

Manage orders page > Cancel order.AD
    [Arguments]    ${RobotTestClient}    ${order status}
    go to.AD    ${URL}/crit-orders-handle.php
    Log To Console    Let`s cancel all orders for test client --> "${RobotTestClient}"
    Page should contain element    id=pleaseFilter
    Page should contain element    id=TheDate
    Page should contain element    id=ClientID
    Page should contain element    id=BranchID
    Page should contain element    id=ProjectID
    Page should contain element    id=MassID
    Page should contain element    id=RegionID
    Page should contain element    id=update
    Page should contain element    //form[2]/p/table[3]/tbody/tr/td[1]/input
    Page should contain element    //input[@id='cancelOrders']
    Page should contain element    //input[@id='ChangeReviewsDate']
    Page should contain element    //input[@id='criorderdate']
    Page should contain element    //input[@class='btn-input']
    Page should contain element    //input[@class='btn-input'][1]
    Page should contain element    //input[@class='btn-input'][2]
    Page should contain element    //input[@id='Automatic assignment']
    Page should contain element    //input[@id='bulkAssignmentAmount']
    Page should contain element    //select[@id='CheckerID']
    Page should contain element    //input[@id='bulkAssignment']
    #----------------------------#
    Select dropdown.AD    //*[@id="pleaseFilter"]    //*[@id="pleaseFilter"]/option[2]
    Click element    //input[@id='update']
    sleep    1
    Run keyword if    ${preprod?}    Select dropdown.AD    //*[@id="OrderStatusLink"]    //*[@id="OrderStatusLink"]/option[${order status}]
    Click element    //input[@id='update']
    sleep    1
    Select dropdown.AD    //span/select[@id='ClientID']    xpath=//option[contains(.,'${RobotTestClient}')]
    sleep    1
    Click element    //input[@id='update']
    Page should contain    ${test order description}
    Log to console    Page contains text: "${test order description}"
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[2]/p/table[3]/tbody/tr/td[1]/input
    Click element    id=cancelOrders
    sleep    1
    Click element    //span/select[@id='ClientID']
    Element should not contain    //span/select[@id='ClientID']    xpath=//option[contains(.,'${RobotTestClient}')]
    Page should not contain    xpath=//option[contains(.,'${RobotTestClient}')]
    #Page should not contain    ${RobotTestClient}
    Page should not contain    ${test order description}
    Check errors on page [-1]
    Log to console    Dropbox "Client name" does not contain "${RobotTestClient}"
    Log to console    Page does not contain text: ${RobotTestClient}
    Log to console    Page does not contain text: ${test order description}
    Check errors on page [-1]
    Log to console    "${RobotTestClient}" orders (status=${order status}) were cancelled!

Deactivate shopper with assigned jobs
    Get ID    id="checkers_table"    ${RobotTestShopper 02}    1    2
    go to.AD    ${URL}/checkers.php?edit=${found ID}
    Log to console    Let`s deactivate the profile
    Get Title
    Click element    //*[@id="tabs"]/ul/li[1]
    Check errors on page [-1]
    Mouse over    //input[@id='field_IsActive']
    ${user status note}    Get text    //*[@id="idIsActiveEditbox"]/div
    Log to console    ${user status note}
    Scroll element into view    //td[@id='idIsActiveTedit']
    Scroll element into view    //td[@id='idIsActiveEditbox']
    Page should contain    Please note:
    Page should contain    You can't change the reviewer status to inactive because he/she has
    Page should contain link    Click here to edit the assignments
    ${status}    Get Element Attribute    //input[@id='field_IsActive']    checked
    Run keyword if    '${status}'=='true'    Log to console    Shopper status checkbox is active
    Click element    //input[@id='field_IsActive']
    Click element    id=save
    Page should contain    saved successfully
    Exit forloop

Cancel order assignation
    go to.AD    ${URL}/checker-assignation.php?CheckerID=${found ID}
    Log To Console    Let`s cancel the assignation
    Log To Console    Open ${URL}/checker-assignation.php?CheckerID=${found ID}
    Click element    id=cancelAssignments
    Page should contain    No assignments selected
    ${index}    Set Variable    1
    #Set global variable    ${index}
    @{elements}=    Get Webelements    //*[@id="CheckerAssigments"]/tbody/tr
    #iterate for each row
    FOR    ${row}    IN    @{elements}
        ${order description}=    Get Text    //*[@id="CheckerAssigments"]/tbody/tr[${index}]/td[13]
        Run Keyword If    "${order description}"=="${test order description}"    click element    //*[@id="CheckerAssigments"]/tbody/tr[${index}]/td[2]/input[@id='assignmentsArray']    #//*[@id="CheckerAssigments"]/tbody/tr[${index}]/td[2]
        ${index}=    Evaluate    ${index}+1
        #Checkbox should be selected    //*[@id="CheckerAssigments"]/tbody/tr[${index}]/td[2]/input[@id='assignmentsArray']
        Log to console    //*[@id="CheckerAssigments"]/tbody/tr[${index}]/td[2]/input[@id='assignmentsArray'] -> checkbox selected +
        Check errors on page [-1]
    END
    Click element    id=cancelAssignments
    Reload page
    Page should contain    Assignments for
    ####
    ${index}    Set Variable    1
    #Set global variable    ${index}
    @{elements}=    Get Webelements    //*[@id="CheckerAssigments"]/tbody/tr
    #iterate for each row
    FOR    ${row}    IN    @{elements}
        ${order description}=    Get Text    //*[@id="CheckerAssigments"]/tbody/tr[${index}]/td[13]
        Run Keyword If    "${order description}"=="${test order description}"    Log to console    order is still assigned
        ${index}=    Evaluate    ${index}+1
        Log to console    "${test order description}" not found in table od assigned jobs
        Check errors on page [-1]
    END
    Log To Console    The assignation has been cancelled

Remove yourself from the system.SD
    go to.AD    ${URL}/checkers.php?edit=y&auth_mode=2
    Log To Console    Shopper will try to remove his profile
    ${Shopper ID}    Get text    //tr[@id='tr_CheckerID']/td[@id='idCheckerIDEditbox']
    go to.AD    ${URL}/c_remove-checker.php?CheckerID=${Shopper ID}&auth_mode=2
    Page should contain    Pay attention: once you approve this action, your user will be removed from the system, and you will no longer be able to log into the system
    Page should contain    Reason for removal
    Page should contain    I understand the meaning of this action, and agree to remove my user from the system
    Page should contain    Remove my personal data (Warning Description)
    Input text    //textarea[@class='text-input-user']    Reason for my removal will be informed asap
    Select checkbox    //input[@id='iAgree']
    Select checkbox    //input[@id='iRemove']
    Click element    //input[@id='remove']
    Log to console    Shopper can see extra warnings like: ${\n}Pay attention: once you approve this action, your user will be removed from the system, and you will no longer be able to log into the system ${\n}Reason for removal I understand the meaning of this action, and agree to remove my user from the system Remove my personal data (Warning Description)
    Log to console    Shopper confirms the action!

Search shopper property.AD
    [Arguments]    ${Property name}    ${Option 1}    ${Option 2}
    go to.AD    ${URL}/checker-props.php?page_var_divide_recordsPerPage=500&page_var_divide_curPage=1
    Log to console    Go to ${URL}/checker-props.php and search "${Property name}"
    Input text    //input[@id='filter_1']    RF
    Wait until page contains element    //button[@class='btn-input']
    ${ItemIsVisible?}    Run keyword and return status    Page should contain    ${Property name}
    Run Keyword If    ${ItemIsVisible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Run Keyword If    ${ItemIsVisible?}==False    Add/Update Shopper property.AD    ${Property name}    none    1    1=1    true    true    true    true    1
    Run Keyword If    ${ItemIsVisible?}==True    Get ID    id="table_rows"    ${Property name}    1    2
    go to.AD    ${URL}/checker-props.php?page_var_divide_recordsPerPage=500&page_var_divide_curPage=1
    ${ItemIsVisible?}    Run keyword and return status    Page should contain    ${Property name}
    Run Keyword If    ${ItemIsVisible?}==True    Check if sorting is visible.AD    id="table_rows"
    #Run Keyword If    ${ItemIsVisible?}==True    Input text    //input[@id='filter_1']    RF property
    Run Keyword If    ${ItemIsVisible?}==True    Get ID    id="table_rows"    ${Property name}    1    2
    Run Keyword If    ${ItemIsVisible?}==True    go to    ${URL}/checker-props.php?edit=${found ID}
    ${parent prop ID}    set variable    ${found ID}
    Set global variable    ${parent prop ID}
    go to.AD    ${URL}/checker-props.php?page_var_divide_recordsPerPage=500&page_var_divide_curPage=1
    Log to console    Adding property options. Please wait...
    ${index}=    Set Variable    1
    Set global variable    ${index}
    @{elements}=    Get Webelements    //*[@id="table_rows"]/tbody/tr
    SeleniumLibrary.Capture Page Screenshot
    #iterate for each row
    FOR    ${row}    IN    @{elements}
        ${act prop name}=    Get Text    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        Run Keyword If    '${act prop name}'=='${Property name}'    Add property options (select)    ${Option 1}    ${Option 2}
        ${index}=    Evaluate    ${index}+1
        Set global variable    ${index}
    END

Add property options (select)
    [Arguments]    ${Option 1}    ${Option 2}
    ${prop ID}=    Get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]/a
    Set global variable    ${prop ID}
    Log to console    Created prop ID=${prop ID}
    go to.AD    ${URL}/checker-prop-values.php?prop=${prop ID}
    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Input text    //input[@id='field_Order']    1
    Set checkbox.AD    //input[@id='field_IsActive']    true
    Input text    id=field_Content    ${Option 1}
    Click element    id=addnew
    Check result on adding new item.AD    already exists    ${Option 1}
    Check errors on page [-1]
    Go to    ${URL}/checker-prop-values.php?prop=${prop ID}
    Check errors on page [-1]
    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Input text    //input[@id='field_Order']    2
    Set checkbox.AD    //input[@id='field_IsActive']    true
    Input text    id=field_Content    ${Option 2}
    Click element    id=addnew
    Check result on adding new item.AD    already exists    ${Option 2}
    Check errors on page [-1]
    Exit forloop

Validate and Import questions.AD
    [Arguments]    ${import_file1}    ${import_file2}    ${import_file3}
    Go to2.AD    ${URL}/setedit-import.php?SetID=${found ID}
    Run keyword and ignore error    Delete prev questions
    Validate import file    ${import_file1}    ${import_file2}
    Run Keyword If    ${testing?}    Choose File    //*[@id="Checker_Upload_Form"]/table/tbody/tr[2]/td[2]/input    ${CURDIR}\\Extra files\\Questionnaires\\${import_file1}
    Run Keyword If    ${preprod?}    Choose File    //*[@id="Checker_Upload_Form"]/table/tbody/tr[2]/td[2]/input    ${CURDIR}\\Extra files\\Questionnaires\\${import_file2}
    Run Keyword If    ${demo?}    Choose File    //*[@id="Checker_Upload_Form"]/table/tbody/tr[2]/td[2]/input    ${CURDIR}\\Extra files\\Questionnaires\\${import_file3}
    Check errors on page [2]
    Wait until page contains element    id=upload
    Click element    id=import
    Click element    id=upload
    Wait until page contains    Validation completed
    Log to console    No problems found. Starting import process...
    Check errors on page [2]
    log to console    Q-ry has been imported properly
    Go to2.AD    ${URL}/setedit-frameset.php?SetID=${found ID}
    select frame    objects
    Page should contain element    //*[@id="select-all"]
    Page should not contain element    //*[@id="object_list"]/tbody/tr[5]

Simulate job
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[6]/button[1]    Execute a simulation
    Click element    //*[@id="orders_list"]/tbody/tr[${index}]/td[6]/button[1]
    #Click element    //*[@id="orders_list"]/tbody/tr[${index}]/td[3]
    #Click element    //*[@id="orders_list"]/tbody/tr[${index}]/td[3]/button[@class='btn-input'][1]
    Select window    Auto Questionnaire 03
    Wait until page contains element    id=update
    Page should contain    Enter your name
    Page should contain element    id=update
    Page should not contain    warning
    Page should not contain    notice
    Select window    main

Validate import file
    [Arguments]    ${import_file1}    ${import_file2}
    go to.AD    ${URL}/setedit-import.php?SetID=${found ID}
    Log to console    Let`s import valid questions at ${URL}/setedit-import.php?SetID=${found ID}
    Wait until page contains element    id=upload
    ${ab}=    Set variable    ${URL}
    ${import file?}=    Run Keyword And Return Status    Should contain    ${ab}    testing
    Set global variable    ${import file?}
    Run Keyword If    '${import file?}'=='True'    Choose File    //*[@id="Checker_Upload_Form"]/table/tbody/tr[2]/td[2]/input    ${CURDIR}\\Extra files\\Questionnaires\\${import_file1}
    Run Keyword If    '${import file?}'=='False'    Choose File    //*[@id="Checker_Upload_Form"]/table/tbody/tr[2]/td[2]/input    ${CURDIR}\\Extra files\\Questionnaires\\${import_file2}
    Click element    id=upload
    Wait until page contains    Validation completed
    Log to console    Let`s validate the file. Validation completed...
    Wait until page contains    No problems found.
    Log to console    No problems found. Validation completed
    Check errors on page [-1]
    log to console    Q-ry has been validated properly

Delete prev questions
    Go to2.AD    ${URL}/setedit-frameset.php?SetID=${found ID}
    Wait until page contains    ${Robot q-ry}
    select frame    objects
    sleep    1
    ${is element visible}    Run keyword and return status    Page should contain    c:UncJump
    Run keyword if    ${is element visible}    GET qns.AD    0
    Run keyword if    ${is element visible}    Go to2.AD    ${URL}/setedit-frameset.php?SetID=${found ID}
    Run keyword if    ${is element visible}    Go to2.AD    ${URL}/setedit-delete.php?SetID=${found ID}&DataID=${Dictionary}[c:UncJump]
    Run keyword and ignore error    Click element    id=delete
    Run keyword and ignore error    Handle Alert    ACCEPT
    #
    Go to2.AD    ${URL}/setedit-frameset.php?SetID=${found ID}
    Wait until page contains    ${Robot q-ry}
    select frame    objects
    Page should not contain    c:UncJump
    select frame    objects
    ${is element visible}    Run keyword and return status    Page should contain element    //*[@id="select-all"]
    Run keyword if    ${is element visible}    Log to console    deleting the questions. please wait
    ...    ELSE    Return from keyword
    Click element    //*[@id="select-all"]
    Click element    //*[@id="delete-all"]
    Run keyword and ignore error    Handle Alert    ACCEPT
    Run keyword and ignore error    Handle Alert    ACCEPT
    Run keyword and ignore error    reload page
    Run keyword and ignore error    select frame    objects
    sleep    1
    Page should contain    ${Robot q-ry}
    Page should not contain element    //*[@id="object_list"]/tbody/tr[1]/td[1]
    log to console    Status: OK - all questions were deleted
    [Teardown]

Create test order (Single)
    [Arguments]    ${test order description}    ${RobotTestClient}    ${Auto Questionnaire}
    go to.AD    ${URL}/crit-do-order.php
    Log to console    Creating new order (Single), please wait...
    wait until page contains element    //select[@id='ClientID']
    Set focus to element    //select[@id='ClientID']
    Click element    //select[@id='ClientID']
    select from list by label    //select[@id='ClientID']    ${RobotTestClient}
    sleep    1
    Click element    //select[@id='SetID']
    Scroll Element Into View    //select[@id='SetID']
    select from list by label    //select[@id='SetID']    ${Auto Questionnaire}
    Input text    startingTime    ${order start_time}
    Input text    endingTime    ${order end_time}
    Input text    name=NonRefundableServicePayment    4.00
    Input text    name=Description    ${test order description}
    Set checkbox.AD    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[22]/td[2]/input    true
    Input text    PurchaseLimit    100
    Input text    PurchaseDescription    RF Purchase Description Single Order
    Input text    NonRefundableServicePayment    10
    Input text    TransportationPayment    9
    Input text    BonusPayment    4
    Input text    AgeMin    18
    Input text    AgeMax    55
    Select dropdown.AD    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[20]/td[2]/span/button    xpath=//option[contains(.,'${RF Briefing}')]
    Click element    //input[@id='do_order']
    Reload page
    Run keyword and ignore error    click link    default=Please click here to continue.
    Check errors on page [-1]
    Page should contain    Order saved
    Page should contain    Edit assignments
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${found order ID}=    Fetch From Right    ${Pageurl}    =
    Log to console    Order ID: "${found order ID}"
    Set global variable    ${found order ID}
    Check errors on page [-1]

Open PDF review
    [Arguments]    ${ReviewID}
    go to.AD    ${URL}/show-entire-crit-v6.php?CritID=${ReviewID}
    Log to console    Review in PDF is available (page is not checked!!!)

Check Review handling details page.AD
    [Arguments]    ${exp status}    ${returned?}    ${Free text message}    ${Internal message}    ${Result}
    go to.AD    ${URL}/crit-handling-details.php?CritID=${ReviewID}
    Wait Until Page Contains Element    //input[@id='checkAndSendAlerts']
    #Review handling details.Check default elements
    Page should contain element    //input[@class='btn-input']
    Page should contain element    id=SimulateAlerts
    Page should contain element    id=SimulateReview
    #Element Should Be Visible    //div[1]/table[1]/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/div/table/tbody/tr[1]/td[2]/table/tbody/tr[2]/td/fieldset/form/table[2]/tbody/tr/td/table/tbody/tr[2]/td[4]/a[1]/img
    #Element Should Be Visible    //div[1]/table[1]/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/div/table/tbody/tr[1]/td[2]/table/tbody/tr[2]/td/fieldset/form/table[2]/tbody/tr/td/table/tbody/tr[2]/td[4]/a[1]/img
    #Wait until page contains element    //form[@id='_attachments']/input[2]
    #Wait until page contains element    //form[@id='_attachments']/input[3]
    #Wait until page contains element    //form[@id='_attachments']/input[4]
    #Wait until page contains element    //form[@id='_attachments']/input[5]
    #Wait until page contains element    //form[@id='_attachments']/input[6]
    #Wait until page contains element    //form[@id='_attachments']/input[7]
    #Wait until page contains element    //form[@id='_attachments']/input[8]
    ###
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][1]    ${test order description}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][2]    ${found order ID}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][3]    ${ManagerUsername}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][4]    ${RobotTestClient}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][5]    ${Full auto branch name 01} (${Short auto branch name 01})
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][6]    Zelena street 45A, 44
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][7]    ${RobotQ-ry SHOPPERS}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][8]    ${RF Briefing}
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][9]    ${DD.MM.YY} ${Ttime}    #should match regexp \ ${item} \ \ \ \ ^Liability: \\d{3}-\\d{1}-2\\d{4}.*$
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][10]    ${DD.MM.YY} ${Ttime}
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][11]    ${DD.MM.YY} ${Ttime}
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][12]    ${DD.MM.YY} ${Ttime}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][13]    ${DD.MM.YY}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][14]    ${Result}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][15]    Robot 02 [Full Name] (Robot 02 [Short Name]) p:100
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][16]    ${DD.MM.YY} ${Ttime}: ${Internal message}
    ${a}=    Set variable    ${returned?}
    ${x}=    Run Keyword And Return Status    Should contain    ${a}    ${test order description}
    Run Keyword If    '${x}'=='NO'    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][16]    No
    Run Keyword If    '${x}'=='YES'    Check returned review elements.AD
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][17]    No
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][18]    No
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][19]    ${ReviewID} ${exp status}
    Page should contain    ${Free text message}
    Run keyword and ignore error    Page should contain    ${Internal message}    # fails on preprod
    Page should contain    ${exp status}
    Page should contain    ${ReviewID}
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][1]    Mass order description
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][2]    OrderID
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][3]    Assigned to shopper by
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][4]    Client name
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][5]    Full name
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][6]    Address
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][7]    Questionnaire name
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][8]    Briefing description
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][9]    Shopper acceptance date
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][10]    Start time
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][11]    Finish time
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][12]    Review filling time
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][13]    Order due date
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][14]    Result
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][15]    Shopper name
    ${is element visible?}=    Run keyword and return status    Page should contain    Shopper comments
    Run keyword if    "${is element visible?}"=="False"    Shopper comments is not visible.AD
    Run keyword if    "${is element visible?}"=="True"    Shopper comments visible.AD
    Log to console    [Review handling details page] status ok (+)
    Log to console    Actual review status: [${exp status}]
    ####
    Page should contain    ${Free text message}
    Page should contain element    //img[contains(@src, "RFtestattachedfile.png")]
    Page should contain element    //img[contains(@src, "RFtestattachedfile.jpg")]
    Page should contain    file_example_WAV_1MG.wav
    Page should contain    Download
    Page should contain    1.02m
    Page should contain    69.25k
    Page should contain    152.51k
    Log to console    Page contains images: 1. //img[contains(@src, "RFtestattachedfile.png")] 2. //img[contains(@src, "RFtestattachedfile.jpg")] 3. file_example_WAV_1MG.wav
    ###############

Manage Orders.table export
    [Arguments]    ${test order description}    ${RobotTestClient}
    Reload page
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/input[1]
    Wait until page contains element    //*[@id="do_exportall"]
    Check errors on page [-1]
    Select dropdown.AD    //*[@id="export_type"]    //*[@id="export_type"]/option[3]
    Click element    //*[@id="export_type"]
    sleep    3
    set focus to element    //*[@id="do_export"]
    Click element    //*[@id="do_export"]
    Check errors on page [-1]
    Wait until page contains element    css:[class="export_download"]
    Click element    css:[class="export_download"]
    Wait until page contains element    0000
    Go to    ${URL}/crit-orders-handle.php
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[2]/p/table[3]/tbody/tr/td[1]/input
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/input[2]
    Check errors on page [-1]
    Get Window Names
    @{id1}=    Get Window Identifiers
    @{id2}=    Get Window Names
    @{id3}=    Get Window Titles
    ${id4}=    Get Title
    Mouse over    //*[@id="exportfrom"]
    Set focus to element    //*[@id="exportfrom"]
    Input text    //*[@id="exportfrom"]    1
    Input text    //input[@id='exportto']    100
    sleep    2
    Check errors on page [-1]
    #Go to    ${URL}/crit-orders-handle.php?pleaseFilter=unassigned_f&TheDate=03%2F2021&ClientID=1293&BranchID=0&ProjectID=0&MassID=0&RegionID=0&update=Please%2Bwait
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Mouse over    //*[@id="do_exportall"]
    Click element    //*[@id="do_exportall"]
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[2]/p/a
    Confirm action
    Check errors on page [-1]

Get client ID
    ${found ID}    Get Text    //tbody/tr[@class='report1 ']/td[@class='report-dir'][1]
    Set global variable    ${found ID}
    Exit for loop

Publish the order
    [Arguments]    ${test order description}    ${RobotTestClient}    ${Auto Questionnaire}
    go to.AD    ${URl}/orders-management.php
    Log to console    Go to ${URl}/orders-management.php TO PUBLISH THE ORDER
    Select dropdown.AD    //select[@id='ClientID']    xpath=//option[contains(.,'${RobotTestClient}')]
    #Select dropdown    //select[@id='sPublicized']    xpath=//option[contains(.,'Yes')]
    Click element    //input[@id='refresh']
    Check errors on page [-1]
    ${index}    Set Variable    1
    Set global variable    ${index}
    @{elements}    Get Webelements    //*[@id="table_rows"]/tbody/tr
    FOR    ${elements}    IN    @{elements}
        ${AD description}=    Get Text    //*[@id="table_rows"]/tbody/tr[${index}]/td[3]
        Check errors on page [-1]
        Set global variable    ${AD description}
        Set global variable    ${index}
        ${OP: Order ID}=    Get Text    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        Log to console    ${index}. AR --> ${AD description}
        Log to console    ER --> ${test order description}
        Run Keyword If    "${AD description}"=="${test order description}" and "${found order ID}"=="${OP: Order ID}"    exit for loop
        ${index}=    Evaluate    ${index}+1
        Log to console    not matched
    END
    Click element    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]
    Click element    //input[@id='publicizeOrders']
    Wait until page contains    1 orders publicized
    Check errors on page [-1]
    Log to console    Order "${found order ID}" has been published

Open Job Board and apply order.SD
    [Arguments]    ${test order description}    ${RobotTestClient}    ${Auto Questionnaire}
    go to.AD    ${URL}/c_ordered-crits.php?showJobBoard=1
    Log to console    Open ${URL}/c_ordered-crits.php?showJobBoard=1
    Set focus to element    name=frm
    Set focus to element    id=ClientID
    Select dropdown.AD    //center/form/table/tbody/tr[1]/td[1]/table/tbody/tr/td    xpath=//li[contains(.,'${RobotTestClient}')]
    #select from list by label    //select[@id='ClientID']    ${RobotTestClient}
    Click element    //center/form/table/tbody/tr[1]/td[3]/table/tbody/tr/td/span/button
    Click element    //div[4]/div/ul/li[2]/a/span[2]
    Click element    //center/form/table/tbody/tr[1]/td[3]/table/tbody/tr/td/span/button
    Click element    id=Filter
    ${index}    Set Variable    1
    #Page should contain    ${test order description}
    Job board and get columns ID by title
    ${Rows} =    Get Element Count    //*[@id="orders_list"]/tbody/tr
    Set global variable    ${index}
    FOR    ${i}    IN RANGE    ${Rows}
        Scroll Element Into View    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Description ID}]
        ${AD description}=    Get Text    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Description ID}]
        ${Order ID}=    Get text    //*[@id="orders_list"]/tbody/tr[${index}]/td[${OrderID ID}]
        Check errors on page [-1]
        Set global variable    ${AD description}
        Set global variable    ${index}
        Log to console    ${index}. AR --> "${AD description}" VS ER --> "${test order description}"
        Log to console    Order ID="${Order ID}" VS ЕR --> "${found order ID}"
        Scroll Element Into View    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Description ID}]
        Run Keyword If    '${AD description}'=='${test order description}' and '${Order ID}'=='${found order ID}'    Click element    //table[2]/tbody/tr/td/table/tbody/tr[${index}]/td[${Status ID}]/input
        #Run Keyword If    '${AD description}'=='${test order description}' and '${Order ID}'=='${found order ID}'    Click element    //*[@id="orders_list"]/tbody/tr[${index}]/td[15]
        Run Keyword If    '${AD description}'=='${test order description}' and '${Order ID}'=='${found order ID}'    Log to console    Found. Pressing Apply button...
        Run Keyword If    '${AD description}'=='${test order description}' and '${Order ID}'=='${found order ID}'    exit for loop
        ${index}=    Evaluate    ${index}+1
        Log to console    -----------------------------------------
        Check errors on page [-1]
    END

Delete my IP
    Log to console    "${My IP}" is already added to white list. Deleting it...
    ${index}    Set Variable    1
    @{elements}=    Get Webelements    //*[@id="IPWhiteList"]/tbody/tr
    ${rows}=    Get Element Count    //*[@id="IPWhiteList"]/tbody/tr
    Log to console    Found rows=${rows}
    FOR    ${i}    IN RANGE    1
        ${FoundIP}    Get text    //*[@id="IPWhiteList"]/tbody/tr[${index}]/td[2]
        Run Keyword If    '${My IP}'=='${FoundIP}'    click element    //*[@id="IPWhiteList"]/tbody/tr[${index}]/td[1]
        ...    ELSE    Exit forloop
        ${index}=    Evaluate    ${index}+1
        Set global variable    ${index}
        click element    //*[@id="IPWhiteList_wrapper"]/div[4]/button[1]/span
        go to    ${URL}/index.php?Controller=IPWhiteList&Action=List&Args[dt][pageLength]=500&Args[dt][displayStart]=0&Args[dt][order][0][0]=1&Args[dt][order][0][1]=desc
        Page should not contain    ${My IP}
        Log to console    "${My IP}" has been deleted from a list.
        Check errors on page [-1]
    END

Check errors on page [-1]
    #Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    [-1]
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    error -
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    warning -
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    502 Bad Gateway
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    notice:
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    notice -
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    Fatal error:
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    Database error
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    myErrorHandler
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    reportErrorOrWarning
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Page should not contain    Deprecated:
    ${ActualPageUrl} =    Execute Javascript    return window.location.href
    Run Keyword If    '${FAIL ON EXTRA NOTICE?}'=='YES'    Log    [Sub task] Status: OK (+) -> no fatal/database errors, warnings or (deprecated) notices.
    [Teardown]

Add test country.AD
    [Arguments]    ${Robot country}
    go to.AD    ${URL}/countries.php?page_var_divide_recordsPerPage=500
    Wait until page contains element    //button[@class='btn-input']
    Log to console    Let`s add "${Robot country}" using this page
    ${element present?}=    Run Keyword And Return Status    Page should contain    ${Robot country}
    Run Keyword If    ${element present?}    click link    default=${Robot country}
    Run Keyword If    ${element present?}==False    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Wait until page contains element    //input[@id='field_CountryName']
    Input text    //input[@id='field_CountryName']    ${Robot country}
    Input text    //input[@id='field_CountryCode']    01
    Input text    //input[@id='field_CountryState']    Robot state 01
    Input text    //input[@id='field_Order']    1
    Input text    //input[@id='field_Description']    RF country description
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    click link    default=${Robot country}
    Wait until page contains element    //input[@id='field_CountryName']
    Validate value (value)    //input[@id='field_CountryName']    ${Robot country}
    Validate value (value)    //input[@id='field_CountryCode']    01
    Validate value (value)    //input[@id='field_CountryState']    Robot state 01
    Validate value (value)    //input[@id='field_Order']    1
    Validate value (value)    //input[@id='field_Description']    RF country description

Add test region.AD
    [Arguments]    ${Robot region}
    go to.AD    ${URL}/regions.php?&page_var_divide_recordsPerPage=3000
    Wait until page contains element    //button[@class='btn-input']
    Log to console    Let`s add/update "${Robot region}" using the page
    Input text    //input[@id='page_var_filter_RegionName']    ${Robot region}
    Click element    //input[@id='update']
    ${element present?}=    Run Keyword And Return Status    Page should contain    ${Robot region}
    Run Keyword If    ${element present?}    Get ID    id="table_rows"    ${Robot region}    2    3
    Run Keyword If    ${element present?}    go to.AD    ${URL}/regions.php?&edit=${found ID}
    Run Keyword If    ${element present?}==False    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Wait until page contains element    //input[@id='field_RegionName']
    Input text    //input[@id='field_RegionName']    ${Robot region}
    Input text    //input[@id='field_Description']    ${Robot region} description
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    sleep    1
    Click element    //tr[@id='tr_CountryName']/td[@id='idCountryNameEditbox']
    Scroll Element Into View    //span[contains(.,'Robot country 01(Robot state 01/01)')]
    #Click element    //body/div[5]/div/div/input
    #Input text    //body/div[5]/div/div/input    Robot country 01(Robot state 01/01)
    #    //li[contains(.,'Robot country 01(Robot state 01/01)')]
    select from list by label    id=field_CountryName    Robot country 01(Robot state 01/01)
    Validate value (text)    //tr[@id='tr_CountryName']/td[@id='idCountryNameEditbox']    Robot country 01(Robot state 01/01)
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    go to.AD    ${URL}/regions.php?&edit=${found ID}
    Wait until page contains element    //input[@id='field_RegionName']
    Validate value (value)    //input[@id='field_RegionName']    ${Robot region}
    Validate value (value)    //input[@id='field_Description']    ${Robot region} description
    Validate value (text)    //tr[@id='tr_CountryName']/td[@id='idCountryNameEditbox']    Robot country 01(Robot state 01/01)

Add test city.AD
    [Arguments]    ${Robot city}
    go to.AD    ${URL}/cities.php?page_var_divide_recordsPerPage=200
    Wait until page contains element    //button[@class='btn-input']
    Log to console    Let`s add/update "${Robot city}"
    Input text    //input[@id='page_var_filter_CityName']    ${Robot city}
    Click element    //input[@id='update']
    ${element present?}=    Run Keyword And Return Status    Page should contain    ${Robot city}
    Run Keyword If    ${element present?}    Get ID    id="table_rows"    ${Robot city}    2    3
    Run Keyword If    ${element present?}==False    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Run Keyword If    ${element present?}    go to.AD    ${URL}/cities.php?&edit=${found ID}
    Wait until page contains element    //input[@id='field_CityName']
    Input text    //input[@id='field_CityName']    ${Robot city}
    Click element    //*[@id="idRegionNameEditbox"]/table/tbody/tr/td/span/button
    Run keyword and ignore error    Click element    xpath=//li[contains(.,'${Robot country 01} -- ${Robot region 01}')]
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    go to.AD    ${URL}/cities.php?&edit=${found ID}
    Validate value (value)    //input[@id='field_CityName']    ${Robot city}
    Validate value (text)    //*[@id="idRegionNameEditbox"]/table/tbody/tr/td/span/button    ${Robot country 01} -- ${Robot region 01}
    Validate value (text)    //td[@id='idCountryNameEditbox']    ${Robot country 01}

Edit questionnaire access.AD
    Click element    //form[1]/table/tbody/tr/td[1]
    Log to console    "RobotTestShopper 02" has no access to this q-ry
    Check errors on page [-1]
    sleep    1
    #Scroll Element Into View    //*[contains(text(), '${UpdatedShopperName} ${DD.MM.YY} (${RobotTestShopper 02})')]
    #Click element    //*[contains(text(), '${UpdatedShopperName} ${DD.MM.YY} (${RobotTestShopper 02})')]
    select from list by label    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr/td[1]/select    ${UpdatedShopperName} (${RobotTestShopper 02})
    sleep    1
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr/td[2]/input[2]
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Element Is Enabled    //input[@id='save']    20
    Check errors on page [-1]
    Log to console    Access for RobotTestShopper 02 has been granted

Check questionnaire access
    Check authorized assessors

Check authorized assessors
    go to.AD    ${URL}/set-edit-access.php?SetID=${found ID}
    log to console    Validating authorized assessors...
    @{elements}    Get List Items    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr/td[3]/select
    #iterate for each row
    FOR    ${element}    IN    @{elements}
        Log to console    Authorized assessor --> "${element}"
        Log    '${element}' vs '${UpdatedShopperName} (${RobotTestShopper 02})'
        Return from keyword if    '${element}'=='${UpdatedShopperName} (${RobotTestShopper 02})'
    END
    log to console    Granting the access for "RobotTestShopper 02" assessor...
    Edit questionnaire access.AD

Get My IP
    go to    https://www.myip.com/
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${a}    Run Keyword and return status    Should be equal    ${Pageurl}    https://www.myip.com/
    Run Keyword If    "${a}"=="False"    Go to    https://www.myip.com/
    Log to console    https://www.myip.com/
    ${My IP}    Get text    //div[@class='texto_1']/span[@id='ip']
    Set global variable    ${My IP}
    Log to console    My IP: ${My IP} (grabbed at https://www.myip.com/)

Add IP whitelist
    go to.AD    ${URL}/index.php?Controller=IPWhiteList&Action=List&Args[dt][pageLength]=500&Args[dt][displayStart]=0&Args[dt][order][0][0]=1&Args[dt][order][0][1]=desc
    Wait until page contains element    //*[@id="side_menu"]/tbody/tr/td[3]/a
    Log to console    Checking if "${My IP}" is already added to white list. If "Yes" will delete it (otherwise it will be not saved second time)
    ${IsMyIPVisible}=    Run Keyword And Return Status    Page should contain    ${My IP}
    Sleep    1
    Run keyword if    '${IsMyIPVisible}'=='True'    Delete my IP
    go to.AD    ${URL}/index.php?Controller=IPWhiteList&Action=Add
    Wait until page contains element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]/input
    Log to console    Trying to save changes without entering a required IP address value
    Page should contain    IP White List - Add IP
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]/input
    Page should contain    IP - Mandatory field
    Log to console    Status: OK, Result: page shows "IP - Mandatory field" message
    Log to console    Trying to save changes using wrong (not valid format) IP address value, like "333"
    Input text    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[1]/td[2]/input    333
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]/input
    Check errors on page [-1]
    Page should contain    IP - Invalid format
    Log to console    Status: OK, Result: page shows "IP - Invalid format" message
    Input text    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[1]/td[2]/input    ${My IP}
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]/input
    Log to console    Trying to save changes using valid required IP address value --> "${My IP}"
    Check errors on page [-1]
    Page should contain    IP White List
    wait until page contains    ${My IP}
    go to.AD    ${URL}/index.php?Controller=IPWhiteList&Action=Add
    Input text    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[1]/td[2]/input    ${My IP}
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]/input
    Check errors on page [-1]
    Log to console    Status: OK, Result: after reopening the page shows it shows "${My IP}" in a list.

Search profile.AD
    [Arguments]    ${RobotTestShopper}
    ${index}=    Set variable    1
    Log to console    Searching "${RobotTestShopper}" using search bar...
    FOR    ${i}    IN RANGE    3
        Check errors on page [-1]
        Search Element.AD    ${RobotTestShopper}    ${Checker Table ID}
        Run Keyword If    ${ItemIsNotVisible}    Add new shopper.AD    ${RobotTestShopper}    ${Robot country 01}    ${Robot region 01}    ${Robot city 01}
        Run Keyword If    ${ItemIsVisible}    Get ID    id="checkers_table"    ${RobotTestShopper}    1    2
        Run Keyword If    ${ItemIsVisible}    exit for loop
        ${index}=    Evaluate    ${index}+1
        Log to console    status: ok
    END

Search the Q-ry (via search bar).AD
    [Arguments]    ${RobotTestQ-ry}
    ${index}=    Set variable    1
    FOR    ${i}    IN RANGE    2
        Search Element.AD    ${RobotTestQ-ry}    id=crit_sets_table
        Run Keyword If    ${ItemIsNotVisible}    Create new questionnaire    ${RobotTestQ-ry}
        ...    ELSE    Log to console    "${RobotTestQ-ry}" questionnaire is found in a system
        Run Keyword If    ${ItemIsVisible}    Get ID    id="crit_sets_table"    ${RobotTestQ-ry}    1    2
        Run Keyword If    ${ItemIsVisible}    exit for loop
        ${index}=    Evaluate    ${index}+1
        Log to console    try ${index}.
    END
    ${Robot q-ry}    Set variable    ${RobotTestQ-ry}
    Set global variable    ${Robot q-ry}
    ${Qre ID}    set variable    ${found ID}
    set global variable    ${Qre ID}
    ${code}    get text    //*[@id="crit_sets_table"]/tbody/tr[${index}]/td[3]
    set global variable    ${code}

Deactivate shopper.AD
    ${index}=    set variable    1
    Log to console    Searching for --> "${RobotTestShopper 02}" profile
    FOR    ${i}    IN RANGE    5
        Search Element.AD    ${RobotTestShopper 02}    ${Checker Table ID}
        Run Keyword If    ${ItemIsNotVisible}    Add new shopper.AD
        ...    ELSE    Log to console    Shopper is found in a system.
        Run Keyword If    ${ItemIsVisible}    Deactivate shopper with assigned jobs
        ...    ELSE    Log to console    Shopper is not found in a system.
        ${index}=    Evaluate    ${index}+1
        Log    try ${index}.
    END

Search shopper.AD
    Log to console    Searching for --> "${RobotTestShopper 01}" profile (this shopper credenttias will bу used for test)
    ${index}    Set variable    1
    FOR    ${i}    IN RANGE    5
        Search Element.AD    ${RobotTestShopper 01}    ${Checker Table ID}
        Run Keyword If    ${ItemIsNotVisible}    Add new shopper.AD    ${RobotTestShopper 01}    ${Robot country 01}    ${Robot region 01}    ${Robot city 01}
        Run Keyword If    ${ItemIsVisible}    Deactivate shopper
        ...    ELSE    Log to console    Shopper is not found in a system.
        ${index}=    Evaluate    ${index}+1
        Log to console    try ${index}.
    END
    go to.AD    ${URL}/c_login.php

Search shopper by AD
    [Arguments]    ${RobotTestShopper}
    Log to console    Searching for --> ${RobotTestShopper} profile, wait please...
    ${index}    Set Variable    1
    FOR    ${i}    IN RANGE    2
        Search Element.AD    ${RobotTestShopper}    ${Checker Table ID}
        Run Keyword If    ${ItemIsVisible}    Get ID    id="checkers_table"    ${RobotTestShopper}    1    2
        Run Keyword If    ${ItemIsNotVisible}    Add New Shopper.AD    ${RobotTestShopper}    ${Robot country 01}    ${Robot region 01}    ${Robot city 01}
        ...    ELSE    Log to console    Shopper is found in a system
        Run Keyword If    ${ItemIsVisible}    Exit for loop
        ${index}=    Evaluate    ${index}+1
        Set global variable    ${index}
        Log    try "${index}"
    END

Search branch.AD
    go to.AD    ${URL}/branches.php?page_var_filter_IsActive=&client=${client ID}
    Wait until page contains element    //button[@class='btn-input']
    ${Rows} =    Get Element Count    //*[@id="table_rows"]/tbody/tr
    ${index}    Set Variable    1
    ${ItemIsVisible?}    Run keyword and return status    Page should contain    ${Short auto branch name 01}
    Run Keyword If    ${ItemIsVisible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Run Keyword If    ${ItemIsVisible?}==False    Add/edit new branch.AD    ${Short auto branch name 01}    ${Full auto branch name 01}
    FOR    ${rowindex}    IN RANGE    ${Rows}
        ${act name}    get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        Run Keyword If    "${act name}"=="${Short auto branch name 01}"    Check if sorting is visible.AD    id="table_rows"
        Run Keyword If    "${act name}"=="${Short auto branch name 01}"    Get ID    id="table_rows"    ${Short auto branch name 01}    1    2
        Run Keyword If    "${act name}"=="${Short auto branch name 01}"    click element    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]
        Run Keyword If    "${act name}"=="${Short auto branch name 01}"    exit for loop
        ${index}=    Evaluate    ${index}+1
        Log    try ${index}.
    END
    Wait until page contains element    //td[@id='idBranchIDEditbox']
    ${found ID}    get text    //td[@id='idBranchIDEditbox']
    set global variable    ${found ID}
    go to.AD    ${URL}/branches.php?page_var_filter_IsActive&edit=${found ID}&client=${client ID}

Add 2 branches.AD
    ${index}    Set Variable    1
    Set global variable    ${index}
    FOR    ${i}    IN RANGE    1
        Search Element.AD    ${RobotTestClient}    id=clients_table
        Check errors on page [-1]
        Get ID    id="clients_table"    ${RobotTestClient}
        Run Keyword If    ${ItemIsNotVisible}    Add new client
        ...    ELSE    Add/edit new branch.AD    ${Short auto branch name 01}    ${Full auto branch name 01}
        Add/edit new branch.AD    ${Short auto branch name 02}    ${Full auto branch name 02}
        ${index}=    Evaluate    ${index}+1
    END

Search client using search bar.AD
    Log to console    -------
    ${index}    Set Variable    1
    Set global variable    ${index}
    FOR    ${i}    IN RANGE    2
        Search Element.AD    ${RobotTestClient}    id=clients_table
        Run Keyword If    ${ItemIsNotVisible}    Add new client
        ...    ELSE    Get ID    id="clients_table"    ${RobotTestClient}    1    2
        Run Keyword If    ${ItemIsVisible}    exit forloop
        ${index}=    Evaluate    ${index}+1
        Log    try ${index}.
        Log to console    -------
    END
    ${Client ID}    Set variable    ${found ID}
    Set global variable    ${Client ID}
    Set To Dictionary    ${Dictionary}    ${RobotTestClient}=${found ID}

Search Client.AD
    go to.AD    ${URL}/main-menu.php
    ${index}    Set Variable    1
    FOR    ${i}    IN RANGE    2
        Search Element.AD    ${RobotTestClient}    id=clients_table
        Run Keyword If    ${ItemIsNotVisible}    Add new client
        ...    ELSE    Log to console    "${RobotTestClient}" client is found in a system.
        Run Keyword If    ${ItemIsVisible}    Get ID    id="clients_table"    ${RobotTestClient}    1    2
        Run Keyword If    ${ItemIsVisible}    Exit for loop
        ${index}=    Evaluate    ${index}+1
        Log    try ${index}.
    END
    ${client ID}    set variable    ${found ID}
    Set global variable    ${client ID}

Check errors on page [2]
    #Page should not contain    notice
    Page should not contain    Database error:
    #Page should not contain    error
    Page should not contain    Fatal
    ${ActualPageUrl} =    Execute Javascript    return window.location.href
    Log    [Sub task] Status: OK - no errors, warnings or notices are found on page [${ActualPageUrl}]

Make visible Job columns.AD
    [Arguments]    ${exp status}    ${expected status recheck}
    go to.AD    ${URL}/settings-jobboard.php
    Wait until page contains    Job board settings
    Log to console    Let`s enable\disable the required checkboxes
    #assigned_jobs BEFORE
    Set checkbox.AD    //input[@id="visible_assigned_jobs_Briefing"]    ${exp status}
    Set checkbox.AD    //input[@id="visible_assigned_jobs_ClientName"]    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_SetName']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_AlternateClientDescription']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_CriticismPayment']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_OrderEndTime']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_OrderStartTime']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_Description']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_BranchFullname']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_BranchName']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_BranchOpeningHours']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_Purchase']    ${exp status}
    #assigned_jobs AFTER
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_Briefing']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_CriticismPayment']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_OrderStartTime']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_OrderEndTime']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_Description']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_ClientName']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_SetName']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_BranchFullname']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_AlternateClientDescription']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_AlternateClientName']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_Zipcode']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_BranchName']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_BranchOpeningHours']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_BranchAddressFields']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_BranchPhone']    ${exp status}
    Set checkbox.AD    //input[@id='visible2_assigned_jobs_Purchase']    ${exp status}
    #Columns Settings
    Set checkbox.AD    //input[@id='visible_job_board_Briefing']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_OrderID']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_Date']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_ClientName']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_SetName']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_Description']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_BranchName']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_BranchFullname']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_OrderStartTime']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_BranchAddressFields']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_Zipcode']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_AlternateClientName']    ${exp status}
    Set checkbox.AD    //input[@id='visible_assigned_jobs_BranchPhone']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_OrderCount']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_OrderEndTime']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_AlternateClientName']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_Zipcode']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_AlternateClientDescription']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_BranchAddressFields']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_BranchPhone']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_BranchOpeningHours']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_CriticismPayment']    ${exp status}
    Set checkbox.AD    //input[@id='visible_job_board_Purchase']    ${exp status}
    #
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_Zipcode']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_BranchAddressFields']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_AlternateClientName']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_BranchPhone']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_AlternateClientDescription']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_Zipcode']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_Purchase']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_OrderEndTime']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_BranchPhone']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_BranchOpeningHours']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_CriticismPayment']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_assigned_jobs_OrderID']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_OrderID']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_assigned_jobs_OrderEndTime']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_OrderCount']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_assigned_jobs_Date']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_Date']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_assigned_jobs_Apply']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_Apply']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_assigned_jobs_Messages']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_Messages']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_assigned_jobs_Purchase']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_Purchase']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_Purchase']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_assigned_jobs_BranchOpeningHours']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_BranchOpeningHours']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_assigned_jobs_BranchName']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_BranchName']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_OrderEndTime']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible2_assigned_jobs_OrderEndTime']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_BranchAddressFields']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_AlternateClientName']    ${exp status}
    Run Keyword If    ${preprod?}    Set checkbox.AD    //input[@id='visible_job_board_Apply']    ${exp status}
    ##
    Wait until page contains    Job board settings
    Run Keyword If    ${preprod?}    Checkbox should be selected    //*[@id="visible_assigned_jobs_Briefing"]
    Run Keyword If    ${preprod?}    Checkbox should be selected    //*[@id="visible_assigned_jobs_ClientName"]
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_SetName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_AlternateClientDescription']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_CriticismPayment']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_OrderStartTime']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_Description']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_BranchFullname']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_Briefing']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_CriticismPayment']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_OrderStartTime']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_Description']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_ClientName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_SetName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_BranchFullname']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_AlternateClientDescription']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_Briefing']
    ##
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Changes saved successfully
    Wait until page contains    Job board settings saved successfully
    Wait until page contains    Back to settings menu
    Log to console    "status" of all checkboxes = "${exp status}"
    go to.AD    ${URL}/settings-jobboard.php
    Wait until page contains    Job board settings
    Run Keyword If    ${preprod?}    Checkbox should be selected    //*[@id="visible_assigned_jobs_Briefing"]
    Run Keyword If    ${preprod?}    Checkbox should be selected    //*[@id="visible_assigned_jobs_ClientName"]
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_SetName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_AlternateClientDescription']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_CriticismPayment']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_OrderStartTime']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_Description']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_BranchFullname']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_Briefing']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_CriticismPayment']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_OrderStartTime']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_Description']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_ClientName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_SetName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_BranchFullname']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_AlternateClientDescription']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_Briefing']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_OrderID']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_Date']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_ClientName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_SetName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_Description']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_BranchName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_BranchFullname']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_OrderStartTime']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_BranchAddressFields']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_Zipcode']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_AlternateClientName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_assigned_jobs_BranchPhone']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_Zipcode']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_BranchAddressFields']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_AlternateClientName']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible2_assigned_jobs_BranchPhone']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_AlternateClientDescription']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_Zipcode']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_Purchase']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_OrderEndTime']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_BranchPhone']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_BranchOpeningHours']
    Run Keyword If    ${preprod?}    Checkbox should be selected    //input[@id='visible_job_board_CriticismPayment']

Set checkbox.AD
    [Arguments]    ${element ID}    ${exp status}
    ${1 status}=    Get Element Attribute    ${element ID}    checked
    Run keyword and ignore error    Scroll Element Into View    ${element ID}
    ${a}=    Set variable    ${exp status}
    Run keyword if    '${1 status}'=='${exp status}'    Log    ${element ID} left with no changes
    ...    ELSE    click element    ${element ID}
    ${2 status}    Get Element Attribute    ${element ID}    checked
    Log to console    Element ${element ID} -> status is set to: ${2 status}
    Scroll element into view    ${element ID}

Upload CSS.AD
    go to.AD    ${URL}/company-css-editor.php?New=Please+wait
    Log to console    Uploading shopper and manager CSS files from local folder
    Wait until page contains element    //form[1]/input[1]
    Choose File    //*[@id="side_menu"]/tbody/tr/td/form[1]/input[1]    ${CURDIR}\\Extra files\\Css\\RobotAdminCSS.css
    Click element    //input[@id='save_new_file']
    Wait until page contains element    //form[1]/input[1]
    go to.AD    ${URL}/company-checkers-css-editor.php?New=Please+wait
    Choose File    //*[@id="side_menu"]/tbody/tr/td/form[1]/input[1]    ${CURDIR}\\Extra files\\Css\\RobotShopperCSS.css
    Click element    //input[@id='save_new_file']
    Check errors on page [-1]
    Log to console    Shopper and manager CSS files are uploaded

Select CSS.AD
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Log to console    Selecting shopper and manager CSS files from a list of CSS files
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Select dropdown.AD    //table/tbody/tr/td/table[@class='tedit']/tbody/tr[@id='tr_CompanyCSSFileName']/td[@id='idCompanyCSSFileNameEditbox']/table/tbody/tr/td/span    xpath=//li[contains(.,'RobotAdminCSS.css')]
    Validate value (text)    //table/tbody/tr/td/table[@class='tedit']/tbody/tr[@id='tr_CompanyCSSFileName']/td[@id='idCompanyCSSFileNameEditbox']/table/tbody/tr/td/span    RobotAdminCSS.css
    Select dropdown.AD    //table/tbody/tr/td/table[@class='tedit']/tbody/tr[@id='tr_CompanyCSSFileName_Checkers']/td[@id='idCompanyCSSFileName_CheckersEditbox']/table/tbody/tr/td/span    xpath=//li[contains(.,'RobotShopperCSS.css')]
    Validate value (text)    //table/tbody/tr/td/table[@class='tedit']/tbody/tr[@id='tr_CompanyCSSFileName_Checkers']/td[@id='idCompanyCSSFileName_CheckersEditbox']/table/tbody/tr/td/span    RobotShopperCSS.css
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_ShopperNewInterface']    None
    Set checkbox.AD    //input[@id='field_ShowCheckerNames']    true
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    ###
    go to.AD    ${URL}/company-display.php
    ${actual admin css file}=    Get text    //*[@id="idCompanyCSSFileNameEditbox"]/table/tbody/tr/td/span/button
    Should Be Equal As Strings    ${actual admin css file}    RobotAdminCSS.css
    ###
    ${Shopper file name}=    Get text    //*[@id="idCompanyCSSFileName_CheckersEditbox"]/table/tbody/tr/td/span/button/span[2]
    Should Be Equal As Strings    ${Shopper file name}    RobotShopperCSS.css
    ###
    Log to console    Shopper and manager CSS files are saved: Manger CSS file= ${actual admin css file}; Shoppper CSS file=${Shopper file name}

Assign property.AD
    [Arguments]    ${RobotTestShopper}
    go to.AD    ${URL}/checkers.php?edit=${found ID}
    Log to console    Let`s update the shopper profile and assign property to Autotest='Autotest-YES'
    Click element    //*[@id="tabs"]/ul/li[1]
    Wait until page contains element    //*[@id="parentprop${prop ID}"]
    Set focus to element    //*[@id="parentprop${prop ID}"]
    Scroll Element Into View    //*[@id="parentprop${prop ID}"]/button/span[2]
    Execute JavaScript    window.document.getElementById("field_IsActive").scrollIntoView(true)
    Click element    id=parentprop${prop ID}    #testing //*[@id="parentprop${prop ID}"]
    sleep    1
    Set focus to element    //span[contains(.,'Autotest-YES')]
    Click element    //span[contains(.,'Autotest-YES')]
    Click element    //*[@id="tabs"]/ul/li[1]
    Wait until page contains element    //*[@id="save"]
    Click button    //*[@id="save"]
    go to.AD    ${URL}/checkers.php?edit=${found ID}
    Log to console    Reopening profile page to check the saved option
    Wait until page contains element    //*[@id="parentprop${prop ID}"]
    Set focus to element    //*[@id="parentprop${prop ID}"]
    ${status}    Get text    id=parentprop${prop ID}
    Should be equal    Autotest-YES    ${status}
    Log to console    Autotest property has been assigned to shopper: name="${RobotTestShopper}"; ${Property name}:"${status}"

Search shopper profile and assign property.AD
    [Arguments]    ${RobotTestShopper}
    ${index}=    Set variable    1
    FOR    ${i}    IN RANGE    1
        Check errors on page [-1]
        Search Element.AD    ${RobotTestShopper}    ${Checker Table ID}
        Run Keyword If    ${ItemIsNotVisible}    Add new shopper.AD    ${RobotTestShopper}    ${Robot country 01}    ${Robot region 01}    ${Robot city 01}
        Run Keyword If    ${ItemIsVisible}    Assign property.AD    ${RobotTestShopper}
        ${index}=    Evaluate    ${index}+1
        Log    try ${index}.
    END

Cancel all orders.SD
    Login as a Shopper
    Open Job page and search order    ${test order description 01}
    Open Job page and cancel all orders.SD

Open Job page and cancel all orders.SD
    go to.AD    ${URL}/c_ordered-crits.php
    ${index}    Set Variable    1
    @{elements}    Get Webelements    //*[@id="orders_list"]/tbody/tr
    #iterate for each row
    FOR    ${element}    IN    @{elements}
        Set global variable    ${index}
        Set global variable    ${element}
        Set global variable    ${AD description}
        Set global variable    ${index}
        Log to console    ${index}. AR --> ${AD description}
        Log to console    ER --> ${test order description} - ${DD.MM.YY}
        Run Keyword If    '${AD description}'=='${test order description} - ${DD.MM.YY}'    Simulate job
        Run Keyword If    '${AD description}'=='${test order description} - ${DD.MM.YY}'    Accept job
        ${index}=    Evaluate    ${index}+1
        Log to console    -----------------------------------------
    END

JOB PAGE: get table titles and IDs
    go to.AD    ${URL}/c_ordered-crits.php
    ${index}    Set Variable    1
    ${Rows} =    Get Element Count    ${Order Table}/tbody/tr    #how many order rows do we have
    Log To Console    how many order columns do we have? = ${Rows}
    ${columns count} =    Get Element Count    //*[@id="orders_list"]/thead/tr/th
    Log    How many columns are in table? --> "${columns count}"
    FOR    ${rowindex}    IN RANGE    1
        Log    ${rowindex}
        Set global variable    ${index}
        Get column titles.SD    ${Order Table}    ${Rows}
    END

Get column titles.SD
    [Arguments]    ${Order Table}    ${Rows}
    Log    Validating table titles by text (titles have no locators).....
    @{columns}    Get Webelements    //*[@id="orders_list"]/thead/tr/th
    ${columns count} =    Get Element Count    //*[@id="orders_list"]/thead/tr/th
    ${id}=    Set variable    1
    FOR    ${column}    IN    @{columns}
        ${Column Title}=    Get text    //*[@id="orders_list"]/thead/tr/th[${id}]
        Log    ${Column Title}
        Set global variable    ${Column Title}
        Log    Column № ${id}. Column Title = "${Column Title}"; Column ID = "${id}"
        ${column name}=    Convert To Integer    ${id}
        Run keyword if    '${Column Title}'=='Status'    Set Status ID    ${id}
        Run keyword if    '${Column Title}'=='Select'    Set Select ID    ${id}
        Run keyword if    '${Column Title}'=='Questionnaire name'    Set Questionnaire name ID    ${id}
        Run keyword if    '${Column Title}'=='Begin review'    Set Begin scorecard ID    ${id}
        Run keyword if    '${Column Title}'=='Description'    Set Description ID    ${id}
        Run keyword if    '${Column Title}'=='OrderID'    Set OrderID ID    ${id}
        Run keyword if    '${Column Title}'=='Briefing'    Set Briefing ID    ${id}
        Run keyword if    '${Column Title}'=='Order start time'    Set Order start time ID    ${id}
        Run keyword if    '${Column Title}'=='Full name'    Set Full name ID    ${id}
        Run keyword if    '${Column Title}'=='Client description'    Set Client description ID    ${id}
        Run keyword if    '${Column Title}'=='Survey payment'    Set Survey payment ID    ${id}
        Run keyword if    '${Column Title}'=='Order count'    Set Order count ID    ${id}
        Run keyword if    '${Column Title}'=='Due date of the visit'    Set Due date of the visit ID    ${id}
        Run keyword if    '${Column Title}'=='Client name'    Set Client name ID    ${id}
        Run keyword if    '${Column Title}'=='Branch phone'    Set Branch phone ID    ${id}
        Run keyword if    '${Column Title}'=='Order end time'    Set Order end time ID    ${id}
        Run keyword if    '${Column Title}'=='Type of client'    Set Type of client ID    ${id}
        Run keyword if    '${Column Title}'=='Postcode'    Set Zip code ID    ${id}
        Run keyword if    '${Column Title}'=='Purchase'    Set Purchase ID    ${id}
        Run keyword if    '${Column Title}'=='Short branch name'    Set Short branch name ID    ${id}
        Run keyword if    '${Column Title}'=='Branch opening hours'    Set Branch opening hours ID    ${id}
        Run keyword if    '${Column Title}'=='Branch address fields'    Set Branch address fields ID    ${id}
        ${id}=    Evaluate    ${id}+1
    END
    log    ${Status ID}= ${Select ID}= ${Questionnaire name ID}= ${Begin scorecard ID}= ${Description ID}= ${OrderID ID}= ${Briefing ID}= ${Order start time ID}= ${Full name ID}= ${Client description ID}= ${Survey payment ID}= ${Order count ID}= ${Due date of the visit ID}= ${Client name ID}=

Set OrderID column ID
    [Arguments]    ${id}
    ${OrderIDCOLID}=    Convert To Integer    ${id}
    Set global variable    ${OrderIDCOLID}
    Log to console    Order COLUMN ID -----> ${OrderIDCOLID}
    Check if sorting is visible.AD

Assign column ID
    [Arguments]    ${id}    ${Column name}
    Log to console    Column name=${Column name}
    ${Column name}=    Convert To Integer    ${id}
    Log to console    Column name=${Column name}

Set Select column ID
    [Arguments]    ${id}
    ${Select column ID}=    Convert To Integer    ${id}
    Set global variable    ${Select column ID}
    Log    Select "COLUMN ID" -----> ${Select column ID}

Set QryName column ID
    [Arguments]    ${id}
    ${Q-ryNameCOLID}=    Convert To Integer    ${id}
    Set global variable    ${Q-ryNameCOLID}
    Log    "Q-ryName COLUMN ID" -----> ${Q-ryNameCOLID}

Set Begin column ID
    [Arguments]    ${id}
    ${BeginICOLID}=    Convert To Integer    ${id}
    Set global variable    ${BeginICOLID}
    Log    Begin "COLUMN ID" -----> ${BeginICOLID}

Set Description column ID
    [Arguments]    ${id}
    ${DescriptionCOLID}=    Convert To Integer    ${id}
    Set global variable    ${DescriptionCOLID}
    Log    "Description COLUMN ID" -----> ${DescriptionCOLID}

Set FullName column ID
    [Arguments]    ${id}
    ${FullNameCOLID}=    Convert To Integer    ${id}
    Set global variable    ${FullNameCOLID}
    Log to console    "Full Name ID" -----> ${FullNameCOLID}

Search job by order description.SD
    [Arguments]    ${test order description}
    Go to2.AD    ${URL}/c_ordered-crits.php
    Log To Console    Searching order by its description...
    ${index}=    Set Variable    1
    ${Rows} =    Get Element Count    ${Order Table}/tbody/tr    #how many order rows do we have
    Log To Console    Found: "${Rows}" order(s) on page
    #iterate for each row
    FOR    ${row}    IN RANGE    ${Rows}
        ${Order description}=    Get text    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Description ID}]
        ${Order ID}=    Get text    //*[@id="orders_list"]/tbody/tr[${index}]/td[${OrderID ID}]
        Scroll Element Into View    //*[@id="orders_list"]/tbody/tr[${index}]/td[${OrderID ID}]
        Log    Row ${index}. Order description ---> "${Order description}" (ID: ${Order ID})
        Log    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Description ID}]
        Log    //*[@id="orders_list"]/tbody/tr[${index}]/td[${OrderID ID}]
        Log    not matched...
        Log    '${Order description}' vs '${test order description}'
        Log    '${Order ID}' vs '${found order ID}'
        Run Keyword If    '${Order description}'=='${test order description}' and '${Order ID}'=='${found order ID}'    Exit for loop
        ${index}    Evaluate    ${index}+1
    END
    Log to console    Found! Row №"${index}", ID="${found order ID}"
    Set global variable    ${index}
    Scroll Element Into View    //*[@id="orders_list"]/tbody/tr[${index}]/td[${OrderID ID}]

Begin scorecard.SD
    [Arguments]    ${Add info1}    ${Add info2}    ${Free text}    ${Inter message}    ${Attach files?}    ${get ID?}    ${finish action}
    [Timeout]
    Log To Console    Starting the scorecard...selecting the answers and additional info...
    Run keyword and ignore error    Execute Javascript    window.document.getElementById("accept").scrollIntoView(true);
    Run keyword and ignore error    Click element    //tr[${index}]/td[${Begin scorecard ID}]/form/input[1]
    ${brif visible?}    Run keyword and return status    page should contain    (2 min read)
    Run keyword if    "${brif visible?}"=="True"    Check brif.SD
    Run keyword if    "${get ID?}"=="YES"    Get ID from ad bar.AD    CritID=    &cc
    Run keyword if    "${Attach files?}"=="YES"    Attach files.SD
    #######
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Page should contain element    //input[@id='Uploadfiles']
    Page should contain element    //select[@id='AltLangID']
    Page should contain element    //*[@id="crit_form"]/div[2]/center[1]/table/tbody/tr/td/table
    Page should contain element    //img[contains(@src, "images\\arrows\\bullet_green.png")]
    Page should contain element    //span[@id='cntdwn']
    ### checking of free text boxes - opt and mand
    Run keyword and ignore error    select frame    questionnaire
    Wait until page contains    ${Q1 TEXT}
    ${Get text}    get text    //span[@id='obj${Q1 ID}-placeholder']/span[@class='tedit-desc']
    ${Var 2}    Fetch From Left    ${Get text}    )
    ${Review Number}    Fetch From Right    ${Var 2}    :
    ${Review Number}    Strip String    ${Review Number}
    log to console    Review Number: [${Review Number}]
    Set global variable    ${Review Number}
    #
    Element text should be    //*[@id="charNum_obj${Q1 ID}"]    15 characters left. Minimum 3 characters
    Element text should be    //*[@id="charNum_obj${Q2 ID}"]    50 characters left. Minimum 10 characters
    Run keyword if    "${Attach files?}"=="YES"    Input text    //*[@id="obj${Q1 ID}-mi"]    *
    Run keyword if    "${Attach files?}"=="YES"    Click element    id=finishCrit
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    Text too short (minimum length: 3)
    Run keyword if    "${Attach files?}"=="YES"    Element text should be    //*[@id="charNum_obj${Q1 ID}"]    14 characters left. Minimum 3 characters
    Run keyword if    "${Attach files?}"=="YES"    Input text    //*[@id="obj${Q2 ID}-mi"]    *
    Run keyword if    "${Attach files?}"=="YES"    Click element    id=finishCrit
    Run keyword if    "${Attach files?}"=="YES"    Element text should be    //*[@id="charNum_obj${Q2 ID}"]    49 characters left. Minimum 10 characters
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    Text too short (minimum length: 10)
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains element    //input[@id='obj${Q3 ID}-mi']
    Run keyword if    "${Attach files?}"=="YES"    Run keyword and ignore error    set focus to element    //input[@id='obj${Q3 ID}-mi']
    Run keyword if    "${Attach files?}"=="YES"    Click element    //input[@id='obj${Q3 ID}-mi']
    Run keyword if    "${Attach files?}"=="YES"    Input text    //input[@id='obj${Q3 ID}-mi']    200
    Run keyword if    "${Attach files?}"=="YES"    Click element    id=finishCrit
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    Value isn't in the allowed range
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    One field or more were not filled correctly.
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    Please fix according to the instructions in red.
    #
    # Entering score data-1ST QUESTION -----------------------------------
    Wait until page contains    Question description Q1    3
    Page should contain    ${Q1 TEXT}
    Set focus to element    //*[@id="obj${Q1 ID}-mi"]
    Double Click Element    //*[@id="obj${Q1 ID}-mi"]
    sleep    2
    Input text    //*[@id="obj${Q1 ID}-mi"]    ***
    sleep    2
    Page should contain    15-25(green)
    Page should contain    26-35(black)
    Page should contain    36-45(red)
    Page should contain    46-55(yellow)
    Page should contain    56+(blue)
    # Check hidden qn (Q4) is not visible
    Element Should Not Be Visible    //select[@id='obj${Q4 ID}']/option[3]
    Element Should Not Be Visible    //select[@id='obj${Q4 ID}']/option[4]
    Element Should Not Be Visible    //select[@id='obj${Q4 ID}']
    Element Should Not Be Visible    //*[@id="obj${Q4 ID}-placeholder"]/span[1]
    Element Should Not Be Visible    //*[@id="obj${Q4 ID}-placeholder"]/span[2]
    Element Should Not Be Visible    //*[@id="obj${Q4 ID}-placeholder"]/p
    Run keyword and ignore error    Page should contain element    //*[@id="obj${Q1 ID}-critical"]
    Run keyword and ignore error    click element    //*[@id="obj${Q1 ID}-critical"]
    #    set focus to element    //*[contains(text(), '46-55(yellow)')]
    #    Click element    //*[contains(text(), '46-55(yellow)')]
    #    sleep    2
    Wait until page contains element    obj${Q1 ID}3
    Wait until element is visible    obj${Q1 ID}3
    Click element    obj${Q1 ID}3
    Run keyword and ignore error    Click element    obj${Q1 ID}3
    #Double Click Element    obj${Q1 ID}3
    # Entering score data-2ND QUESTION -----------------------------------
    Page should contain    ${Q2 TEXT}
    Wait until page contains    Question description Q2    10
    sleep    2
    Run keyword and ignore error    set focus to element    obj${Q1 ID}3
    Select Radio button    obj${Q2 ID}    ${Q2 answer ID}
    #Execute JavaScript    window.document.getElementById("obj${Q2 ID}-mi").scrollIntoView(true)
    sleep    2
    Page should contain element    //textarea[@id='obj${Q2 ID}-mi']
    Double Click Element    //input[@id='obj${Q2 ID}2']
    sleep    2
    click element    //input[@id='obj${Q2 ID}2']
    Run keyword and ignore error    set focus to element    //textarea[@id='obj${Q2 ID}-mi']
    #Execute JavaScript    window.document.getElementById("obj${Q2 ID}-mi").scrollIntoView(true)
    sleep    2
    Click Element    //textarea[@id='obj${Q2 ID}-mi']
    sleep    2
    Input text    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    Run keyword if    ${preprod?}    Input text    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    sleep    4
    Validate element attribute.AD    //input[@id='obj${Q2 ID}2']    checked    true
    #Run keyword and ignore error    Click element    //*[@id="continue"]    //*[@id="obj1650681"]
    #Entering score data-3RD QUESTION -----------------------------------
    Page should contain    ${Q3 TEXT}
    Wait until page contains    Question description Q3    3
    Run keyword and ignore error    set focus to element    obj${Q3 ID}3
    sleep    2
    Select Radio button    obj${Q3 ID}    ${Q3 answer ID}
    sleep    1
    Double Click Element    obj${Q3 ID}3
    #Click element    //input[@id='obj${Q3 ID}-mi']
    sleep    2
    Validate element attribute.AD    obj${Q3 ID}3    checked    true
    Input text    //input[@id='obj${Q3 ID}-mi']    ${Add info2}
    Run keyword if    ${preprod?}    sleep    3
    Run keyword if    ${preprod?}    Input text    //input[@id='obj${Q3 ID}-mi']    ${Add info2}
    sleep    3
    #Run keyword and ignore error    Click element    //*[@id="continue"]
    #Entering score data-4 QUESTION -----------------------------------
    Validate element attribute.AD    //input[@id='obj${Q2 ID}2']    checked    true
    Wait until page contains    Bonus qn description    10
    Page should contain    ${Q4 TEXT}
    sleep    2
    Click element    //select[@id='obj${Q4 ID}']
    sleep    2
    Wait until page contains element    //*[@id="obj${Q4 ID}"]/option[3]
    Click element    //*[@id="obj${Q4 ID}"]/option[3]
    sleep    2
    Click element    //*[@id="obj${Q4 ID}"]/option[4]
    sleep    2
    #
    ${Actual answer}    Get text    //textarea[@id='obj${Q1 ID}-mi']
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    set focus to element    //textarea[@id='obj${Q1 ID}-mi']
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    1
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Input text    //textarea[@id='obj${Q1 ID}-mi']    ***
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    2
    #
    ${Actual answer}    Get text    //textarea[@id='obj${Q2 ID}-mi']
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Click Element    //textarea[@id='obj${Q2 ID}-mi']
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    1
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Input text    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    2
    #    ${preprod?} and "${Actual answer}"=="${empty}"
    ${Actual answer}    Get text    //input[@id='obj${Q3 ID}-mi']
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Click Element    //input[@id='obj${Q3 ID}-mi']
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    2
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Input text    //input[@id='obj${Q3 ID}-mi']    ${Add info2}
    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    3
    #END OF questions
    sleep    1
    Validate value (text)    //textarea[@id='obj${Q1 ID}-mi']    ***
    Validate value (value)    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    Validate value (value)    //input[@id='obj${Q3 ID}-mi']    ${Add info2}
    Validate element attribute.AD    //input[@id='obj${Q1 ID}3']    checked    true
    Validate element attribute.AD    //input[@id='obj${Q2 ID}2']    checked    true
    Validate element attribute.AD    //input[@id='obj${Q3 ID}3']    checked    true
    ####
    ${free text box visible?}    Run keyword and return status    page should contain element    //textarea[@id='CritFreeText']
    Run keyword if    "${free text box visible?}"=="True"    Input text    //textarea[@id='CritFreeText']    ${Free text}
    ${free text box visible?}    Run keyword and return status    page should contain element    //textarea[@id='message_to_operation']
    Run keyword if    "${free text box visible?}"=="True"    Input text    //textarea[@id='message_to_operation']    ${Inter message}
    Log to console    Entering the answers and click "Submit button"
    Click element    ${finish action}
    Run keyword and ignore error    Click element    ${finish action}
    Run keyword and ignore error    Click element    //*[@id="continue"]
    reload page
    Check errors on page [-1]

Check order and reject.SD
    go to.AD    ${URL}/c_ordered-crits.php
    ${index}    Set Variable    1
    ${Rows} =    Get Element Count    ${Order Table}/tbody/tr    #how many order rows do we have
    Log to console    Found "${Rows}" orders
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${Rows}
        Log    ${rowindex}
        Set global variable    ${index}
        ${Order description}    Get text    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Description ID}]
        Run Keyword If    '${Order description}'=='${test order description}' and '${Order ID}'=='${found order ID}'    Reject job
        Check errors on page [-1]
    END
    #Begin scorecard.SD

Upload system images.AD
    [Arguments]    ${logo image}    ${wallpaper}    ${header}
    go to.AD    ${URL}/company-images.php
    Wait until page contains    Here you can specify various image files that appear in your user interface.
    Wait until page contains    Allowed file types: jpg, jpeg, gif, png, bmp.
    Wait until page contains    Maximum file size: 250k
    Log to console    Please wait...
    Choose File    //*[@id="side_menu"]/tbody/tr/td[3]/form/input[2]    ${logo image}    # logo image
    Wait until page contains element    //*[@id="go"]
    Click element    //*[@id="go"]
    #Wait until page contains    Logo image updated.
    Choose File    //*[@id="side_menu"]/tbody/tr/td[3]/form/input[3]    ${wallpaper}    # wallpaper
    Wait until page contains element    //*[@id="go"]
    Click element    //*[@id="go"]
    #Wait until page contains    Wallpaper image updated.
    Choose File    //*[@id="side_menu"]/tbody/tr/td[3]/form/input[4]    ${header}    # header image
    Wait until page contains element    //*[@id="go"]
    Click element    //*[@id="go"]
    #Wait until page contains    Header image image updated.
    Check errors on page [-1]

Check "Company email settings" page
    go to.AD    ${URL}/company-email.php
    Log to console    Checking required elements on page... (${URL}/company-email.php)
    Wait until page contains element    //input[@id='field_FromName']
    Page should contain    Email
    Page should contain    Type of mail server
    Page should contain element    //input[@id='save']
    Page should contain element    //a[@class='linkClass']
    Page should contain element    id=field_FromName
    Page should contain element    //input[@id='field_Email']
    Page should contain element    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button
    Log to console    Status: OK - Required elements on page are present
    #Element text should be    //*[@id="side_menu"]/tbody/tr/td[3]/a    Test email settings
    Log to console    Let`s save valid data for "from name" and "email fields".
    Input text    //input[@id='field_FromName']    Checker Software Systems LTD [${URLIndex} system]
    Input text    //input[@id='field_Email']    info-${URL1index}-system@checker-soft.com
    #Click element    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button
    sleep    1
    #Click element    xpath=//li[contains(.,'Amazon server')]
    #Click element    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button
    #Click element    xpath=//li[contains(.,'Classic email client')]    #xpath=//li[contains(.,'Classic email client')]    #xpath=//li[contains(.,'Amazon server')]
    Log to console    Status: OK - Saved
    Click element    //input[@id='save']
    sleep    1
    go to.AD    ${URL}/company-email.php
    Log to console    Let`s save valid data for 'Classic email client' input fields
    Wait until page contains    Options are: empty, 'tls', 'ssl'
    sleep    1
    Click element    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button
    Click element    xpath=//li[contains(.,'Amazon server')]
    Click element    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button
    Click element    xpath=//li[contains(.,'Classic email client')]
    Mouse over    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button
    sleep    1
    Input text    id=field_MailServerAddress    smtp.office365.com
    Input text    id=field_MailServerUsername    info-${URL1index}-system@checker-soft.com
    Input text    id=field_MailServerPassword    info-${URL1index}-system@checker-soft.com
    Input text    id=field_MailServerPort    587
    Input text    id=field_MailServerAuthentication    tls
    Click element    //input[@id='save']
    Check errors on page [-1]
    ####
    go to.AD    ${URL}/company-email.php
    Wait until page contains    From' name
    ${MailServerAddress}=    Get Value    id=field_MailServerAddress
    Should Be Equal As Strings    ${MailServerAddress}    smtp.office365.com
    ${MailServerUsername}=    Get Value    id=field_MailServerUsername
    Should Be Equal As Strings    ${MailServerUsername}    info-${URL1index}-system@checker-soft.com
    ${ServerPassword}=    Get Value    id=field_MailServerPassword
    Should Be Equal As Strings    ${ServerPassword}    ${empty}
    ${MailServerPort}=    Get Value    id=field_MailServerPort
    Should Be Equal As Strings    ${MailServerPort}    587
    ${MailServerAuthentication}=    Get Value    id=field_MailServerAuthentication
    Should Be Equal As Strings    ${MailServerAuthentication}    tls
    ${from. name}=    Get Value    //input[@id='field_FromName']
    Should Be Equal As Strings    ${from. name}    Checker Software Systems LTD [${URLIndex} system]
    ${email}=    Get Value    //input[@id='field_Email']
    Should Be Equal As Strings    ${email}    info-${URL1index}-system@checker-soft.com
    ${server}=    Get Text    //tr[@id='tr_EmailServerType']/td[@id='idEmailServerTypeEditbox']/table/tbody/tr/td/span/button
    Should Be Equal As Strings    ${server}    Classic email client
    Log to console    Status: OK - Values are saved properly...
    #Send email via mass page.AD
    # \ \ \ Run Keyword If \ \ \ '${check emails?}'=='True' \ \ \ GMAIL: Sent mass email.AD
    ###
    Log to console    Let`s try to save not filled "from name" and "email fields".
    Input text    //input[@id='field_FromName']    ${empty}
    Input text    //input[@id='field_Email']    ${empty}
    Click element    //input[@id='save']
    Wait until page contains    From' name
    Page should contain    Email
    Page should contain    Type of mail server
    Page should contain element    //input[@id='save']
    Page should contain    This field is required
    Log to console    This field is required - is seen in case of saving not filled fields
    Reload page
    Check errors on page [-1]
    Log to console    Let`s save 'Amazon server'
    go to.AD    ${URL}/company-email.php
    Wait until page contains element    //input[@id='field_FromName']
    Click element    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button
    Click element    xpath=//li[contains(.,'Amazon server')]
    Mouse down    //input[@id='save']
    sleep    5
    Wait until page contains element    //input[@id='save']
    sleep    1
    Click element    //input[@id='save']
    #Wait until page contains    saved
    go to.AD    ${URL}/company-email.php
    Wait until page contains element    //input[@id='field_FromName']
    sleep    1
    Check errors on page [-1]
    ${from. name}=    Get Text    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button
    Should Be Equal As Strings    ${from. name}    Amazon server
    Log to console    Status: OK - option 'Amazon server' saved properly
    Send email via mass page.AD    1    1
    Run Keyword If    '${check emails?}'=='True'    GMAIL: Sent mass email.AD

Search user profile.AD
    [Arguments]    ${RobotTestShopper}    ${role}
    ${index}=    Set variable    1
    FOR    ${i}    IN    2
        Check errors on page [-1]
        Search Element.AD    ${RobotTestShopper}    id=uesrs_table
        Run Keyword If    ${ItemIsNotVisible}    go to    ${URL}/users.php
        Run Keyword If    ${ItemIsNotVisible}    Wait until page contains element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
        Run Keyword If    ${ItemIsNotVisible}    Click button    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
        Run Keyword If    ${ItemIsVisible}    Get ID    id="uesrs_table"    ${RobotTestShopper}    1    2
        Run Keyword If    ${ItemIsVisible}    click link    default=${RobotTestShopper}
        Run Keyword If    ${ItemIsVisible}    exit for loop
        ${index}=    Evaluate    ${index}+1
        Log to console    try ${index}
    END
    Add/Edit user profile.AD    ${RobotTestShopper}    ${role}

Add/Edit user profile.AD
    [Arguments]    ${RobotTestShopper}    ${role name}
    Wait Until Page Contains Element    //input[@id='field_Fullname']
    Input Text    //input[@id='field_Fullname']    ${RobotTestShopper}
    Input Text    //input[@id='field_Email']    robotmailbox01@gmail.com
    Input Text    //input[@id='field_Username']    ${RobotTestShopper}
    Input Text    //input[@id='field_Password']    ${RobotTestShopper}
    Run keyword and ignore error    Click element    //*[@id="idShowDashboardFilterEditbox"]/table/tbody/tr/td/span/button
    Run keyword and ignore error    Select Checkbox    //input[@id='ui-multiselect-field_ShowDashboardFilter-option-9']
    Run keyword and ignore error    Execute JavaScript    window.document.getElementById("field_ClientName").scrollIntoView(true)
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    sleep    1
    Select dropdown.AD    //*[@id="idLanguageOverrideEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'English Australia')]
    Validate value (text)    //*[@id="idLanguageOverrideEditbox"]/table/tbody/tr/td/span/button    English Australia
    Input text    //input[@id='field_Phone']    1234567890
    Validate value (value)    //input[@id='field_Phone']    1234567890
    Select dropdown.AD    //*[@id="idTimeZoneEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Europe/Kiev')]
    Validate value (text)    //*[@id="idTimeZoneEditbox"]/table/tbody/tr/td/span/button    Europe/Kiev
    Get ID from ad bar.AD    &edit=    &page_var
    ###
    ${status}    Run keyword and return status    Element Should Contain    ${role name}    Manager
    Run keyword if    '${status}'=='Special permissions'    Select role    ${role name}
    Run keyword if    '${status}'=='Special permissions'    Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    //div[13]/ul/li[12]/label/span
    Run keyword if    '${status}'=='Manager'    Validate value (text)    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    ${RobotTestClient}
    Run keyword if    '${status}'=='Manager'    Select dropdown.AD    //*[@id="idEmailDigestEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Daily')]
    Run keyword and ignore error    Run keyword if    '${status}'=='Analyst'    Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    //div[13]/ul/li[12]/label/span
    Run keyword and ignore error    Run keyword if    '${status}'=='Analyst'    Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    //div[12]/ul/li[17]/label/span
    ####
    ${a}=    Set variable    ${RobotTestShopper}
    ${x}=    Run Keyword And Return Status    Should contain    ${role name}    Special permissions
    Run Keyword If    '${x}'=='True'    Select dropdown.AD    //*[@id="tr_AccessLink"]/td[2]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Special permissions')]
    Run Keyword If    '${x}'=='True'    Select dropdown.AD    //*[@id="idRoleNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RF role}')]
    Run Keyword If    '${x}'=='True'    Validate value (text)    //*[@id="tr_AccessLink"]/td[2]/table/tbody/tr/td/span/button    Special permissions
    Run Keyword If    '${x}'=='True'    Validate value (text)    //*[@id="idRoleNameEditbox"]/table/tbody/tr/td/span/button    ${RF role}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    Wait until page contains    Current user: ROBOT [MANAGER]
    go to.AD    ${URL}/users.php?edit=${found ID}
    Search Element.AD    ${RobotTestShopper}    id=uesrs_table
    Click link    default=${RobotTestShopper}
    Wait Until Page Contains element    //input[@id='field_Fullname']    10
    Validate value (value)    //input[@id='field_Fullname']    ${RobotTestShopper}
    Validate value (value)    //input[@id='field_Email']    robotmailbox01@gmail.com
    Validate value (value)    //input[@id='field_Username']    ${RobotTestShopper}
    Validate value (value)    //input[@id='field_Phone']    1234567890
    Validate value (text)    //*[@id="idTimeZoneEditbox"]/table/tbody/tr/td/span/button    Europe/Kiev
    Log To Console    Profile is added/updated

Create/update role.AD
    [Arguments]    ${role name}
    go to.AD    ${URL}/user-role-types.php?page_var_divide_recordsPerPage=500
    ${index}    Set Variable    1
    @{elements}=    Get Webelements    //*[@id="table_rows"]/tbody/tr    #//*[@id="table_rows"]/tbody/tr
    ${total table rows}=    Get Element Count    //*[@id="table_rows"]/tbody/tr
    FOR    ${row}    IN    1
        #    ${actual name}=    Get Text    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]
        ${element present?}=    Run Keyword And Return Status    Page should contain    ${role name}
        Run Keyword If    ${element present?}    Log to console    ${role name} is found on page, opening its page to be edited
        Run Keyword If    ${element present?}    Click link    default=${role name}
        Run Keyword If    ${element present?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
        #    Log to console    Searching test role. Please wait... (found --> ${actual name})
        #    ${index}=    Evaluate    ${index}+1
        Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
        Exit For Loop If    '${element present?}'==False
    END
    Wait until page contains element    //input[@id='field_RoleDescription']
    Execute JavaScript    window.document.getElementById("field_RoleDescription").scrollIntoView(true)
    Input text    id=field_RoleName    ${role name}
    Input text    id=field_RoleDescription    RF Robot role - used for RF tests
    Set checkbox.AD    //input[@id='field_ShowExportButtonInReports']    true
    Set checkbox.AD    //input[@id='field_ShowSendByMailButtonInReports']    true
    Select dropdown.AD    //*[@id="idAttachmentPermissionEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'View and download')]
    #Select dropdown.AD    //*[@id="idUserFilePermissionEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'View and download')]
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    go to.AD    ${URL}/user-role-types.php?page_var_divide_recordsPerPage=500
    Click link    default=${role name}
    Wait until page contains element    //input[@id='field_RoleDescription']
    ${CurrentPageURL} =    Execute Javascript    return window.location.href
    ${prelink}=    Fetch From Right    ${CurrentPageURL}    edit=
    ${roleID}=    Fetch From Left    ${prelink}    &page_var_sorting_column
    Log to console    Done. Role name: "${role name}" ID:"${roleID}". Let`s edit its access rules and set "LOGIN" and "MAIN MENU"="EDIT and DELETE"
    set global variable    ${roleID}
    go to2.AD    ${URL}/user-role-types.php?edit=${roleID}
    Wait until page contains element    //input[@id='field_RoleDescription']
    Execute JavaScript    window.document.getElementById("field_RoleDescription").scrollIntoView(true)
    Validate value (value)    id=field_RoleDescription    RF Robot role - used for RF tests
    Validate value (text)    //*[@id="idAttachmentPermissionEditbox"]/table/tbody/tr/td/span/button    View and download
    #Validate value (value)    //*[@id="idUserFilePermissionEditbox"]/table/tbody/tr/td/span/button    View and download
    Checkbox should be selected    //input[@id='field_ShowExportButtonInReports']
    Checkbox should be selected    //input[@id='field_ShowSendByMailButtonInReports']
    go to.AD    ${URL}/user-role-edit.php?RoleID=${roleID}
    Wait until page contains    Visit report templates
    Wait until page contains    Edit multiple orders > Characteristics (in ajax window)
    #
    click element    //*[@id="acc_5d20c172b3613ae3871bd3b50ef1e2c7"]
    select from list by value    //*[@id="acc_5d20c172b3613ae3871bd3b50ef1e2c7"]    4
    click element    //select[@id='acc_73dce75d92181ca956e737b3cb66db98']
    sleep    1
    Set focus to element    //*[contains(text(), 'Edit and delete')]
    click element    //*[contains(text(), 'Edit and delete')]
    click element    //select[@id='acc_b3255c4ade265c13c45dd53cd496f582']
    sleep    2
    select from list by value    //select[@id='acc_b3255c4ade265c13c45dd53cd496f582']    4
    click element    //*[contains(text(), 'Edit and delete')]
    click element    //*[@id="acc_5f4787616fc5b4cab1d72ea3fb21512e"]
    select from list by value    //*[@id="acc_5f4787616fc5b4cab1d72ea3fb21512e"]    4
    click element    //*[@id="acc_dbced719bf9105bcb6dba8eebf1d7b09"]
    select from list by value    //*[@id="acc_dbced719bf9105bcb6dba8eebf1d7b09"]    4
    click element    //*[@id="acc_0d8aaf22c73f42d62b9c64fec59fa411"]
    select from list by value    //*[@id="acc_0d8aaf22c73f42d62b9c64fec59fa411"]    4
    click element    //*[@id="acc_026cc6ca520cde149c0662ee30d5b42b"]
    select from list by value    //*[@id="acc_026cc6ca520cde149c0662ee30d5b42b"]    4
    Validate value (value)    //select[@id='acc_73dce75d92181ca956e737b3cb66db98']    4
    Validate value (value)    //select[@id='acc_b3255c4ade265c13c45dd53cd496f582']    4
    Validate value (value)    //*[@id="acc_026cc6ca520cde149c0662ee30d5b42b"]    4
    Validate value (value)    //select[@id="acc_5f4787616fc5b4cab1d72ea3fb21512e"]    4
    Validate value (value)    //select[@id="acc_0d8aaf22c73f42d62b9c64fec59fa411"]    4
    Sleep    1
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Changes saved!
    go to.AD    ${URL}/user-role-edit.php?RoleID=${roleID}
    Log To Console    Open ${URL}/user-role-edit.php?RoleID=${roleID} and check if saved values = 'Edit and delete'?
    Validate value (value)    //select[@id='acc_73dce75d92181ca956e737b3cb66db98']    4
    Validate value (value)    //select[@id='acc_b3255c4ade265c13c45dd53cd496f582']    4
    Validate value (value)    //select[@id="acc_5f4787616fc5b4cab1d72ea3fb21512e"]    4
    Validate value (value)    //select[@id="acc_0d8aaf22c73f42d62b9c64fec59fa411"]    4
    Log To Console    Status: Role access rules has been edited. (name="${role name}") "LOGIN" and "MAIN MENU"="EDIT and DELETE"

Select role
    [Arguments]    ${role name}
    Mouse over    //*[@id="idRoleNameEditbox"]/table/tbody/tr/td/span/button
    Click element    //*[@id="idRoleNameEditbox"]/table/tbody/tr/td/span/button
    sleep    1
    Scroll Element Into View    xpath=//li[contains(.,'${role name}')]
    Click element    xpath=//li[contains(.,'${role name}')]
    Check errors on page [-1]

Add branch characteristic
    [Arguments]    ${Client ID}    ${RF property}    ${Mandatory}
    go to.AD    ${URL}/client-props.php?client=${Client ID}
    Wait until page contains element    //table[@id='big_tedit_wrapping_table']/tbody/tr/td/table/tbody/tr/td/button[@class='btn-input']
    #Click element    //table[@id='big_tedit_wrapping_table']/tbody/tr/td/table/tbody/tr/td/button[@class='btn-input']
    Wait until page contains element    //button[@class='btn-input']
    ###
    ${is element visible?}    Run keyword and return status    Page should contain    ${RF property}
    Run keyword if    "${is element visible?}"=="False"    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Run keyword if    "${is element visible?}"=="True"    Get ID    id='table_rows'    ${RF property}    1    2
    Run keyword if    "${is element visible?}"=="True"    Click link    default=${found ID}
    ###
    Wait until page contains    * This field is required
    Log to console    "* This field is required" error is seen in case of not filling the required field
    Input text    //input[@id='field_PropertyName']    ${RF property}
    Run keyword if    '${Mandatory}'=='Mandatory'    Set checkbox.AD    //input[@id='field_Mandatory']    true
    Click Save/Add/Delete/Cancel button.AD
    go to.AD    ${URL}/client-props.php?client=${Client ID}
    Set global variable    ${RF property}
    Wait until page contains    ${RF property}
    ${index}    Set Variable    1
    FOR    ${i}    IN RANGE    25
        ${actual property name}=    Get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        Run Keyword if    '${actual property name}'=='${RF property}'    Get ID value
        ${index}=    Evaluate    ${index}+1
        Set global variable    ${index}
    END
    Log to console    Created branch property: "${RF property}" (its ID: "${found branch characteristic ID}")
    Set To Dictionary    ${Dictionary}    ${RF property}=${found branch characteristic ID}
    Log to console    ${Dictionary}

Get ID value
    log    ${index}
    ${found branch characteristic ID}=    Get Text    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]
    Set global variable    ${found branch characteristic ID}
    exit for loop

Add branch characteristic value
    [Arguments]    ${found branch characteristic ID}    ${characteristic value}    ${color}    ${order}    ${grade}
    go to.AD    ${URL}/client-prop-values.php?prop=${found branch characteristic ID}
    Wait until page contains element    //input[@id='page_var_filter_Content']
    ${is element visible?}    Run keyword and return status    Page should contain    ${characteristic value}
    Run keyword if    "${is element visible?}"=="False"    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Run keyword if    "${is element visible?}"=="True"    Get ID    id='table_rows'    ${characteristic value}    1    2
    Run keyword if    "${is element visible?}"=="True"    Click link    default=${found ID}
    Wait until page contains element    //input[@id='field_Content']
    Input text    //input[@id='field_Content']    ${characteristic value}
    Input text    //input[@id='field_Order']    ${order}
    Input text    //input[@id='field_TargetFinalGrade']    ${grade}
    Select color.AD    //*[@id="idLevelColorEditbox"]/table/tbody/tr/td/div/div[1]/div    ${color}
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully
    Log to console    Created characteristic value="${characteristic value}"
    #
    go to.AD    ${URL}/client-prop-values.php?prop=${found branch characteristic ID}
    Wait until page contains element    //input[@id='page_var_filter_Content']
    ${is element visible?}    Run keyword and return status    Page should contain    ${characteristic value}
    Run keyword if    "${is element visible?}"=="False"    Click element    //button[@class='btn-input']
    Run keyword if    "${is element visible?}"=="True"    Get ID    id='table_rows'    ${characteristic value}    1    2
    Run keyword if    "${is element visible?}"=="True"    Click link    default=${found ID}
    Wait until page contains element    //input[@id='field_Content']
    Validate value (value)    //input[@id='field_Content']    ${characteristic value}
    Validate value (value)    //input[@id='field_Order']    ${order}
    Validate value (value)    //input[@id='field_TargetFinalGrade']    ${grade}
    #Validate style.AD    //*[@id="idLevelColorEditbox"]/table/tbody/tr/td/div/div[1]/div    ${color}
    Log to console    "${characteristic value}" has been created/updated (details: "${characteristic value}","${order}","${grade}","${color}")
    Set To Dictionary    ${Dictionary}    ${characteristic value}=${found ID}
    Log    ${Dictionary}

Remove branch characteristic
    go to.AD    ${URL}/client-props.php?&edit=${found branch characteristic ID}&client=${Client ID}
    Log to console    Let`s try to delete branch characteristics
    Wait until page contains element    //input[@id='delete']
    click element    //input[@id='delete']
    Page should contain    Cannot delete:
    Page should contain    Object cannot be erased because it has the following items linked to it:
    Log to console    Object cannot be erased because it has the following items linked to it
    Log to console    Clicking link="Click here to go to the values page" and confirm the action
    sleep    1
    click element    //*[@id="side_menu"]/tbody/tr/td[3]/a
    #Click link    default=Click here to go to the values page
    Check errors on page [-1]
    Wait until page contains element    //input[@id='update']
    ${index}    Set Variable    1
    ${elements}=    Get Element Count    //*[@id="table_rows"]/tbody/tr
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${elements}
        sleep    1
        click element    //*[@id="table_rows"]/tbody/tr[1]/td[1]
        Wait until page contains element    //input[@id='delete']
        click element    //input[@id='delete']
        Wait until page contains element    //input[@id='sure_delete']
        click element    //input[@id='sure_delete']
        ${index}=    Evaluate    ${index}+1
    END
    go to.AD    ${URL}/client-props.php?&edit=${found branch characteristic ID}&client=${Client ID}
    Wait until page contains element    //input[@id='delete']
    click element    //input[@id='delete']
    click element    //input[@id='sure_delete']
    Log to console    "RF Characteristic" (and its values) - has been be deleted

Check import page (dafault state)
    go to.AD    ${URL}/import-branches.php
    Log to console    Open ${URL}/import-branches.php
    Log to console    Checking page elements (if checkboxes are disabled by default)
    Page should contain element    //*[@id="side_menu"]/tbody/tr/td[3]/a
    Checkbox Should Not Be Selected    //input[@id='CreatePropValues']
    Checkbox Should Not Be Selected    //input[@id='clr_chars']
    Checkbox Should Not Be Selected    //input[@id='IgnoreDateErrors']
    Checkbox Should Not Be Selected    //input[@id='CreateCitys']
    Checkbox Should Not Be Selected    //input[@id='CreateUsers']
    Checkbox Should Not Be Selected    //input[@id='CreateNewRecords']
    Page should contain element    //input[@id='upload']
    Page should contain    In order to upload branch list into the system, the file has to contain the
    Check Page URL    import-branches.php

Import file (branches)
    [Arguments]    ${File Upload}
    go to.AD    ${URL}/import-branches.php
    Wait until page contains element    //*[@id="side_menu"]/tbody/tr/td[3]/a
    Page should contain element    //*[@id="side_menu"]/tbody/tr/td[3]/a
    Click element    //input[@id='CreatePropValues']
    Click element    //input[@id='clr_chars']
    Click element    //input[@id='IgnoreDateErrors']
    Click element    //input[@id='CreateCitys']
    Click element    //input[@id='CreateUsers']
    Click element    //input[@id='CreateNewRecords']
    #
    Select dropdown.AD    //*[@id="CountryLinkage"]    xpath=//li[contains(.,'Robot country 01(Robot state 01/01)')]
    Select dropdown.AD    //*[@id="Checker_Upload_Form"]/table/tbody/tr[10]/td[2]/table/tbody/tr/td/span/button/span[2]    xpath=//li[contains(.,'${RobotTestClient}')]
    Click element    //*[@id="Checker_Upload_Form"]/table/tbody/tr[10]/td[2]/table/tbody/tr/td/span/button
    Scroll Element Into View    xpath=//li[contains(.,'${RobotTestClient}')]
    Click element    xpath=//li[contains(.,'${RobotTestClient}')]
    #
    Click element    //*[@id="RegionLinkage"]
    Scroll Element Into View    xpath=//li[contains(.,'Robot region 01')]
    Click element    xpath=//li[contains(.,'Robot region 01')]
    #
    Choose File    //form[@id='Checker_Upload_Form']/table/tbody/tr[11]/td[2]/input    ${File Upload}
    Select dropdown.AD    id=DontSkipDuplicates    //*[@id="DontSkipDuplicates"]/option[3]
    Click element    //input[@id='upload']

Open update translation page
    [Arguments]    ${username}    ${userpass}
    go to.AD    ${URL}/m_login.php
    log to console    Loop №${1}: Starting updating translation file. Please wait...
    Run keyword and ignore error    click link    default=Login again?
    Wait until page contains element    //html/body/form/input[1]    10
    Input text    //html/body/form/input[1]    ${username}
    Input text    //html/body/form/input[2]    ${userpass}
    Click element    //html/body/form/input[@id='ba']
    go to.AD    ${URL}/m_update-lang-files.php
    Wait until page contains element    //body/form/div[1]/input
    Log to console    ${CURDIR}
    Choose File    //body/form/div[1]/input    ${CURDIR}\\Extra files\\translations.xls
    Click element    //body/form/div[2]/button
    Run keyword and ignore error    Wait until page contains    Update translations
    Run keyword and ignore error    Wait until page contains    Languages created:
    Wait until page contains    Translation update performed successfully    25
    Check errors on page [-1]
    log to console    Client system №${1}. ${\n}Status: Done. Translation update performed successfully for "${URL}" (+)
    ${1}=    evaluate    ${1}+1
    set global variable    ${1}

Check agreement icon
    Check errors on page [-1]
    #Click element    //body/div[2]/form/input[2]
    #Page should contain    You should sign all agreements to continue
    ${agree box visible}=    Run Keyword And Return Status    Element Should Be Visible    //div[2]/form/div[${index}]/div[2]/input    #//div[@class='agreements']/form/div[@class='agreement'][${index}]/div[@class='checkbox']/input
    Click element    //div[@class='agreements']/form/div[@class='agreement'][${index}]/div[@class='checkbox']/input    #//form/div[@class='agreement'][${index}]/div[@class='checkbox']/input
    Check errors on page [-1]
    Run keyword if    '${agree box visible}'=='False'    exit for loop

Check import user page
    go to.AD    ${URL}/import-checkers.php
    Wait until page contains element    //*[@id="side_menu"]/tbody/tr/td[3]/a
    Checkbox Should Not Be Selected    //input[@id='CreatePropValues']
    Checkbox Should Not Be Selected    //input[@id='clr_chars']
    Checkbox Should Not Be Selected    //input[@id='IgnoreDateErrors']
    Checkbox Should Not Be Selected    //input[@id='CreateCitys']
    Checkbox Should Not Be Selected    //input[@id='CreateNewRecords']
    Page should contain element    //input[@id='upload']
    Element text should be    //table[@id='side_menu']/tbody/tr/td[@class='middle-right']/fieldset[1]/legend/a[@class='fieldset_toggler']/div    Mandatory fields
    Element text should be    //table[@id='side_menu']/tbody/tr/td[@class='middle-right']/fieldset[2]/legend/a[@class='fieldset_toggler']/div    Optional fields
    Element text should be    //table[@id='side_menu']/tbody/tr/td[@class='middle-right']/fieldset[3]/legend/a[@class='fieldset_toggler']/div    Custom fields
    Element text should be    //div[@id='Mandatoryfields']/table/tbody/tr[1]/td[1]    Username
    Element text should be    //div[@id='Mandatoryfields']/table/tbody/tr[1]/td[2]    Username
    Element text should be    //div[@id='Mandatoryfields']/table/tbody/tr[2]/td[1]    Fullname
    Element text should be    //div[@id='Mandatoryfields']/table/tbody/tr[2]/td[2]    Full name
    Element text should be    //div[@id='Mandatoryfields']/table/tbody/tr[3]/td[1]    CityName
    Element text should be    //div[@id='Mandatoryfields']/table/tbody/tr[3]/td[2]    City
    Element text should be    //td[@id='the_cell_with_the_program']/table[@id='logo_and_title']/tbody/tr/td[1]/span[@class='breadcrums']    (Import > Import shoppers)
    Check Page URL    import-checkers.php

Check Page URL
    [Arguments]    ${expected page url}
    ${Pageurl} =    Execute Javascript    return window.location.href
    Log    ${Pageurl}
    Get Title
    ${ActualPageURL}=    Fetch From Right    ${Pageurl}    /
    Should be equal    ${ActualPageURL}    ${expected page url}
    Log    ${ActualPageURL}

Import file (shoppers)
    [Arguments]    ${File Upload}
    Go to2.AD    ${URL}/import-checkers.php
    Wait until page contains element    //input[@id='upload']
    Set checkbox.AD    //input[@id='CreatePropValues']    true
    Set checkbox.AD    //input[@id='clr_chars']    true
    Set checkbox.AD    //input[@id='IgnoreDateErrors']    true
    Set checkbox.AD    //input[@id='CreateCitys']    true
    Set checkbox.AD    //input[@id='CreateNewRecords']    true
    #
    Mouse down    //select[@id='DontSkipDuplicates']
    Select dropdown.AD    //select[@id='DontSkipDuplicates']    //*[@id="DontSkipDuplicates"]/option[3]
    #
    Choose File    //form[@id='Checker_Upload_Form']/table/tbody/tr[9]/td[2]/input    ${File Upload}
    Click element    //input[@id='upload']
    #
    Page should not contain    Database error
    Page should not contain    Fatal

Delete SD property
    [Arguments]    ${Shopper Property}
    go to.AD    ${URL}/checker-prop-values.php?prop=${prop ID}
    Log to console    Open ${URL}/checker-prop-values.php?prop=${prop ID} and delete its options
    Wait until page contains element    //input[@id='update']
    ${index}    Set Variable    1
    ${elements}=    Get Element Count    //*[@id="table_rows"]/tbody/tr
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${elements}
        Set global variable    ${rowindex}
        sleep    1    #//*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        click element    //*[@id="table_rows"]/tbody/tr[1]/td[1]
        Wait until page contains element    //input[@id='delete']
        click element    //input[@id='delete']
        Wait until page contains element    //input[@id='sure_delete']
        click element    //input[@id='sure_delete']
        Log to console    Option has been deleted.
        Check errors on page [-1]
        ${index}=    Evaluate    ${index}+1
    END
    go to.AD    ${URL}/checker-props.php?page_var_divide_recordsPerPage=500
    log to console    open ${URL}/checker-props.php?page_var_divide_recordsPerPage=500
    click link    default=${prop ID}
    Wait until page contains element    //input[@id='delete']
    click element    //input[@id='delete']
    Wait until page contains element    //input[@id='sure_delete']
    click element    //input[@id='sure_delete']
    Wait until page contains element    //button[@class='btn-input']
    Page should not contain    ${Shopper Property}
    Log to console    Status: OK, "${Shopper Property}" has been deleted.
    Check errors on page [-1]

Add custom field.AD
    [Arguments]    ${Shopper СF name}    ${Shopper Property kind}    ${Shopper Property type}
    go to.AD    ${URL}/table-fields.php
    Log to console    Let`s add a custom field (name: "${Shopper СF name}", kind: "${Shopper Property kind}", type: "${Shopper Property type}")
    click element    //table[@id='big_tedit_wrapping_table']/tbody/tr[1]/td/table/tbody/tr/td/button[@class='btn-input']    # press add new custom field button
    ${element}=    set variable    //*[@id="idTableLinkEditbox"]/table/tbody/tr/td/span/button    #//*[@id="table_rows"]/tbody/tr[${index}]/td[2]
    ${element present?}=    Run Keyword And Return Status    Element Should Be Visible    ${element}
    Run Keyword If    '${element present?}'=='True'    Select dropdown.AD    //*[@id="idTableLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Shopper Property kind}')]
    Run Keyword If    '${element present?}'=='True'    Validate value (text)    //*[@id="idTableLinkEditbox"]/table/tbody/tr/td/span/button    ${Shopper Property kind}
    Check errors on page [2]
    #Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Wait until page contains element    //input[@id='field_FieldName']
    Input text    //input[@id='field_FieldName']    ${Shopper СF name}
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    ###
    sleep    1
    Input text    //input[@id='field_NumberStart']    0
    Input text    //input[@id='field_NumberEnd']    100
    Input text    //input[@id='field_OrderInRegistration']    20
    Select dropdown.AD    //*[@id="idFieldTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Shopper Property type}')]
    Validate value (text)    //*[@id="idFieldTypeEditbox"]/table/tbody/tr/td/span/button    ${Shopper Property type}
    Check errors on page [-1]
    ###
    Click Save/Add/Delete/Cancel button.AD
    Log to console    SD custom field: ${Shopper СF name} created!
    Check errors on page [-1]

Search custom field
    [Arguments]    ${Test Custom Field}
    #Go to    ${URL}/table-fields.php?page_var_filter_TableLink=Checkers
    Check errors on page [-1]
    Wait until page contains element    //*[@id="TableEdit_filtering"]/tbody/tr/td/div/div/table/tbody/tr/td/span/button
    #Click element    //body/div[3]/ul/li[${Shopper СА type}]
    #Click element    //ul/li[${Shopper СА type}]
    sleep    1
    ${index}    Set Variable    1
    Set global variable    ${index}
    @{elements}=    Get Webelements    //*[@id="table_rows"]/tbody/tr    #//*[@id="table_rows"]/tbody/tr
    ${total table rows}=    Get Element Count    //*[@id="table_rows"]/tbody/tr
    #iterate for each row
    FOR    ${row}    IN    @{elements}
        ${actual name}=    Get Text    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]    #//*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        ${element present?}=    Run Keyword And Return Status    Element Should Be Visible    ${Test Custom Field}
        log    Row ${index}=${actual name}
        Run Keyword If    '${actual name}'=='${Test Custom Field}'    Get ID (table)    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        Run Keyword If    '${actual name}'=='${Test Custom Field}'    exit for loop
        ${index}=    Evaluate    ${index}+1
        #Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
        Log    try №${index}. , СustField - ${actual name}
        Set global variable    ${index}
        Exit For Loop If    '${element present?}'==False
    END

open СF page
    Click element    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]/a
    exit for loop

Change password
    ${userpass}=    set variable    oksana123456
    Set global variable    ${userpass}

Search custom field and get its ID
    [Arguments]    ${Shopper СF name}
    go to.AD    ${URL}/table-fields.php?page_var_filter_TableLink=Checkers
    Wait until page contains element    //*[@id="TableEdit_filtering"]/tbody/tr/td/div/div/table/tbody/tr/td/span/button
    #Click element    //*[@id="TableEdit_filtering"]/tbody/tr/td/div/div/table/tbody/tr/td/span/button
    #Click element    //body/div[3]/ul/li[${Shopper СА type}]
    #Click element    //ul/li[${Shopper СА type}]
    sleep    1
    ${element present?}=    Run Keyword And Return Status    Page should contain    ${Shopper СF name}
    Run Keyword If    '${element present?}'=='False'    click element    //table[@id='big_tedit_wrapping_table']/tbody/tr[1]/td/table/tbody/tr/td/button[@class='btn-input']    # press add new custom field button
    ${index}    Set Variable    1
    Set global variable    ${index}
    Capture Page Screenshot
    @{elements}=    Get Webelements    //*[@id="table_rows"]    #//*[@id="table_rows"]/tbody/tr
    #iterate for each row
    FOR    ${row}    IN    @{elements}
    ${actual name}=    Get Text    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]    #//*[@id="table_rows"]/tbody/tr[${index}]/td[2]
    ${actual name present?}=    Run Keyword And Return Status    Element Should Be Visible    ${actual name}
    Run Keyword If    '${actual name}'=='${Shopper СF name}'    open СF page
    ${index}=    Evaluate    ${index}+1
    Log to console    СustField №${index}
    Set global variable    ${index}
    ${CF ID}=    Get text    //td[@id='idFieldIDEditbox']
    set global variable    ${CF ID}
    Log to console    ${CF ID}
    go to    ${URL}/table-fields.php?edit=${CF ID}

Edit CF.AD
    [Arguments]    ${Show in registration?}    ${Mandatory?}    ${Allow shopper to edit?}    ${Active?}
    go to.AD    ${URL}/table-fields.php?edit=${found ID}
    Log to console    go to ${URL}/table-fields.php?edit=${found ID} and edit the custom field
    Wait until page contains element    //input[@id='field_FieldName']
    ${actual Test Custom Field}    get element attribute    //input[@id='field_FieldName']    value
    ###
    Set checkbox.AD    //input[@id='field_Mandatory']    ${Mandatory?}
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_ShowInRegistration']    ${Show in registration?}
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_AllowShopperToEdit']    ${Allow shopper to edit?}
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_IsActive']    ${Active?}
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_ShowToShoppersBeforeAccept']    true
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_ShowToShoppersAfterAccept']    true
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_ShowToClients']    true
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_ShowOnOperationalScreens']    true
    Input text    //input[@id='field_DisplayCondition']    1=1
    Input text    //input[@id='field_FieldOrder']    10
    Input text    //input[@id='field_OrderInRegistration']    10
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    uccessfully
    log to console    "${actual Test Custom Field}" custom field (#${found ID}) has been edited

Search CF via table
    [Arguments]    ${Test Custom Field}    ${CF kind}    ${CF type}
    ${index}=    set variable    1
    ${page index}=    set variable    1
    go to.AD    ${URL}/table-fields.php?page_var_divide_recordsPerPage=800
    Log to console    ${\n}Open ${URL}/table-fields.php and search a CF with title="${Test Custom Field}"
    Select dropdown.AD    //*[@id="TableEdit_filtering"]/tbody/tr/td/div/div/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${CF kind}')]
    Wait until page contains element    //button[@class='btn-input']
    ${all pages}=    Get Element Count    //table[@id='big_tedit_wrapping_table']/tbody/tr[3]/td/table[@id='page_division_wrapping_table']/tbody/tr/td[@class='second-align']/a[@class='db-pageNumber']    #//table[@id='big_tedit_wrapping_table']/tbody/tr[3]/td/table[@id='page_division_wrapping_table']/tbody/tr/td[@class='second-align']/a[@class='db-pageNumber']
    #Run Keyword If    '${all pages}'=='0'    ${all pages}    Evaluate    ${all pages}+1
    FOR    ${row}    IN RANGE    2    #${all pages}
        Log to console    Searching custom field in a system: "${Test Custom Field}". ${\n}Please wait!
        ${СА name present?}=    Run Keyword And Return Status    Page should contain    ${Test Custom Field}
        Log to console    is СА name present?=${СА name present?}
        Run Keyword If    '${СА name present?}'=='True'    Get ID    id="table_rows"    ${Test Custom Field}    1    2
        Run Keyword If    '${СА name present?}'=='True'    exit for loop
        Run Keyword If    '${СА name present?}'=='False'    Add custom field.AD    ${Test Custom Field}    ${CF kind}    ${CF type}
        ${index}=    Evaluate    ${index}+1
    END

Perform deactivation CF

Get ID (table)
    [Arguments]    ${1st column}    ${2nd column}
    ${found ID}=    Get Text    ${1st column}
    ${found name}=    Get Text    ${2nd column}
    set global variable    ${found ID}
    set global variable    ${found name}
    Log to console    FOUND --> , ID: #${found ID}, name: "${found name}"
    Check errors on page [-1]

Add agreement
    go to.AD    ${URL}/company-agreements.php
    Log to console    Open ${URL}/company-agreements.php and add new agreement
    click element    //button[@class='btn-input']
    Wait until page contains element    //input[@id='field_Title']
    Input text    //input[@id='field_Title']    ${Agreement name}
    Enter editor text.AD    //*[@id="cke_57_label"]    ${Updated agreement name}
    Click element    //input[@id='addnew']
    Check errors on page [-1]
    Log to console    Added "${Agreement name}"

Search agreement via table pages
    [Arguments]    ${Agreement name}
    go to.AD    ${URL}/company-agreements.php
    Log to console    Open ${URL}/company-agreements.php and search "${Agreement name}"
    ${index}=    set variable    1
    ${page index}=    set variable    2
    ${all pages}=    Get Element Count    //*[@id="table_rows"]/tbody
    #${pageNumber}=    Evaluate    ${all pages}    #${pageNumber}
    FOR    ${row}    IN RANGE    ${all pages}
        ${element present?}=    Run Keyword And Return Status    Page should contain    ${Agreement name}
        Run Keyword If    '${element present?}'=='True'    Edit agreement
        ${index}=    Evaluate    ${index}+1
        ${next page present?}=    Run Keyword And Return Status    Page should contain    //td[@class='second-align']/a[@class='db-pageNumber'][${page index}]
        Run Keyword If    ${next page present?}=='True'    Click link    //td[@class='second-align']/a[@class='db-pageNumber'][${page index}]
        log to console    Searching ${Agreement name}...
        ${page index}=    Evaluate    ${page index}+1
    END

Edit agreement
    Log to console    Found...
    click link    default=${Agreement name}
    wait until page contains element    //input[@id='field_RequiredInOrderToUse']
    Check errors on page [-1]
    ${active status}=    Get Element Attribute    //input[@id='field_RequiredInOrderToUse']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_RequiredInOrderToUse']
    sleep    1
    ${checked}=    checkbox should be selected    //input[@id='field_RequiredInOrderToUse']
    ${a}=    Set variable    ${Agreement name}
    ${x}=    Run Keyword And Return Status    Should contain    ${a}    optional
    Run Keyword If    '${x}'=='true'    Set agreement as optional
    ###
    #Click element    //table[@class='cke_editor']/tbody
    #select frame    //*[@id="cke_contents_field_Contents"]/iframe
    #Input text    class=cke_show_borders    ${Updated agreement name}
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Wait until page contains element    //*[@id="cke_1_contents"]/iframe
    select frame    //*[@id="cke_1_contents"]/iframe
    sleep    1
    Input text    css:[class="cke_editable cke_editable_themed cke_contents_ltr cke_show_borders"]    ${Updated agreement name}
    Unselect Frame
    ###
    Check errors on page [-1]
    click element    //input[@id='save']
    Check errors on page [-1]
    exit for loop

Enable shopper login
    go to.AD    ${URL}/company-display.php
    Log to console    Let`s enable "Shopper login link"
    Log to console    Open ${URL}/company-display.php and enable shopper login
    Wait until page contains element    //input[@id='field_ShowCheckersLoginInMain']
    ####
    ${active status}=    Get Element Attribute    //input[@id='field_ShowCheckersLoginInMain']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_ShowCheckersLoginInMain']
    sleep    1
    ${checked}=    checkbox should be selected    //input[@id='field_ShowCheckersLoginInMain']
    ####
    ${active status}=    Get Element Attribute    //input[@id='field_CustomLinksDisplayType']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_CustomLinksDisplayType']
    sleep    1
    ${checked}=    checkbox should be selected    //input[@id='field_CustomLinksDisplayType']
    ####
    Click element    //input[@id='save']
    Check errors on page [-1]
    Log to console    "Shopper login link" has been enabled

Set agreement as optional
    ${active status}=    Get Element Attribute    //input[@id='field_RequiredInOrderToUse']    checked
    Run keyword if    '${active status}'=='True'    Click element    //input[@id='field_RequiredInOrderToUse']
    sleep    1
    ${checked}=    checkbox should not be selected    //input[@id='field_RequiredInOrderToUse']

Open registration page and check agreement box(es)
    go to.AD    ${URL}/c_register-new-checker.php?addnew=1
    Log to console    ${\n}Open ${URL}/c_register-new-checker.php?addnew=1, cliking agreement box(es) if any is present on page
    Wait until page contains element    //a[@id='set-language']
    #Switch language.SD    ${UILangauageID}
    Wait until page contains element    //a[@id='set-language']
    ${Count agreements}=    Get Element Count    //*[@id="agreement"]/div/div/div
    ${index}    Set Variable    1
    FOR    ${i}    IN RANGE    ${Count agreements}
        ${I agree}=    Run Keyword And Return Status    Element Should Be Visible    //form/div/div/div[${index}]/input    #//form[@id='agreement']/div[@class='regCenterAgree']/div/div/div[${index}]
        Set global variable    ${index}
        #Run keyword if    '${I agree}'=='False'    exit for loop
        Run keyword if    '${I agree}'=='True'    Click element    //form/div/div/div[${index}]/input    #//form[@id='agreement']/div[@class='regCenterAgree']/div/div/div[${index}]/input
        Log to console    Agreement checkbox #${index} has been enabled
        ${index}    evaluate    ${index}+1
    END
    Run keyword and ignore error    click element    //input[@id='iAgree']

Enable agreements.SD
    ${required-agreements}=    Set variable    //div[2]/form/div[2]/div[2]/input
    ${is required-agreements visible?}=    Run Keyword And Return Status    Element Should Be Visible    ${required-agreements}
    ${count checkboxes}    Get Element Count    //div[@class='agreements']/form/div
    log to console    Total agree boxes visible="${count checkboxes}"
    ${index}    Set Variable    1
    #iterate for each row
    FOR    ${i}    IN RANGE    ${count checkboxes}
        ${I agree}=    Run Keyword And Return Status    Element Should Be Visible    //div[@class='agreements']/form/div[@class='agreement'][${index}]/div[@class='checkbox']/input    #//body/div[2]/form/div[${index}]/div[2]/input
        Set global variable    ${index}
        Run keyword if    '${I agree}'=='False'    exit for loop
        Run keyword if    '${I agree}'=='True'    Click element    //div[@class='agreements']/form/div[@class='agreement'][${index}]/div[@class='checkbox']/input
        ${index}    evaluate    ${index}+1
    END
    ${Continue button visible}=    Run Keyword And Return Status    Element Should Be Visible    //body/div[2]/form/input[2]
    Run keyword if    '${Continue button visible}'=='True'    click element    //body/div[2]/form/input[2]

check agreement error
    Click element    //div[2]/form/div[1]/div[2]/input
    click element    //body/div[2]/form/input[2]    #press continue button
    Page should contain    You should sign all agreements to continue
    Log to console    "You should sign all agreements to continue" message is seen in case if user press Continue (not enabling the required agreement(s))

Get shopper ID
    [Arguments]    ${1st column}    ${2nd column}
    ${found ID}=    Get Text    ${1st column}
    ${found name}=    Get Text    ${2nd column}
    set global variable    ${found ID}
    set global variable    ${found name}
    Log to console    ID = ${found ID}, name = ${found name}
    Check errors on page [-1]

Disable shopper login
    go to.AD    ${URL}/company-display.php
    Log to console    Let`s disable "Shopper login link"
    Wait until page contains element    //input[@id='field_ShowCheckersLoginInMain']
    ####
    ${active status}=    Get Element Attribute    //input[@id='field_ShowCheckersLoginInMain']    checked
    Run keyword if    '${active status}'=='true'    Click element    //input[@id='field_ShowCheckersLoginInMain']
    sleep    1
    ${checked}=    Checkbox Should Not Be Selected    //input[@id='field_ShowCheckersLoginInMain']
    ####
    ${active status}=    Get Element Attribute    //input[@id='field_CustomLinksDisplayType']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_CustomLinksDisplayType']
    sleep    1
    ${checked}=    checkbox should be selected    //input[@id='field_CustomLinksDisplayType']
    ####
    Click element    //input[@id='save']
    Check errors on page [-1]
    Log to console    "Shopper login link" has been disabled

Enable shopper registration
    go to.AD    ${URL}/company_shopper_reg.php
    Wait until page contains element    //input[@id='field_AllowCheckerSelfReg']
    ####
    ${active status}=    Get Element Attribute    //input[@id='field_AllowCheckerSelfReg']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_AllowCheckerSelfReg']
    sleep    1
    ${checked}=    checkbox should be selected    //input[@id='field_AllowCheckerSelfReg']
    ####
    ${active status}=    Get Element Attribute    //input[@id='field_CheckerRegistrationCaptcha']    checked
    Run keyword if    '${active status}'=='true'    Click element    //input[@id='field_CheckerRegistrationCaptcha']
    sleep    1
    ${checked}=    Checkbox Should Not Be Selected    //input[@id='field_CheckerRegistrationCaptcha']
    Log to console    "CheckerRegistrationCaptcha" option is disabled
    ####
    Page should contain element    //tr[@id='tr_AvoidDuplicatesFields']
    Page should contain element    //input[@id='field_AutoApproveSelfReg']
    Page should contain element    //td[@id='idPostRegistrationCertificationEditbox']
    Page should contain element    //input[@id='field_ProfileCompletionRequired']
    Page should contain element    //td[@id='idProfileCompletionRequiredEditbox']
    Page should contain element    //input[@id='field_DaysToCompleteRegistration']
    #Page should contain element    //div[@id='slider-range-field_DaysToCompleteRegistration']    fix here!!!!
    #Page should contain element    //div[@id='slider-range-field_ProfileCompletionRequired']
    #Page should contain element    //div[@id='slider-range-field_DefaultAvailabilityRadious']
    Page should contain element    //input[@id='field_DefaultAvailabilityRadious']
    Page should contain element    //td[@id='idDefaultAvailabilityRadiousEditbox']
    Page should contain element    //input[@id='field_CheckerDEF_NewCheckerCanEditRegions']
    Page should contain element    //td[@id='idSelfRegCityFieldTypeEditbox']
    Page should contain element    //input[@id='field_CheckerRegistrationCaptcha']
    sleep    1
    #Wait until page contains element    //*[@id="cke_1_contents"]/iframe
    #Page should contain element    //*[@id="cke_1_contents"]/iframe
    Page should contain element    //td[@id='idCrrUserLinkEditbox']
    Page should contain element    //input[@id='field_CrrUpdateBySms']
    Page should contain element    //input[@id='field_CrrUpdateByEmail']
    Page should contain element    //input[@id='field_CheckerWelcomeSubj']
    Page should contain element    //*[@id="cke_field_CheckerWelcomeMsg"]
    Page should contain element    //*[@id="cke_field_RegistrationProcessCompleteMessage"]
    Page should contain element    xpath=//a[@href="company-checker-disp.php"]
    Page should contain element    xpath=//a[@href="company-agreements.php"]
    Page should contain element    xpath=//a[@href="checker-props.php"]
    Page should contain element    xpath=//a[@href="table-fields.php"]
    Page should contain element    xpath=//a[@href="checkers.php?page_var_filter_IsActive=0&page_var_filter_IsSelfRegistered=1"]
    ####
    Log to console    "Shopper registration on login page" option is enabled properly
    Click Save/Add/Delete/Cancel button.AD

Disable shopper registration
    go to.AD    ${URL}/company_shopper_reg.php
    Log to console    Disabling "Shopper registration on login page" option
    Wait until page contains element    //input[@id='field_AllowCheckerSelfReg']
    ####
    ${active status}=    Get Element Attribute    //input[@id='field_AllowCheckerSelfReg']    checked
    Run keyword if    '${active status}'=='true'    Click element    //input[@id='field_AllowCheckerSelfReg']
    sleep    1
    ${checked}=    checkbox should not be selected    //input[@id='field_AllowCheckerSelfReg']
    ####
    ${active status}=    Get Element Attribute    //input[@id='field_CheckerRegistrationCaptcha']    checked
    Run keyword if    '${active status}'=='true'    Click element    //input[@id='field_CheckerRegistrationCaptcha']
    sleep    1
    Log to console    "Registration Captcha" option is disabled
    ${checked}=    Checkbox Should Not Be Selected    //input[@id='field_CheckerRegistrationCaptcha']
    ####
    Page should contain element    //tr[@id='tr_AvoidDuplicatesFields']
    Page should contain element    //input[@id='field_AutoApproveSelfReg']
    Page should contain element    //td[@id='idPostRegistrationCertificationEditbox']
    Page should contain element    //input[@id='field_ProfileCompletionRequired']
    Page should contain element    //td[@id='idProfileCompletionRequiredEditbox']
    Page should contain element    //input[@id='field_DaysToCompleteRegistration']
    Page should contain element    //input[@id='field_DefaultAvailabilityRadious']
    Page should contain element    //td[@id='idDefaultAvailabilityRadiousEditbox']
    Page should contain element    //input[@id='field_CheckerDEF_NewCheckerCanEditRegions']
    Page should contain element    //td[@id='idSelfRegCityFieldTypeEditbox']
    Page should contain element    //input[@id='field_CheckerRegistrationCaptcha']
    Page should contain element    //td[@id='idCrrUserLinkEditbox']
    Page should contain element    //input[@id='field_CrrUpdateBySms']
    Page should contain element    //input[@id='field_CrrUpdateByEmail']
    Page should contain element    //input[@id='field_CheckerWelcomeSubj']
    Page should contain element    //*[@id="cke_field_CheckerWelcomeMsg"]
    Page should contain element    //*[@id="cke_field_RegistrationProcessCompleteMessage"]
    Page should contain element    xpath=//a[@href="company-checker-disp.php"]
    Page should contain element    xpath=//a[@href="company-agreements.php"]
    Page should contain element    xpath=//a[@href="checker-props.php"]
    Page should contain element    xpath=//a[@href="table-fields.php"]
    Page should contain element    xpath=//a[@href="checkers.php?page_var_filter_IsActive=0&page_var_filter_IsSelfRegistered=1"]
    ####
    Log to console    "Shopper registration option on login page" has been disabled properly
    Click Save/Add/Delete/Cancel button.AD

Edit shopper self registration messages
    go to.AD    ${URL}/company_shopper_reg.php
    Log to console    Editing self registration messages...Please wait...
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idCrrUserLinkEditbox"]/table/tbody/tr/td/span/button/span[2]    xpath=//li[contains(.,'${ManagerUsername}')]
    Run keyword and ignore error    Validate value (text)    //*[@id="idCrrUserLinkEditbox"]/table/tbody/tr/td/span/button/span[2]    ROBOT [MANAGER]
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_65_label"]    ${Shopper self registration message}${RF REVN DT}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_53_label"]    ${Shopper self registration message}${RF REVN DT}
    log to console    1. Editing "Shopper self registration message"
    log to console    2. Editing "Email subject"
    input text    //input[@id='field_CheckerWelcomeSubj']    Welcome to the Mystery Shopping company
    log to console    3. Editing "Registration confirmation message"
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_127_label"]    ${Welcome message to new shoppers}${RF REVN DT}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_110_label"]    ${Welcome message to new shoppers}${RF REVN DT}
    Unselect Frame
    log to console    4. Editing "Complete registration message"
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_188_label"]    ${Message after the completion of the registration}${RF REVN DT}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_165_label"]    ${Message after the completion of the registration}${RF REVN DT}
    Page should contain element    //tr[@id='tr_AvoidDuplicatesFields']
    Page should contain element    //input[@id='field_AutoApproveSelfReg']
    Page should contain element    //td[@id='idPostRegistrationCertificationEditbox']
    Page should contain element    //input[@id='field_ProfileCompletionRequired']
    Page should contain element    //td[@id='idProfileCompletionRequiredEditbox']
    Page should contain element    //input[@id='field_DaysToCompleteRegistration']
    Page should contain element    //input[@id='field_DefaultAvailabilityRadious']
    Page should contain element    //td[@id='idDefaultAvailabilityRadiousEditbox']
    Page should contain element    //input[@id='field_CheckerDEF_NewCheckerCanEditRegions']
    Page should contain element    //td[@id='idSelfRegCityFieldTypeEditbox']
    Page should contain element    //input[@id='field_CheckerRegistrationCaptcha']
    Page should contain element    //td[@id='idCrrUserLinkEditbox']
    Page should contain element    //input[@id='field_CrrUpdateBySms']
    Page should contain element    //input[@id='field_CrrUpdateByEmail']
    Page should contain element    //input[@id='field_CheckerWelcomeSubj']
    Page should contain element    //*[@id="cke_field_CheckerWelcomeMsg"]
    Page should contain element    //*[@id="cke_field_RegistrationProcessCompleteMessage"]
    Page should contain element    xpath=//a[@href="company-checker-disp.php"]
    Page should contain element    xpath=//a[@href="company-agreements.php"]
    Page should contain element    xpath=//a[@href="checker-props.php"]
    Page should contain element    xpath=//a[@href="table-fields.php"]
    Page should contain element    xpath=//a[@href="checkers.php?page_var_filter_IsActive=0&page_var_filter_IsSelfRegistered=1"]
    Click element    //input[@id='save']
    Check errors on page [-1]
    Log to console    Registartion messages for shoppers are updated and saved

Reports: Final score - chart
    go to.AD    ${URL}/report-property.php
    Page should contain element    xpath=//a[@href="main-menu.php"]
    Check errors on page [-1]
    Page should contain element    xpath=//a[@href="menu-reports.php"]
    Page should contain element    xpath=//a[@href="main-menu.php"]
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[1]/td[2]/table/tbody/tr/td/span/button
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[2]/td[2]/table/tbody/tr/td/span/button
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[3]/td[2]/table/tbody/tr/td/span/button
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[4]/td[2]/table/tbody/tr/td/span/button
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[5]/td[2]/table/tbody/tr/td/span/button
    Page should contain element    //*[@id="PropID"]
    Page should contain element    //*[@id="FilteringSmp"]
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[8]/td[2]/button
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[9]/td[2]/table/tbody/tr/td/span/button
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[11]/td[2]/button
    #Page should contain element    //*[@id="watchedReviews"]    fix here
    Page should contain element    //input[@id='rptBtmLn']
    Page should contain element    //input[@id='rptHidGrd']
    Page should contain element    //input[@id='rptavgcol']
    Page should contain element    //input[@id='rptsumcol']
    Page should contain element    //select[@id='rnk']
    Page should contain element    //select[@id='scr']
    #Page should contain element    //input[@id='searchBranch']    fix here
    Page should contain element    //div[@id='FiltersArea']/form/table[2]/tbody/tr[1]/td/label/input
    Page should contain element    //div[@id='FiltersArea']/form/table[2]/tbody/tr[2]/td/label/input
    Page should contain element    //div[@id='FiltersArea']/form/table[2]/tbody/tr[3]/td[1]/label
    Page should contain element    //table/tbody/tr/td/span/select[@id='DyChartType']
    Page should contain element    //table/tbody/tr/td/input[@id='DycX']
    Page should contain element    //table/tbody/tr/td/input[@id='ys']
    Page should contain element    //input[@id='DycY']
    Page should contain element    //tbody/tr/td/input[@id='ye']
    Page should contain element    //input[@id='cid']
    Page should contain element    //input[@id='nod']
    Page should contain element    //select[@id='slo']
    Page should contain element    //tr[5]/td/label/input
    Page should contain element    //input[@id='submitAsPopup']
    #Page should contain element    //input[@id='AddToReportsList']
    Page should contain element    //form/input[@id='go']
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[1]/td[2]/table/tbody/tr[1]/td[1]/table/tbody/tr/td/span/button
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[2]/td[2]/input[1]
    Page should contain element    //td[2]/table/tbody/tr[2]/td[2]/input[2]
    Page should contain element    //select[@id='selectedCycleExtent']
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[1]/input
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[2]/input
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[3]/input
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[4]/input
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[5]/input
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[6]/input
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[7]/input
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[8]/input
    Page should contain element    //tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[9]/input
    Page should contain element    //select[@id='showClientColorGroup']
    Page should contain element    //select[@id='sei']
    click element    //table[@id='width_limiter']/tbody/tr/td[@id='the_cell_with_the_program']/table[@id='side_menu']/tbody/tr/td[@class='middle-right']/div[@id='FiltersArea']/form/table[2]/tbody/tr[3]/td[1]/label/input
    click element    //select[@id='DyChartType']
    Scroll Element Into View    //span[contains(.,'Doughnut3D hc')]
    sleep    1
    select from list by value    //select[@id='DyChartType']    Column3D hc
    #click element    //span[contains(.,'Doughnut3D hc')]
    sleep    1
    #click element    //div[@id='FiltersArea']/form/input[@id='go']
    sleep    1
    Page should contain element    //table[@class='begin-report-area']/tbody/tr/td[@class='begin-report-area-td']/center
    log to console    Final score report: page contains chart

Create graph color groups for client
    [Arguments]    ${Level name}    ${min}    ${max}    ${color}
    Go to    ${URL}/client-graph-color-groups.php?ClientID=${found ID}
    Log to console    Status: Not found...
    Log to console    Adding new graph color group (details: "${Level name}" | "${min}" | "${max}" | "${color}") for client at ${URL}/client-graph-color-groups.php?ClientID=${found ID}
    Wait until page contains element    //button[@class='btn-input']
    Page should contain element    xpath=//a[@href="clients.php?edit=${found ID}"]
    Page should contain element    xpath=//a[@href="clients.php?highlight_id=${found ID}"]
    Page should contain element    xpath=//a[@href="main-menu.php"]
    Go to    ${URL}/client-graph-color-groups.php?addnew=yup&ClientID=${found ID}
    Wait until page contains element    //input[@id='field_ColorGroupName']
    Input text    //input[@id='field_ColorGroupName']    ${Level name}
    Input text    //input[@id='field_RangeStart']    ${min}
    Input text    //input[@id='field_RangeEnd']    ${max}
    Click element    //input[@id='field_FinalResult']
    Click element    //input[@id='field_FinalResult']
    Click element    //input[@id='field_Chapter']
    Click element    //input[@id='field_Question']
    Click element    //*[@id="idLevelColorEditbox"]/table/tbody/tr/td/div/div[1]/div
    sleep    2
    Input text    //body/div[2]/div[2]/div[2]/input    ${color}
    sleep    1
    Click element    //button[@class='sp-choose']
    sleep    1
    Click element    //input[@id='addnew']
    sleep    1
    Go to    ${URL}/client-graph-color-groups.php?ClientID=${found ID}
    Page should contain    ${Level name}
    log to console    "${Level name}" has been created (with details: RangeStart = "${min}", RangeEnd ="${max}" and color = "${color}"

Edit graph color groups for client
    [Arguments]    ${Level name}    ${min}    ${max}    ${color}
    Log to console    "${Level name}" color group has been found. Let`s edit it
    click link    default=${Level name}
    Wait until page contains element    //input[@id='field_ColorGroupName']
    Check errors on page [-1]
    Input text    //input[@id='field_RangeStart']    ${min}
    Input text    //input[@id='field_RangeEnd']    ${max}
    ${active status}=    Get Element Attribute    //input[@id='field_FinalResult']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_FinalResult']
    ${checked}=    checkbox should be selected    //input[@id='field_FinalResult']
    ${active status}=    Get Element Attribute    //input[@id='field_Question']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_Question']
    ${checked}=    checkbox should be selected    //input[@id='field_Question']
    ${active status}=    Get Element Attribute    //input[@id='field_Chapter']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_Chapter']
    ${checked}=    checkbox should be selected    //input[@id='field_Chapter']
    ${active status}=    Get Element Attribute    //input[@id='field_SubChapter']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_SubChapter']
    ${checked}=    checkbox should be selected    //input[@id='field_SubChapter']
    Click element    //*[@id="idLevelColorEditbox"]/table/tbody/tr/td/div/div[1]/div
    Input text    //input[@class='sp-input']    ${color}
    Click element    //button[@class='sp-choose']
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully
    go to.AD    ${URL}/client-graph-color-groups.php?ClientID=${found ID}
    Page should contain    ${Level name}
    log to console    "${Level name}" has been edited (with next details "${Level name}" | "${min}" | "${max}" | "${color}")

Validate graph level
    [Arguments]    ${Level name}    ${min}    ${max}    ${color}
    go to.AD    ${URL}/client-graph-color-groups.php?page_var_divide_recordsPerPage=500&&ClientID=${found ID}
    Log to console    Let`s search the graph group, create it or edit if already exists...
    ${element present?}=    Run Keyword And Return Status    Page should contain    ${Level name}
    Run Keyword If    '${element present?}'=='False'    Create graph color groups for client    ${Level name}    ${min}    ${max}    ${color}
    Run Keyword If    '${element present?}'=='True'    Edit graph color groups for client    ${Level name}    ${min}    ${max}    ${color}

Final score report: check elements
    go to.AD    ${URL}/report-property.php
    Page should contain element    xpath=//a[@href="main-menu.php"]
    #Wait until page contains element    xpath=//a[@href="javascript:showFilterArea();"]
    #click element    xpath=//a[@href="javascript:showFilterArea();"]
    Page should contain element    xpath=//a[@href="menu-reports.php"]
    Page should contain element    xpath=//a[@href="main-menu.php"]
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[1]/td[2]/table/tbody/tr/td/span/button
    Page should contain element    id=BranchID
    #Page should contain element    //*[@id="prjID"]
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[4]/td[2]/table/tbody/tr/td/span/button
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[5]/td[2]/table/tbody/tr/td/span/button
    Page should contain element    //*[@id="PropID"]
    Page should contain element    //*[@id="FilteringSmp"]
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[8]/td[2]/button
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[10]/td[2]/table[1]/tbody/tr/td/span/button
    Page should contain element    //table[@class='begin-report-area']/tbody/tr/td[@class='begin-report-area-td']/center
    #Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[11]/td[2]/button
    Page should contain element    //*[@id="rnk"]
    Page should contain element    //*[@id="scr"]
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[1]/td[2]/table/tbody/tr[1]/td[1]/table/tbody/tr/td/span/button
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[2]/td[2]/input[1]
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[2]/td[2]/input[2]
    Page should contain element    //*[@id="selectedCycleExtent"]
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[1]/input
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[2]
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[3]/input
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[4]/input
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[5]/input
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[6]/input
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[7]/input
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[8]/input
    Page should contain element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[3]/td[2]/label[9]/input
    Page should contain element    //*[@id="showClientColorGroup"]
    Page should contain element    //*[@id="sei"]
    Page should contain element    //*[@id="FiltersArea"]/form/table[2]/tbody/tr[1]/td/label/input
    Page should contain element    //*[@id="FiltersArea"]/form/table[2]/tbody/tr[2]/td/label/input
    Page should contain element    //*[@id="FiltersArea"]/form/table[2]/tbody/tr[3]/td[1]/label/input
    Page should contain element    //select[@id='DyChartType']
    Page should contain element    //*[@id="DycX"]
    Page should contain element    //*[@id="ys"]
    Page should contain element    //*[@id="DycY"]
    Page should contain element    //*[@id="ye"]
    Page should contain element    //*[@id="cid"]
    Page should contain element    //*[@id="nod"]
    Page should contain element    //*[@id="slo"]
    Page should contain element    //*[@id="FiltersArea"]/form/table[2]/tbody/tr[5]/td/label/input
    log to console    Final score report: page contains default elements

Grab values from OP
    go to.AD    ${URL}/operation-panel.php
    Wait until page contains element    //select[@id='StatusID']
    sleep    1
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button
    Click element    //*[@id="ui-multiselect-ClientID-option-0"]    #select 1st option
    # \ \ \ select dropdown \ \ \ //*[@id="ClientID"] \ \ \ xpath=//li[contains(.,'${RobotTestClient}')]
    ${selected client}=    Get value    //*[@id="ui-multiselect-ClientID-option-0"]
    Log to console    ................OPERATIONAL PANEL............................
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button
    select from list by value    //select[@id='StatusID']    6    #select status 'Approved'
    Input text    //input[@id='start_date']    01-09-2021    #select start date
    sleep    1
    Input text    //input[@id='end_date']    19-09-2021    #select finish date
    ##Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[2]/table/tbody/tr/td/span/button
    ##Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[2]/table/tbody/tr/td/span/button
    #select from list by label    id=ClientID    1    #locate element with visible text: 1
    Wait Until Element Is Visible    //*[@id="FiltersAreaLink"]/a
    sleep    1
    ${client filter}=    Get Element Count    //body/div[5]/ul/li
    Run keyword and ignore error    Click element    //input[@id='show']
    Click element    //input[@id='show']
    Log to console    Selecting client: "${selected client}" (1st in drop list); Reviews status: Approved; Date ranges: 01-09-2021 19-09-2021
    Wait Until Element Is Visible    //input[@id='ShowMessageBox']
    ${IsElementVisible}=    Run Keyword And Return Status    Element Should Be Visible    //input[@id='ApproveCrits']
    Run Keyword If    ${IsElementVisible}    Grab reviews data
    ...    ELSE    Log to console    No reviews found

Edit default footers for outgoing Email messages
    go to.AD    ${URL}/company_default_footers.php
    Wait Until Page Contains    HTML allowed
    Wait Until Page Contains    The following settings allow you to set default footers for outgoing Email messages.
    Wait Until Page Contains    The footer will be automatically added to the bottom of the message.
    Wait Until Page Contains    Email footer for users
    Wait Until Page Contains    Email footer for shoppers
    Wait Until Page Contains    You can set different footers for Shoppers and Users.
    Wait Until Page Contains    Default Email footers
    sleep    2
    ####
    Run Keyword If    ${preprod?} or ${demo?}    Enter editor text.AD    //*[@id="cke_52_label"]    ${Email footer for shoppers}${RF REVN DT}
    ...    ELSE    Enter editor text.AD    //*[@id="cke_61_label"]    ${Email footer for shoppers}${RF REVN DT}
    log to console    1. Typing text into "Email footer for shoppers" field
    ####
    log to console    2. Typing text into "Email footer for users" field and saving the changes
    Run Keyword If    ${preprod?} or ${demo?}    Enter editor text.AD    //*[@id="cke_109_label"]    ${Email footer for users}${RF REVN DT}
    ...    ELSE    Enter editor text.AD    //*[@id="cke_123_label"]    ${Email footer for users}${RF REVN DT}
    ####
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    Footers settings saved successfully
    go to.AD    ${URL}/company_default_footers.php
    Log to console    Email footer for shoppers and users updated and saved
    Page should contain    This is a test "Email footer for shoppers" message. Please ignore it.
    Page should contain    This is a test "Email footer for users" message. Please ignore it.
    Page should contain    Your friendly Mystery Shopping
    Page should contain    https://www.checker-soft.com
    Page should contain    RF REVN DT
    Page should contain    ${DD.MM.YY}
    Page should contain    ENV/SYS
    Page should contain    ________________________________
    ####
    Page should contain    This is a test "Email footer for users" message. Please ignore it.

Grab reviews data
    ${IsElementVisible}=    Run Keyword And Return Status    Element Should Be Visible    //*[@id="table_rows"]/tbody/tr[1]
    Run Keyword If    ${IsElementVisible}    Check if sorting is visible.AD    id="table_rows"
    Execute Javascript    window.document.getElementById("ShowMessageBox").scrollIntoView(true);
    Input text    //*[@id="bundle_name"]    Package 01
    sleep    1
    ${index}    Set Variable    1
    ${element}=    Get Element Count    //*[@id="table_rows"]/tbody/tr
    Set global variable    ${element}
    Click element    //*[@id="table_rows"]/tbody/tr[${element}]/td[1]/input
    log to console    OP shows "${element}" review(s).
    #wait until page contains element
    Click button    default=Select all
    Log to console    "Select all" button is clicked
    #iterate for each row
    Execute Javascript    window.document.getElementById("FiltersAreaLink").scrollIntoView(true);
    FOR    ${rowindex}    IN RANGE    ${element}
        ${rowindex}=    Evaluate    ${rowindex}+1
        ${Result ID}=    set variable    0.00
        Set global variable    ${rowindex}
        sleep    1
        Checkbox should be selected    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[1]/input
        Log to console    Review row "${rowindex}" - checkbox is enabled/true
        ${review ID}=    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[2]
        ${IsElementVisible}=    Run Keyword And Return Status    Element Should Be Visible    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[13]/span/span[2]
        Run Keyword If    ${IsElementVisible}    get result value
        ${Full name}=    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[5]
        ${Client name}=    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[4]
        #Append To List    ${list}    ${review ID}    ${Client name}    ${Result ID}
        @{list}=    Create List    ${review ID}    ${Client name}    ${Full name}    ${Result ID}
        Log to console    № ${rowindex}. Found review with next ID --> ${review ID}; ${list}
        Log to console    ${list}
    END

get result value
    ${IsElementVisible}=    Run Keyword And Return Status    Element Should Be Visible    //*[@id="report_property"]/tbody/tr[${rowindex}]/td[6]
    Run Keyword If    ${IsElementVisible}    get results for reports
    ${IsElementVisible2}=    Run Keyword And Return Status    Element Should Be Visible    //*[@id="table_rows"]/tbody/tr
    Run Keyword If    ${IsElementVisible2}    get results for OP

Reports: Final score - table
    go to.AD    ${URL}/report-property.php
    Log to console    ................FINAL SCORE report............................
    Page should contain element    xpath=//a[@href="main-menu.php"]
    Page should contain element    xpath=//a[@href="menu-reports.php"]
    Page should contain element    xpath=//a[@href="main-menu.php"]
    sleep    1
    Click element    //div[@id='FiltersArea']/form/table[1]/tbody/tr/td[2]/table/tbody/tr[1]/td[2]/table/tbody/tr[1]/td[1]/table/tbody/tr/td/span
    Click element    //body[@class='page-report-property']/div[@class='ui-multiselect-menu ui-widget ui-widget-content ui-corner-all ui-multiselect-single']/ul[@class='ui-multiselect-checkboxes ui-helper-reset']/li[2]    #//body/div[11]/ul/li[2]
    ###
    #select from list by value    //select[@id='StatusID']    6
    Input text    //input[@id='rangeStart']    01-09-2021
    Input text    //input[@id='rangeEnd']    19-09-2021
    Click element    //*[@id="FiltersArea"]/form/table[2]/tbody/tr[1]/td/label/input
    sleep    1
    Click element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[1]/td[2]
    Mouse over    //*[@id="ui-multiselect-ClientID-option-0"]
    Set focus to element    //*[@id="ui-multiselect-ClientID-option-0"]
    sleep    1
    ${selected client}=    get text    //body[@class='page-report-property']/div[@class='ui-multiselect-menu ui-widget ui-widget-content ui-corner-all validate[funcCall[checkAjaxCombo]] ui-multiselect-single']/ul[@class='ui-multiselect-checkboxes ui-helper-reset']/li[@class=' '][1]
    Log to console    Selecting client: "${selected client}" (1st in drop list); Reviews status: Approved; Date ranges: 01-09-2021 19-09-2021
    #select dropdown    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[1]/td[2]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    #Click element    //input[@id='go']
    #click element    //span[contains(.,'Doughnut3D hc')]
    #click element    //div[@id='FiltersArea']/form/input[@id='go']
    Wait Until Element Is Visible    xpath=//a[@href="main-menu.php"]    8
    ${IsElementVisible}=    Run Keyword And Return Status    Element Should Be Visible    //input[@id='rpmsdown']
    Run Keyword If    ${IsElementVisible}    Grab table data (FSR)
    ...    ELSE    Log to console    No reviews found

Grab table data (FSR)
    Open report page and search columns by title
    Click element    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form[1]/p/input[1]
    Log to console    [+] "Select all" button is clicked
    sleep    1
    ${index}    Set Variable    1
    ${elements}=    Get Element Count    //*[@id="report_property"]/tbody/tr
    Set global variable    ${elements}
    log to console    Final Score report shows "${elements}" reviews.
    should be equal    ${elements}    ${element}
    Log to console    [+] Total review q-ty is equal in OP/Final score report("${elements}"/"${element}")
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${elements}
        ${rowindex}=    Evaluate    ${rowindex}+1
        ${Result ID}=    Get Text    //*[@id="report_property"]/tbody/tr[${rowindex}]/td[6]/span/span[2]    #//*[@id="report_property"]/tbody/tr[${rowindex}]/td[5]/span/span[2]
        Set global variable    ${rowindex}
        sleep    1
        Checkbox should be selected    //*[@id="report_property"]/tbody/tr[${rowindex}]/td[1]/input
        Log to console    Review row "${rowindex}" - checkbox is enabled/true +
        ${Short Branch name}=    Get Text    //*[@id="report_property"]/tbody/tr[${rowindex}]/td[2]
        ${IsElementVisible}=    Run Keyword And Return Status    Element Should Be Visible    //*[@id="report_property"]/tbody/tr[${rowindex}]/td[3]/span/span[2]
        #Run Keyword If    ${IsElementVisible}    get result value
        ${review id}=    Get Text    //*[@id="report_property"]/tbody/tr[${rowindex}]/td[6]
        @{report list} =    Create List    ${Result ID}    ${Short Branch name}    ${review id}
        #Run Keyword If    '${actual order description}'=='${test order description} - ${DD.MM.YY}'    Get order ID
        Log to console    Row № ${rowindex}: review ID = "${review id}"; ${report list}
    END
    Log to console    ${report list}

get results for reports
    ${Result ID}=    Get Text    //*[@id="report_property"]/tbody/tr[${rowindex}]/td[6]/span/span[2]
    set global variable    ${Result ID}
    ${RID}=    Get Text    //*[@id="report_property"]/tbody/tr[${rowindex}]/td[7]
    set global variable    ${RID}
    Log to console    ${RID}

get results for OP
    ${Result ID}=    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[13]/span/span[2]
    set global variable    ${Result ID}

Highcharts Automation Using Robotframework
    Maximize Browser Window
    Sleep    5s
    # optional: Sometime jquery is not supported, inject jquery so we can utilize jquery scripts
    Inject Jquery In Website
    # fetch highchart values
    ${x_axis_value}=    Get Highchart Value    high-column2    0    0    x
    ${y_axis_value}=    Get Highchart Value    high-column2    0    0    y
    # log
    Log To Console    X: ${x_axis_value} Y: ${y_axis_value}
    Log    X: ${x_axis_value} Y: ${y_axis_value}
    [Teardown]    Close Browser

Inject Jquery In Website
    Execute Javascript    var jquery_script = document.createElement('script'); jquery_script.src = 'https://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js'; document.getElementsByTagName('head')[0].appendChild(jquery_script);

Get Highchart Value
    [Arguments]    ${id}    ${series_index}    ${data_index}    ${axis}
    Wait Until Page Contains Element    id:${id}
    ${value}=    Execute Javascript    return $('\#${id}').highcharts().series[${series_index}].data[${data_index}].${axis}
    [Return]    ${value}

Open report page and search columns by title
    Check errors on page [-1]
    Check if sorting is visible.AD    id="report_property"
    ${id}=    Set variable    1
    ${index}    Set Variable    1
    ${Rows} =    Get Element Count    //*[@id="report_property"]/thead/tr/th    #how many order rows(columns) do we have
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${Rows}
        ${Column Title}=    Get text    //*[@id="report_property"]/thead/tr/th[${id}]
        Log    ${Column Title}
        #Set global variable    ${id}
        Run Keyword If    '${Column Title}'=='Status'    Assign column ID    ${id}
        Run Keyword If    '${Column Title}'=='Select'    Set Select column ID    ${id}
        Run Keyword If    '${Column Title}'=='Questionnaire name'    Set QryName column ID    ${id}
        Run Keyword If    '${Column Title}'=='Begin scorecard'    Set Begin column ID    ${id}
        Run Keyword If    '${Column Title}'=='Description'    Set Description column ID    ${id}
        Run Keyword If    '${Column Title}'=='Full name'    Set FullName column ID    ${id}
        Run Keyword If    '${Column Title}'=='Score'    Set Result column ID    ${id}
        Run Keyword If    '${Column Title}'=='Actual points'    Set Actual points column ID    ${id}
        Run Keyword If    '${Column Title}'=='Possible points'    Set Possible points column ID    ${id}
        Run Keyword If    '${Column Title}'=='Show entire scorecard'    Set Show entire scorecard column ID    ${id}
        Run Keyword If    '${Column Title}'=='Show scorecard report'    Show scorecard report column ID    ${id}
        Run Keyword If    '${Column Title}'=='Download'    Set Download column ID    ${id}
        ${id}=    Evaluate    ${id}+1
        sleep    1
    END

Get column titles.AD
    [Arguments]    ${Order Table}    ${Rows}
    @{columns}    Get Webelements    //*[@id="report_property"]/thead/tr/th
    ${columns count} =    Get Element Count    //*[@id="report_property"]/thead/tr/th
    ${id}=    Set variable    1
    FOR    ${column}    IN    @{columns}
    ${Column Title}=    Get text    //*[@id="report_property"]/thead/tr/th[${id}]
    Log    ${Column Title}
    #Set global variable    ${id}
    Run Keyword If    '${Column Title}'=='Status'    Assign column ID    ${id}
    Run Keyword If    '${Column Title}'=='Select'    Set Select column ID    ${id}
    Run Keyword If    '${Column Title}'=='Questionnaire name'    Set QryName column ID    ${id}
    Run Keyword If    '${Column Title}'=='Begin scorecard'    Set Begin column ID    ${id}
    Run Keyword If    '${Column Title}'=='Description'    Set Description column ID    ${id}
    Run Keyword If    '${Column Title}'=='Actual points'    Set Actual points column ID    ${id}
    Run Keyword If    '${Column Title}'=='Full name'    Set FullName column ID    ${id}
    ${id}=    Evaluate    ${id}+1

Set Result column ID
    [Arguments]    ${id}
    ${ResultCOLID}=    Convert To Integer    ${id}
    Set global variable    ${ResultCOLID}
    Log to console    Order ResultCOLID -----> ${ResultCOLID}

Set Actual points column ID
    [Arguments]    ${id}
    ${ActualpointsCOLID}=    Convert To Integer    ${id}
    Set global variable    ${ActualpointsCOLID}
    Log to console    ActualpointsCOL ID -----> ${ActualpointsCOLID}

Set Show entire scorecard column ID
    [Arguments]    ${id}
    ${Show entire scorecard COLID}=    Convert To Integer    ${id}
    Set global variable    ${Show entire scorecard COLID}
    Log to console    Show entire scorecard COLID -----> ${Show entire scorecard COLID}

Set Possible points column ID
    [Arguments]    ${id}
    ${PossiblepointsCOLID}=    Convert To Integer    ${id}
    Set global variable    ${PossiblepointsCOLID}
    Log to console    Possible points COL ID -----> ${PossiblepointsCOLID}

Show scorecard report column ID
    [Arguments]    ${id}
    ${Show scorecard report COL ID}=    Convert To Integer    ${id}
    Set global variable    ${Show scorecard report COL ID}
    Log to console    Show scorecard report COLID -----> ${Show scorecard report COL ID}

Set Download column ID
    [Arguments]    ${id}
    ${Download COLID}=    Convert To Integer    ${id}
    Set global variable    ${Download COLID}
    Log to console    Download COLID -----> ${Download COLID}

Set assessors self registration options
    go to.AD    ${URL}/company_shopper_reg.php
    log to console    Set self registration options:
    Wait until page contains element    //input[@id='field_AllowCheckerSelfReg']
    Set checkbox.AD    //input[@id='field_CrrUpdateBySms']    False
    ####
    Set checkbox.AD    //input[@id='field_CrrUpdateByEmail']    true
    ####
    click element    //tr[@id='tr_PostRegistrationCertification']/td[@id='idPostRegistrationCertificationEditbox']/table/tbody/tr/td/span
    set focus to element    xpath=//li[contains(.,'None')]
    click element    xpath=//li[contains(.,'None')]
    ${active status}=    Get Element Attribute    //input[@id='field_AllowCheckerSelfReg']    checked
    Run keyword if    '${active status}'=='None'    Click element    //input[@id='field_AllowCheckerSelfReg']
    sleep    1
    ${checked}=    checkbox should be selected    //input[@id='field_AllowCheckerSelfReg']
    log to console    "AllowCheckerSelfReg"=Yes
    ####
    ${active status}=    Get Element Attribute    //input[@id='field_CheckerRegistrationCaptcha']    checked
    Run keyword if    '${active status}'=='true'    Click element    //input[@id='field_CheckerRegistrationCaptcha']
    sleep    1
    ${checked}=    Checkbox Should Not Be Selected    //input[@id='field_CheckerRegistrationCaptcha']
    log to console    "CheckerRegCaptcha"=No
    ####
    ${Auto approve self registered}=    Get Element Attribute    //input[@id='field_AutoApproveSelfReg']    checked
    Run keyword if    '${Auto approve self registered}'=='true'    Click element    //input[@id='field_AutoApproveSelfReg']
    ${checked}=    checkbox should not be selected    //input[@id='field_AutoApproveSelfReg']
    log to console    "AutoApproveSelfReg"=No
    ####
    input text    //input[@id='field_ProfileCompletionRequired']    0
    log to console    "field_ProfileCompletionRequired"=0
    ####
    ${Can edit availability regions during registration}=    Get Element Attribute    //input[@id='field_CheckerDEF_NewCheckerCanEditRegions']    checked
    Run keyword if    '${Can edit availability regions during registration}'=='true'    Click element    //input[@id='field_CheckerDEF_NewCheckerCanEditRegions']
    ${checked}=    checkbox should not be selected    //input[@id='field_CheckerDEF_NewCheckerCanEditRegions']
    log to console    "Can edit availability regions during registration"='No'
    input text    //input[@id='field_ProfileCompletionRequired']    0
    ####
    Page should contain element    //tr[@id='tr_AvoidDuplicatesFields']
    Page should contain element    //input[@id='field_AutoApproveSelfReg']
    Page should contain element    //td[@id='idPostRegistrationCertificationEditbox']
    Page should contain element    //input[@id='field_ProfileCompletionRequired']
    Page should contain element    //td[@id='idProfileCompletionRequiredEditbox']
    Page should contain element    //input[@id='field_DaysToCompleteRegistration']
    #Page should contain element    //div[@id='slider-range-field_DaysToCompleteRegistration']
    Page should contain element    //input[@id='field_DefaultAvailabilityRadious']
    Page should contain element    //td[@id='idDefaultAvailabilityRadiousEditbox']
    Page should contain element    //input[@id='field_CheckerDEF_NewCheckerCanEditRegions']
    Page should contain element    //td[@id='idSelfRegCityFieldTypeEditbox']
    Page should contain element    //input[@id='field_CheckerRegistrationCaptcha']
    # \ \ \ Wait until page contains element \ \ \ //*[@id="cke_1_contents"]/iframe
    # \ \ \ Page should contain element \ \ \ //*[@id="cke_1_contents"]/iframe
    Page should contain element    //td[@id='idCrrUserLinkEditbox']
    Page should contain element    //input[@id='field_CrrUpdateBySms']
    Page should contain element    //input[@id='field_CrrUpdateByEmail']
    # \ \ \ Page should contain element \ \ \ //input[@id='field_CheckerWelcomeSubj']
    # \ \ \ Page should contain element \ \ \ //*[@id="cke_field_CheckerWelcomeMsg"]
    Page should contain element    //*[@id="cke_field_RegistrationProcessCompleteMessage"]
    Page should contain element    xpath=//a[@href="company-checker-disp.php"]
    Page should contain element    xpath=//a[@href="company-agreements.php"]
    Page should contain element    xpath=//a[@href="checker-props.php"]
    Page should contain element    xpath=//a[@href="table-fields.php"]
    Page should contain element    xpath=//a[@href="checkers.php?page_var_filter_IsActive=0&page_var_filter_IsSelfRegistered=1"]
    ####
    Click element    //*[@id="idAvoidDuplicatesFieldsEditbox"]/table/tbody/tr/td/span/button
    Click element    //body[@class='page-company_shopper_reg']/div[@class='ui-multiselect-menu ui-widget ui-widget-content ui-corner-all']/div[@class='ui-widget-header ui-corner-all ui-multiselect-header ui-helper-clearfix ui-multiselect-hasfilter']/ul[@class='ui-helper-reset']/li[1]/a[@class='ui-multiselect-all']/span[2]
    ####
    log to console    Saving the changes${\n}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Shopper registration settings saved successfully

Self register of new shopper.SD
    [Arguments]    ${RobotTestShopper}    ${Robot country}    ${Robot region}    ${Robot city}    ${Email}    ${mobile}
    Wait until page contains element    //input[@id='field_password']
    Set focus to element    //input[@id='field_password']
    Check registration message
    Log to console    FILLING REGISTRATION FORM...please wait:
    Run keyword and ignore error    Input Text    //input[@id='field_fullname_Family name']    ${RobotTestShopper}
    Run keyword and ignore error    Input Text    //input[@id='field_fullname']    ${RobotTestShopper}
    log to console    Enter "${RobotTestShopper}" as fullname
    Run keyword and ignore error    Input Text    //input[@id='field_fullname_First name']    ${RobotTestShopper}
    Run keyword and ignore error    Input Text    //input[@id='field_696_First Name (Katakakana)']    ${RobotTestShopper}
    Run keyword and ignore error    Input Text    //input[@id='field_username']    ${RobotTestShopper}
    #
    Run keyword and ignore error    Input Text    //input[@id='field_BirthDated']    01
    Run keyword and ignore error    Input Text    //input[@id='field_BirthDatem']    01
    Run keyword and ignore error    Input Text    //input[@id='field_BirthDatey']    2015
    ###
    Input Text    //input[@id='field_password']    ${RobotTestShopper}
    Input Text    //input[@id='field_password2']    ${RobotTestShopper}
    log to console    Enter "${RobotTestShopper}" as password (+same value as a confirm password)
    log to console    Selecting Country as "${Robot country}"; address="NY"; ZIP="00067", mobile="${mobile}" Email="${Email}"
    Select dropdown.AD    //*[@id="idTimeZoneEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Europe/Kiev')]
    Input Text    //input[@id='field_Address']    NY
    Input Text    //input[@id='field_Zipcode']    860001
    Input Text    //input[@id='field_Phone']    ${mobile}
    Run keyword and ignore error    Input Text    //input[@id='field_Phone2']    ${mobile}
    Run keyword and ignore error    Input Text    //input[@id='field_Phone3']    ${mobile}
    Run keyword and ignore error    Input Text    //input[@id='field_IdNumber']    ${RobotTestShopper}
    Run keyword and ignore error    Input Text    //input[@id='field_SSN']    ${RobotTestShopper}
    Run keyword and ignore error    Input Text    //input[@id='field_ICQ']    ${RobotTestShopper}
    Run keyword and ignore error    Input Text    //input[@id='field_Skype']    ${RobotTestShopper}
    Run keyword and ignore error    Input Text    //input[@id='field_Messenger']    ${RobotTestShopper}
    Input Text    //input[@id='field_Email']    ${Email}
    Input Text    //input[@id='field_Email2']    ${Email}
    #
    #########
    Run keyword and ignore error    Choose File    name=mediaFile    ${CURDIR}\\Extra files\\Images\\UsersIcon.png
    #########
    Execute JavaScript    window.document.getElementById("field_password2").scrollIntoView(true)
    Select country/region/city.AD

Enter not valid registration values
    sleep    1
    log to console    Let`s enter not valid data for CF
    Click element    //input[@id='field_${Test Custom Field4 ID}']
    Click element    //*[@id="ui-datepicker-div"]/div[2]/button[1]
    #Click element    //input[@id='addnew']
    Click element    //input[@id='field_${Test Custom Field4 ID}']
    Click element    //input[@id='field_Email']
    set focus to element    //input[@id='field_${Test Custom Field7 ID}']
    sleep    1
    select checkbox    //input[@id='field_${Test Custom Field7 ID}']
    log to console    ${Test Custom Field7} select checkbox
    Page should contain    This field is required
    Input text    //input[@id='field_${Test Custom Field5 ID}']    06:00
    log to console    Input text    //input[@id='field_${Test Custom Field5 ID}']    06:00
    Input text    //input[@id='field_${Test Custom Field1 ID}']    10
    log to console    Input text    //input[@id='field_${Test Custom Field1 ID}']    10
    Input text    //input[@id='field_${Test Custom Field2 ID}']    Text line content
    log to console    Input text    //input[@id='field_${Test Custom Field2 ID}']    Text line content
    Input text    //textarea[@id='field_${Test Custom Field3 ID}']    Text block
    log to console    Input text    //textarea[@id='field_${Test Custom Field3 ID}']    Text block
    Input text    //tr[@id='tr_${Test Custom Field6 ID}']/td[@id='id${Test Custom Field6 ID}Editbox']/input    ${mobile}
    log to console    Input text    //tr[@id='tr_${Test Custom Field6 ID}']/td[@id='id${Test Custom Field6 ID}Editbox']/input    ${mobile}
    Input text    //input[@id='field_${Test Custom Field4 ID}']    ${DD.MM.YY}
    log to console    Input text    //input[@id='field_${Test Custom Field4 ID}']    ${DD.MM.YY}
    Input text    //input[@id='field_${Test Custom Field1 ID}']    Only number are allowed here, text value is not valid for this type
    log to console    Input text    //input[@id='field_${Test Custom Field1 ID}']    some text goes here
    #Click element    //input[@id='addnew']
    #go back
    Self register of new shopper.SD    ${random string}    ${Robot country 01}    ${Robot region 01}    ${Robot city 01}    ${random string}@gmail.com    ${mobile}
    sleep    1
    wait until element is visible    //input[@id='field_${Test Custom Field7 ID}']
    Set focus to element    //input[@id='field_${Test Custom Field7 ID}']
    Mouse down    //input[@id='field_${Test Custom Field7 ID}']
    select checkbox    //input[@id='field_${Test Custom Field7 ID}']
    Input text    //input[@id='field_${Test Custom Field2 ID}']    Text line content goes here
    Input text    //textarea[@id='field_${Test Custom Field3 ID}']    Text block: only 10 characters are allowed for this type of CF, but we entered more than 10
    Input text    //tr[@id='tr_${Test Custom Field6 ID}']/td[@id='id${Test Custom Field6 ID}Editbox']/input    some text goes here
    #Click element    //input[@id='addnew']
    Choose File    //tr[@id='tr_${Test Custom Field8 ID}']/td[@id='id${Test Custom Field8 ID}Editbox']/input[7]    c:\\RobotTests2021\\Extra files\\Css\\RobotShopperCSS.css
    sleep    1
    Input text    //input[@id='field_${Test Custom Field5 ID}']    abc
    Set focus to element    //input[@id='addnew']
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Wait until page contains element    //input[@id='addnew']
    Click element    //input[@id='addnew']
    Check errors on page [-1]
    sleep    1
    #Page should contain    10
    #Page should contain    05 - RF CF [Time, mandatory, visible on regis] - what time will be actual for your expectations? - Not filled
    Page should contain    Text too long (maximum length: 10)    #${Test Custom Field3} - Text too long (maximum length: 10)
    Page should contain    ${Test Custom Field3} - Text too long (maximum length: 10)    #${Test Custom Field1} - Not a number:
    log to console    ${Test Custom Field1} - Not a number:
    log to console    "${Test Custom Field3} - Text too long (maximum length: 10)" message can be seen
    log to console    "${Test Custom Field1} - Not a number:" message can be seen
    go back

Enter valid registration values
    sleep    1
    set focus to element    //input[@id='field_${Test Custom Field7 ID}']
    select checkbox    //input[@id='field_${Test Custom Field7 ID}']
    Set focus to element    //input[@id='field_${Test Custom Field4 ID}']
    Click element    //input[@id='field_${Test Custom Field4 ID}']
    Click element    //*[@id="ui-datepicker-div"]/div[2]/button[1]
    sleep    1
    Page should contain    This field is required
    Log to console    Page contains message: "This field is required" if required field is not filled
    Input text    //input[@id='field_${Test Custom Field5 ID}']    06:00
    Input text    //input[@id='field_${Test Custom Field1 ID}']    10
    Input text    //input[@id='field_${Test Custom Field2 ID}']    Text line content
    Input text    //textarea[@id='field_${Test Custom Field3 ID}']    Text block
    Input text    //tr[@id='tr_${Test Custom Field6 ID}']/td[@id='id${Test Custom Field6 ID}Editbox']/input    ${mobile}
    Choose File    //tr[@id='tr_${Test Custom Field8 ID}']/td[@id='id${Test Custom Field8 ID}Editbox']/input[7]    c:\\RobotTests2021\\Extra files\\Css\\RobotShopperCSS.css
    #Input text    //input[@id='field_${Test Custom Field4 ID}']    ${DD.MM.YY}
    Input text    //input[@id='field_${Test Custom Field4 ID}']    10:00
    Check errors on page [-1]
    Click element    //input[@id='addnew']
    Check positive registration result message
    Page should contain    Thank you
    log to console    Registration is completed properly.

Check registered user in admin panel
    log to console    Let`s check data of created user in AD
    go to.AD    ${URL}/checkers.php?page_var_filter_IsActive=0&page_var_filter_BlackListed=0&page_var_filter_IsSelfRegistered=1&page_var_filter_RegionName=0&page_var_filter_CityName_Cou=&page_var_filter_CityName_Reg=&page_var_filter_CityName=&page_var_filter_Fullname=&page_var_filter_Email=RF-${random string}@gmail.com&update=Please+wait&page_var_sorting_column=Fullname&page_var_sorting_order=up&page_var_divide_recordsPerPage=50&page_var_divide_curPage=1&s=0_2_4_17_21&cc=1
    log to console    ${URL}/checkers.php?page_var_filter_IsActive=0&page_var_filter_BlackListed=0&page_var_filter_IsSelfRegistered=1&page_var_filter_RegionName=0&page_var_filter_CityName_Cou=&page_var_filter_CityName_Reg=&page_var_filter_CityName=&page_var_filter_Fullname=&page_var_filter_Email=RF-${random string}@gmail.com&update=Please+wait&page_var_sorting_column=Fullname&page_var_sorting_order=up&page_var_divide_recordsPerPage=50&page_var_divide_curPage=1&s=0_2_4_17_21&cc=1
    Page should contain element    //table[@id='table_rows']/tbody/tr[@class='db1']/td[@class='db-firstcol']
    ${email}=    get text    //table[@id='table_rows']/tbody/tr[@class='db1']/td[@class='db-ltr'][5]
    Should Be Equal    ${email}    RF-${random string}@gmail.com
    ${active?}=    get text    //table[@id='table_rows']/tbody/tr[@class='db1']/td[@class='db-ltr'][2]
    Should Be Equal    ${active?}    No
    ${mobile phone}=    get text    //table[@id='table_rows']/tbody/tr[@class='db1']/td[@class='db-ltr'][4]
    Should Be Equal    ${mobile phone}    ${mobile}
    ${username}=    get text    //table[@id='table_rows']/tbody/tr[@class='db1']/td[@class='db-ltr'][1]
    Should Be Equal    ${username}    RF-${random string}
    Log to console    User self registration is finished with next details: username: "${username}"; email: "${email}"; active: "${active?}"

Set CF variables
    ${Test Custom Field1}=    set variable    RFCF01.Number [Shoppers]
    set global variable    ${Test Custom Field1}
    ${Test Custom Field2}=    set variable    RFCF02.Text line [Shoppers]
    set global variable    ${Test Custom Field2}
    ${Test Custom Field3}=    set variable    RFCF03.Text block [Shoppers]
    set global variable    ${Test Custom Field3}
    ${Test Custom Field4}=    set variable    RFCF04.Date [Shoppers]
    set global variable    ${Test Custom Field4}
    ${Test Custom Field5}=    set variable    RFCF05.Time [Shoppers]
    set global variable    ${Test Custom Field5}
    ${Test Custom Field6}=    set variable    RFCF06.Phone [Shoppers]
    set global variable    ${Test Custom Field6}
    ${Test Custom Field7}=    set variable    RFCF07.Checkbox [Shoppers]
    set global variable    ${Test Custom Field7}
    ${Test Custom Field8}=    set variable    RFCF08.Fileupload [Shoppers]
    set global variable    ${Test Custom Field8}

select q-ry type / Shopper
    Select dropdown.AD    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span    xpath=//li[contains(.,'Shoppers')]
    Click element    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button
    Click element    xpath=//li[contains(.,'${RobotTestClient}')]

select q-ry type / Certificate
    #select type
    click element    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span
    set focus to element    xpath=//li[contains(.,'Certificate')]
    click element    xpath=//li[contains(.,'Certificate')]
    #Based on questionnaire \
    click element    //*[@id="idDependencySetLinkEditbox"]/table/tbody/tr/td
    #click element    xpath=//li[contains(.,'Robot q-ry 001 [Certificate]')]
    click element    //input[@id='field_IsAvailableToAllClients']
    click element    //input[@id='field_AutomaticApproval']

Search q-ry ID
    ${index}=    set variable    1
    ${page index}=    set variable    1
    go to.AD    ${URL}/sets.php?page_var_divide_recordsPerPage=20&page_var_divide_curPage=${index}=&page_var_sorting_column=SetName&page_var_sorting_order=up&page_var_filter_IsActive=1&page_var_filter_ClientName=&page_var_filter_SetTypeLink=5&popup=&Update=Please+wait
    #Run Keyword If    '${all pages}'=='0'    ${all pages}    Evaluate    ${all pages}+1
    FOR    ${row}    IN RANGE    15
    Log to console    Searching "${Robot q-ry 001}". \n\ n Please wait!
    ${СА name present?}=    Run Keyword And Return Status    Page should contain    ${Robot q-ry 001}
    Run Keyword If    '${СА name present?}'=='True'    click link    default=${Robot q-ry 001}
    Run Keyword If    '${СА name present?}'=='True'    exit for loop
    ${index}=    Evaluate    ${index}+1
    ${next page present?}=    Run Keyword And Return Status    Page should contain element    //td[@class='second-align']/a[@class='db-pageNumber'][${page index}]
    Run Keyword If    '${next page present?}'=='False'    exit for loop
    log to console    Navigating to page №${page index}
    ${page index}=    Evaluate    ${page index}+1
    Run Keyword If    '${next page present?}'=='True'    Go to    ${URL}/sets.php?page_var_divide_recordsPerPage=20&page_var_divide_curPage=${index}=&page_var_sorting_column=SetName&page_var_sorting_order=up&page_var_filter_IsActive=1&page_var_filter_ClientName=&page_var_filter_SetTypeLink=5&popup=&Update=Please+wait
    ${element present?}=    Run Keyword And Return Status    Page should contain    ${Robot q-ry 001}
    Run Keyword If    '${element present?}'=='False'    Create new questionnaire    Robot q-ry 001 [Certificate]
    click link    default=Print questionnaire
    Wait until page contains    Print questionnaire: Robot q-ry 001 [Certificate]
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${found ID}=    Fetch From Right    ${Pageurl}    =
    log to console    Found ${Robot q-ry 001} (ID: ${found ID})
    set global variable    ${found ID}
    go to.AD    ${URL}/setedit-frameset.php?SetID=${found ID}
    Page should contain    ${Robot q-ry 001}

Edit q-ry [Certificate]
    [Arguments]    ${code}

Search Certificate
    [Arguments]    ${Robot Certificate}
    ${index}=    set variable    1
    go to.AD    ${URL}/certificates.php?page_var_divide_recordsPerPage=300&page_var_divide_curPage=${index}&page_var_sorting_column=CertificateName&page_var_sorting_order=up&page_var_filter_IsActive=&Update=Please+wait
    FOR    ${row}    IN RANGE    1
        Log to console    Searching "${Robot Certificate}". Please wait!
        ${element present?}=    Run Keyword And Return Status    Page should contain    ${Robot Certificate}
        Run Keyword If    '${element present?}'=='True'    click link    default=${Robot Certificate}
        Run Keyword If    '${element present?}'=='True'    exit for loop
        ${index}=    Evaluate    ${index}+1
        Run Keyword If    '${element present?}'=='False'    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    END
    Create/Update Certificate.AD    ${Robot Certificate}    ${Robot Description Certificate} ${RF REVN DT}
    go to.AD    ${URL}/set-auto-allow-access.php?CertificateID=${found ID}
    ${CertID}    Set variable    ${found ID}
    Set global variable    ${CertID}
    log to console    Validating authorized q-ry... [Cert ID: ${CertID}]
    @{elements}    Get List Items    //*[@id="side_menu"]/tbody/tr/td[3]/center/form/table/tbody/tr/td[3]/select
    #iterate for each row
    FOR    ${element}    IN    @{elements}
        Log to console    Authorized --> "${element}"
        Log    '${element}' vs '${Robot q-ry}'
        Return from keyword if    '${element}'=='${Robot q-ry}'
    END
    log to console    Granting the access ...
    #Click element    //form[1]/table/tbody/tr/td[1]
    Log to console    "${Robot q-ry}" has no auto access
    Check errors on page [-1]
    #Click element    //*[@id="side_menu"]/tbody/tr/td[3]/center/form/table/tbody/tr/td[1]
    Scroll element into view    //*[contains(text(), '${Robot q-ry}')]
    select from list by label    //*[@id="side_menu"]/tbody/tr/td[3]/center/form/table/tbody/tr/td[1]/select    ${Robot q-ry}
    sleep    1
    Click element    //table[@id='side_menu']/tbody/tr/td[@class='middle-right']/center/form/table/tbody/tr/td[2]/input[2]
    Click Save/Add/Delete/Cancel button.AD
    Validate value (text)    //*[@id="side_menu"]/tbody/tr/td[3]/center/form/table/tbody/tr/td[3]/select    ${Robot q-ry}
    Log to console    Access for "${Robot q-ry}" has been granted

Create/Update Certificate.AD
    [Arguments]    ${Robot Certificate}    ${Robot Description Certificate}
    wait until page contains element    //input[@id='field_CertificateName']
    Input text    //input[@id='field_CertificateName']    ${Robot Certificate}
    Set checkbox.AD    //input[@id='field_IsActive']    true
    Set checkbox.AD    //input[@id='field_HideInCheckersList']    true
    scroll element into view    //*[@id="idDependencySetLinkEditbox"]/table/tbody/tr/td/span/button
    click element    //*[@id="idDependencySetLinkEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //*[@id="idDependencySetLinkEditbox"]/table/tbody/tr/td/span/button
    scroll element into view    xpath=//li[contains(.,'${Robot q-ry}')]
    click element    xpath=//li[contains(.,'${Robot q-ry}')]
    Input text    //input[@id='field_CertificateCode']    RF-CERT-001
    Input text    //input[@id='field_AddPriorityPoints']    0
    Input text    //input[@id='field_DependencySetGrade']    0
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_51_label"]    ${Robot Description Certificate}
    Run keyword and ignore error    Enter editor text.AD    id=cke_57_label    ${Robot Description Certificate}
    Click Save/Add/Delete/Cancel button.AD
    wait until page contains    successfully
    go to.AD    ${URL}/certificates.php
    click link    default=${Robot Certificate}
    Get ID from ad bar.AD    &edit=    &page_var_sorting_column
    Log to console    "${Robot Certificate}" has been created/updated (ID:"${found ID}")

Search shopper and set assessor display settings.AD
    [Arguments]    ${RobotTestShopper}
    ${index}=    Set variable    1
    FOR    ${i}    IN RANGE    3
    Check errors on page [-1]
    Search Element.AD    ${RobotTestShopper}    ${Checker Table ID}
    Run Keyword If    ${ItemIsNotVisible}    Add new shopper.AD    ${RobotTestShopper}    ${Robot country 01}    ${Robot region 01}
    ${Robot city 01}
    Run Keyword If    ${ItemIsVisible}    Set assessor display settings.AD    false    # put here expected status for checkboxes (false or true)
    ${index}=    Evaluate    ${index}+1
    Log    try    # ${index}.

Set assessor display settings.AD
    [Arguments]    ${expected status}
    go to.AD    ${URL}/company-checker-disp.php
    Log to console    Open ${URL}/company-checker-disp.php
    Wait until page contains element    //input[@id='field_CheckerDEF_IsTelephonic']
    Page should contain    Define default options for new shoppers
    Log to console    Enable all options at "Define default options for new interviewers" section
    ####
    Set checkbox.AD    //input[@id='field_CheckerDEF_IsTelephonic']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSearch']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanAdd']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSearch']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanInitiateCrit']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanInitiateCrit']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_AutomaticCritApproval']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_AutomaticCritApproval']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_ConfirmAssignment']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_ConfirmAssignment']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyBySms']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyBySms']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyByEmail']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyByEmail']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditAvailability']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditAvailability']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditSelfInfo']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditSelfInfo']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeSetsPreview']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeSetsPreview']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeCritHistory']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeCritHistory']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_UseVAT']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_UseVAT']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeRefundReport']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeRefundReport']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanAddRefundRecords']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanAddRefundRecords']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditRegions']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditRegions']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeBranchAddresses']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeBranchAddresses']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanApplyForOrders']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanApplyForOrders']    ${expected status}
    ####
    Set checkbox.AD    //input[@id='field_CheckerSEF_Fullname']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Password']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_z_Picture']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_CityName']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Address']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_HouseNumber']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Zipcode']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_ZipcodeAdditional']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_AvailabilityRadious']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Phone']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Phone2']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Phone3']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_VOIPPhone']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Email']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_BirthDate']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_IdNumber']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_SSN']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Skype']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_ICQ']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Messenger']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_z_Properties']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Remove_me']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCanDeletePersonalData']    ${expected status}
    ###
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_CritID']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_FinishTime']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_ActualFinishTime']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_ClientName']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_BranchName']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_SetName']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_Status']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_Result']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_QaGradeAdjusted']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_QaDoneByUser']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_QaNote']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_LinkedMoneySum']    ${expected status}
    Check errors on page [-1]
    Click element    //input[@id='save']
    Wait until page contains    display settings saved successfully

Set Records per page
    [Arguments]    ${expected records on page}
    go to.AD    ${URL}/company-display.php
    Log to console    Let`s set the "Records per page" option to --> "${expected records on page}"
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Input text    //input[@id='field_RecordsPerPage']    ${expected records on page}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Display settings saved successfully
    # checking results
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Validate value (value)    //input[@id='field_RecordsPerPage']    ${expected records on page}
    Log to console    "Records per page" option is set to --> "${expected records on page}"

Set date format.AD
    [Arguments]    ${Date format}
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Log to console    Let`s set the Date format option to "${Date format}"
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    click element    //*[@id="idDateFormatEditbox"]/table/tbody/tr/td/span/button
    click element    xpath=//li[contains(.,'${Date format}')]    #Date format
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Display settings saved successfully
    ###
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    ${actual result}=    Get text    //*[@id="idDateFormatEditbox"]/table/tbody/tr/td/span/button
    Should Be Equal    ${actual result}    ${Date format}
    Log to console    Date format is set to --> '${Date format}'

Set fraction digits.AD
    [Arguments]    ${exp result}
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Log to console    let`s set number of fraction digits to --> "${exp result}" ${\n}
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Input text    //input[@id='field_FractionDigitsToShow']    ${exp result}    #Display this number of fraction digits
    ${act result}=    Get Element Attribute    //input[@id='field_FractionDigitsToShow']    value
    Should Be Equal    ${act result}    ${exp result}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Display settings saved successfully
    ###
    go to.AD    ${URL}/company-display.php
    ${act result}=    Get Element Attribute    //input[@id='field_FractionDigitsToShow']    value
    Should Be Equal    ${act result}    ${exp result}
    Log to console    Display this number of fraction digits is set to --> "${act result}" ${\n}
    Set global variable    ${exp result}
    Check fraction digits.AD

Set graph colors.AD
    [Arguments]    ${empty graph color}    ${full graph color}    ${Chart series color}
    go to.AD    ${URL}/company-display.php
    Log to console    Opening ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    #${color}=    transform RGB to HEX    ${Chart series color}
    Log to console    Let`s set colors for full and empty graphs --> ${full graph color}; ${empty graph color}
    Select color.AD    //*[@id="idSimpleGraphFullColorEditbox"]/table/tbody/tr/td/div/div[1]/div    ${full graph color}    #Set full graph color
    Select color.AD    //*[@id="idSimpleGraphEmptyColorEditbox"]/table/tbody/tr/td/div/div[1]/div    ${empty graph color}    #Set empty graph color
    Input text    //*[@id="field_ChartSeriesColor"]    ${Chart series color}    #Set Chart series colors here
    Click Save/Add/Delete/Cancel button.AD
    ###
    go to.AD    ${URL}/company-display.php
    Validate style.AD    //*[@id="idSimpleGraphFullColorEditbox"]/table/tbody/tr/td/div/div[1]/div    background-color: ${full graph color};
    Validate style.AD    //*[@id="idSimpleGraphEmptyColorEditbox"]/table/tbody/tr/td/div/div[1]/div    background-color: ${empty graph color};
    set focus to element    //*[@id="field_ChartSeriesColor"]
    ${actual Chart series color}=    Get text    id=field_ChartSeriesColor
    Should Be Equal    ${actual Chart series color}    ${Chart series color}
    Log to console    ${\n}Done. Graph colors are set to --> full graph = ${full graph color} -> green color; empty graph = ${empty graph color} ->red color.

Set "The day in which the week starts".AD
    [Arguments]    ${exp result}
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Log to console    Let`s set "The day in which the week starts" set to --> "${exp result}" (page: ${URL}/company-display.php)
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    click element    //*[@id="idWeekStartsAtEditbox"]/table/tbody/tr/td/span/button
    click element    xpath=//li[contains(.,'${exp result}')]
    Click element    //input[@id='save']
    Check errors on page [-1]
    ###
    go to.AD    ${URL}/company-display.php
    ${act result}=    Get Text    id=idWeekStartsAtEditbox
    Should Be Equal    ${act result}    ${exp result}
    Log to console    "The day in which the week starts" set to --> "${act result}"

Set "Time format".AD
    [Arguments]    ${exp result}
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Log to console    Let`s set "Time format" to --> ${exp result}
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    click element    //*[@id="idTimeFormatEditbox"]/table/tbody/tr/td/span/button
    click element    xpath=//li[contains(.,'${exp result}')]
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Display settings saved successfully
    ###
    Log to console    Checking if setting is saved properly...
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //*[@id="idTimeFormatEditbox"]/table/tbody/tr/td/span/button
    ${act result}=    Get Text    //*[@id="idTimeFormatEditbox"]/table/tbody/tr/td/span/button
    Should Be Equal    ${act result}    ${exp result}
    Log to console    "Time format" is set to --> ${act result}

Set "General information".AD
    go to.AD    ${URL}/company-info.php
    Wait until page contains element    //input[@id='field_CompanyTitle']
    Log to console    --- Let`s set General Information
    Input text    //input[@id='field_CompanyTitle']    ${GENERAL INFO: company name} [${URLIndex} system]
    Input text    //input[@id='field_Email']    info-${URL1index}-system@checker-soft.com
    Input text    //input[@id='field_Phone']    ${GENERAL INFO: company phone}
    Input text    //input[@id='field_SmsSourcePhone']    888
    Input text    //input[@id='field_DefaultExitAddress']    ${URL}/login.php
    Input text    //input[@id='field_Address']    ${GENERAL INFO: company address} | RF REVN DT: ${DD.MM.YY} - ${HH:MM} | © 2005-2022
    Input text    //input[@id='field_Fax']    ${GENERAL INFO: company phone} (fax)
    Input text    //input[@id='field_InternationalCallingCode']    +9
    Input text    //input[@id='field_CaptchaCode']    6Ldb7FMUAAAAAPd33_famKMEkmSNjqcqg7UNwYv-
    Input text    //input[@id='field_CaptchaSecret']    6Ldb7FMUAAAAAFne160sQwBKJ9FIy0-ZHNwJHfWb
    Click element    //input[@id='save']
    go to.AD    ${URL}/company-info.php
    Wait until page contains element    //input[@id='field_CompanyTitle']
    ${Captcha status}    Get Element Attribute    //input[@id='field_LoginCaptcha']    checked
    Log    ${Captcha status}
    Run keyword if    '${Captcha status}'=='true'    Unselect Checkbox    //input[@id='field_LoginCaptcha']
    ${status}    checkbox should not be selected    //input[@id='field_LoginCaptcha']
    Mouse down    name=favicon
    Choose File    name=favicon    ${CURDIR}\\Extra files\\Images\\RF Favicon.png    #favovicon file location
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    ###
    go to.AD    ${URL}/company-info.php
    Wait until page contains element    //input[@id='field_CompanyTitle']
    ${act result}=    Get Element Attribute    //*[@id="field_CompanyTitle"]    value
    Should Be Equal    ${act result}    ${GENERAL INFO: company name} [${URLIndex} system]
    ${email act result}=    Get Element Attribute    //*[@id="field_Email"]    value
    Should Be Equal    ${email act result}    info-${URL1index}-system@checker-soft.com
    ${phone act result}=    Get Element Attribute    //*[@id="field_Phone"]    value
    Should Be Equal    ${phone act result}    ${GENERAL INFO: company phone}
    ${sms act result}=    Get Element Attribute    //*[@id="field_SmsSourcePhone"]    value
    Should Be Equal    ${sms act result}    888
    ${exit act result}=    Get Element Attribute    //*[@id="field_DefaultExitAddress"]    value
    Should Be Equal    ${exit act result}    ${URL}/login.php
    ${address act result}=    Get Element Attribute    //*[@id="field_Address"]    value
    Should Be Equal    ${address act result}    ${GENERAL INFO: company address} | RF REVN DT: ${DD.MM.YY} - ${HH:MM} | © 2005-2022
    ${code act result}=    Get Element Attribute    //input[@id='field_InternationalCallingCode']    value
    Should Be Equal    ${code act result}    +9
    ${captcha code act result}=    Get Element Attribute    //input[@id='field_CaptchaCode']    value
    Should Be Equal    ${captcha code act result}    6Ldb7FMUAAAAAPd33_famKMEkmSNjqcqg7UNwYv-
    ${captcha secret act result}=    Get Element Attribute    //input[@id='field_CaptchaSecret']    value
    Should Be Equal    ${captcha secret act result}    6Ldb7FMUAAAAAFne160sQwBKJ9FIy0-ZHNwJHfWb
    # empty page

Check fraction digits.AD
    go to.AD    ${URL}/report-checkers-refund.php
    Log to console    Open ${URL}/report-checkers-refund.php and check fraction digits for all NUMBERS found on page (table), empty values are skipped
    click element    //select[@id='ReportType']
    click element    xpath=//*[contains(text(), 'Grouped by shopper')]
    Input text    //input[@id='rangeStart']    01-06-2019
    Input text    //input[@id='rangeEnd']    05-07-2021
    click element    //*[@id="go"]
    Log to console    Test page: ${URL}/report-checkers-refund.php
    Log to console    //input[@id='rangeStart']    01-06-2019 //input[@id='rangeEnd']    05-07-2021 report: 'Grouped by assessor'
    #checking Interviewers without VAT table
    ${col index}=    set variable    2
    ${Table1 columns}=    Get Element Count    //*[@id="table_rows"]/thead/tr[1]/th
    ${Table1 columns count}=    Evaluate    ${Table1 columns}-2
    FOR    ${index}    IN RANGE    ${Table1 columns count}
        ${col index}    Evaluate    ${col index}+1
        ${Table1rows visible}=    Run Keyword And Return Status    Element Should Be Visible    //*[@id="table_rows"]/thead/tr[1]/th[${col index}]/a
        ${Table1rows name}=    get text    //*[@id="table_rows"]/thead/tr[1]/th[${col index}]
        Run Keyword If    '${Table1rows visible}'=='True'    Validate Interviewers without VAT table    ${col index}    @id="table_rows"
        Log to console    Interviewers without VAT table: number values are valid to saved format ${\n}
    END
    #checking Interviewers with VAT table
    ${col index}=    set variable    2
    ${Table2 columns}=    Get Element Count    //*[@id="TT_"]/tbody[1]/tr[1]/td
    ${Table2 columns count}=    Evaluate    ${Table2 columns}-2
    FOR    ${index}    IN RANGE    ${Table2 columns count}
        ${col index}    Evaluate    ${col index}+1
        ${Table1rows visible}=    Run Keyword And Return Status    Element Should Be Visible    //*[@id="TT_"]/thead/tr[1]/th[${col index}]/a
        ${Table1rows name}=    get text    //*[@id="table_rows"]/thead/tr[1]/th[${col index}]
        Run Keyword If    '${Table1rows visible}'=='True'    Validate Interviewers without VAT table    ${col index}    @id="TT_"
        Log to console    Interviewers with VAT table: number values are valid to saved format ${\n}
    END

Validate Interviewers without VAT table
    [Arguments]    ${col index}    ${table id}
    ${index}    Set Variable    1
    ${Table1rows}=    Get Element Count    //*[${table id}]/tbody[1]/tr    #//*[@id="table_rows"]/tbody[1]/tr[${index}]/td[3]    //*[@id="table_rows"]/tbody[1]/tr[19]/td[3]
    #${Table2rows visible}=    Run Keyword And Return Status    Element Should Be Visible    //*[@id="TT_"]/tbody[1]/tr[1]/td
    #iterate for each row
    ${column name}=    Get text    //*[${table id}]/thead/tr[1]/th[${col index}]/a
    Log to console    --> Validating table --> "${column name}" column
    FOR    ${rowindex}    IN RANGE    ${Table1rows}
        ${rowindex}=    Evaluate    ${rowindex}+1
        Set global variable    ${rowindex}
        ${IsElementVisible}=    Run Keyword And Return Status    Element Should Be Visible    //*[${table id}]/tbody/tr[${rowindex}]/td[${col index}]
        Run Keyword If    '${IsElementVisible}'=='False'    Exit for loop
        ${actual result}=    Get Text    //*[${table id}]/tbody/tr[${rowindex}]/td[${col index}]
        Run Keyword If    '0'<='${actual result}'    Should Match Regexp    ${actual result}    \\d{${exp result}}    # Output contains x numbers
        Run Keyword If    '0'<='${actual result}'    Log to console    ${rowindex}.Value = "${actual result}" is valid (digit after comma = "${exp result}")
        Run Keyword If    '0'>'${actual result}'    Log to console    ${rowindex}.Value = "${actual result}" is empty
    #Log to console    ${rowindex}.Value = "${actual result}" is valid to setting digit after comma = "${exp result}" +
    END
    Log to console    Digital values are valid according to saved option at "Settings" > "Display" > "fraction digits" = "${exp result}"

Open Final Score report.AD
    go to.AD    ${URL}/report-property.php
    Log to console    Open Final scores analysis and check colors for "0" (empty) and "100" values (full). Client: 'AUTO 01 [RF CLIENT]'
    Wait until page contains element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[2]/td[2]/input[1]
    sleep    1
    #    Input text    //div[@id='FiltersArea']/form/table[1]/tbody/tr/td[2]/table/tbody/tr[2]/td[2]/input[2]    2
    #click element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[2]/table/tbody/tr[2]/td[2]/input[1]
    click element    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[1]/td[2]/table/tbody/tr/td/span/button
    Scroll Element Into View    xpath=//li[contains(.,'AUTO 01 [RF CLIENT]')]
    click element    xpath=//li[contains(.,'AUTO 01 [RF CLIENT]')]
    #    select from list by value    //*[@id="FiltersArea"]/form/table[1]/tbody/tr/td[1]/table/tbody/tr[1]/td[2]/table/tbody/tr/td/span/button    1
    ###
    Wait until page contains element    //*[@id="FiltersAreaLink"]/a
    click element    //*[@id="FiltersAreaLink"]/a
    click element    //*[@id="showClientColorGroup"]
    sleep    1
    select from list by index    //*[@id="showClientColorGroup"]    1
    #Input text    //div[@id='FiltersArea']/form/table[2]/tbody/tr[4]/td/table/tbody/tr[4]/td[2]/table/tbody/tr/td/input[@id='nod']    3
    click element    //*[@id="go"]
    sleep    2
    ####
    #checking table if exists
    ${100.00?}=    Run Keyword And Return Status    Page should contain    ${100.00}
    ${0.00?}=    Run Keyword And Return Status    Page should contain    ${0.00}
    Run Keyword If    ${100.00?} or ${0.00?}    Check report table (Final analisys).AD
    ...    ELSE    log to console    ${100.00} or ${0.00} is not seen

Check CSS.SD
    go to.AD    ${URL}/c_login.php
    ${elem}=    Get Webelement    class=btn-input
    ${background-color footer}=    Call Method    ${elem}    value_of_css_property    color
    Should contain    ${background-color footer}    (173, 209, 41
    ###
    ###
    ${elem}=    Get Webelement    class=footers-info
    ${background-color main menu}=    Call Method    ${elem}    value_of_css_property    background
    Should contain    ${background-color main menu}    rgb(51, 51, 51) none repeat scroll 0% 0% / auto padding-box border-box
    ###
    Log to console    Footer and main menu color is correct (shopper dashboard)

Check CSS.AD
    go to.AD    ${URL}/main-menu.php
    ${elem}=    Get Webelement    //*[@id="the_cell_with_the_program"]/table[5]/tbody/tr[2]
    ${background-color footer}=    Call Method    ${elem}    value_of_css_property    background-color
    Should contain    ${background-color footer}    51, 51, 51
    ###
    ${elem}=    Get Webelement    //*[@id="the_cell_with_the_program"]/table[5]/tbody/tr[2]/td
    ${text-color footer}=    Call Method    ${elem}    value_of_css_property    color
    Should contain    ${text-color footer}    rgba(255, 255, 255
    ###
    ${elem}=    Get Webelement    class=menu-bg
    ${background-color main menu}=    Call Method    ${elem}    value_of_css_property    background
    Should contain    ${background-color main menu}    rgb(205, 203, 199) radial-gradient(circle, rgb(125, 198, 23) 0%, rgb(173, 209, 41) 100%) repeat scroll 0% 0% / auto padding-box border-box
    ###
    ${elem}=    Get Webelement    class=insideMain
    ${background-color main menu}=    Call Method    ${elem}    value_of_css_property    background
    Should be equal    ${background-color main menu}    rgba(0, 0, 0, 0) none repeat scroll 0% 0% / auto padding-box border-box
    Log to console    Footer and main menu color is correct (admin dashboard)

Open users page.AD
    ${checkers page}=    set variable    /checkers.php
    set global variable    ${checkers page}
    go to.AD    ${URL}${checkers page}    #${URL}/checkers.php?page_var_divide_recordsPerPage=1660&page_var_divide_curPage=1&page_var_sorting_column=CountryName&page_var_sorting_order=up&page_var_filter_IsActive=&page_var_filter_BlackListed=0&page_var_filter_IsSelfRegistered=&page_var_filter_RegionName=0&page_var_filter_CityName=&page_var_filter_Fullname=&page_var_filter_Email=&Update=Please+wait
    Wait until page contains element    //button[@class='btn-input']
    Log to console    Opening ${URL}/checkers.php
    ${index}    Set Variable    1
    ${Rows}=    Get Element Count    //*[@id="table_rows"]/tbody/tr    #how many rows do we have in a table
    Log to console    Found "${Rows}" checker records on page/table
    Log to console    If shopper does not have set "Country" its profile will be resaved.
    #${Pages}=    Get text    //*[@id="page_division_wrapping_table"]/tbody/tr/td[2]/a[5]
    #Log to console    Pages=${Pages}
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${Rows}
        #sleep    1
        Log    ${rowindex}
        Set global variable    ${index}
        ${ID}=    Get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]
        set global variable    ${ID}
        ${Full name}=    Get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        ${User name}=    Get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[3]
        ${Country}=    Get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[8]
        Log to console    №${index}. ID=${ID}; Full Name=${Full name}; User Name= ${User name};${Country}=${Country}...
        Run Keyword If    '${Country}'=='${empty}'    Open Profile page.AD
        ${index}=    Evaluate    ${index}+1
    #wait until page contains element    //button[@class='btn-input']
    END

GoBack 2 times
    go to    ${URL}${checkers page}    #${URL}/checkers.php?page_var_divide_recordsPerPage=1660&page_var_divide_curPage=1&page_var_sorting_column=CountryName&page_var_sorting_order=up&page_var_filter_IsActive=&page_var_filter_BlackListed=0&page_var_filter_IsSelfRegistered=&page_var_filter_RegionName=0&page_var_filter_CityName=&page_var_filter_Fullname=&page_var_filter_Email=&Update=Please+wait
    Log to console    ${ID}.NOT SAVED!!!
    Wait until page contains element    //button[@class='btn-input']

Check report table (Final analisys).AD
    ${Table rows}=    Get Element Count    //*[@id="report_property"]/tbody/tr    #//*[@id="report_property"]/tbody/tr
    Page should contain element    //td[1]/input[@id='filter_0']
    Page should contain element    //td[2]/input[@id='filter_1']
    Page should contain element    //td[3]/input[@id='filter_2']
    Log to console    Data is present in report. Rows in a table = "${Table rows}"
    ${column ID}    set variable    8
    Run Keyword If    ${preprod?} or ${demo?}    Add1index For Preprod    ${column ID}
    ${row index}    set variable    1
    FOR    ${index}    IN RANGE    ${Table rows}
        set global variable    ${row index}
        ${Table row value}=    get text    //*[@id="report_property"]/tbody/tr[${row index}]/td[${column ID}]/span/span[2]    #//*[@id="report_property"]/tbody/tr[${row index}]/td[2]    //*[@id="report_property"]/tbody/tr[${row index}]/td[2]/a/nobr/span/span[2]
        Log to console    ${\n}Row #${row index}. --> actual value = "${Table row value}"
        Run Keyword If    '${Table row value}'=='0.00'    Check report color.AD    //*[@id="report_property"]/tbody/tr[${row index}]/td[${column ID}]/span/span[1]/span[2]    rgba(240, 109, 81, 1)
        ...    ELSE    Log to console    (-) value is not = 0.00 (skip)    #    //*[@id="report_property"]/tbody/tr[${row index}]/td[2]/a/nobr/span/span[1]/span[2]
        Run Keyword If    '${Table row value}'=='100.00'    Check report color.AD    //*[@id="report_property"]/tbody/tr[${row index}]/td[${column ID}]/span/span[1]/span    rgba(113, 196, 6, 1)
        ...    ELSE    Log to console    (-) value is not = 100.00 (skip)    #    //*[@id="report_property"]/tbody/tr[${row index}]/td[2]/a/nobr/span/span[1]/span
        ${row index}    Evaluate    ${row index}+1
        ${Table row value}=    set variable    Underfined
    END

Check report color.AD
    [Arguments]    ${locator}    ${expected color}
    ${elem}=    Get Webelement    ${locator}    #//*[@id="report_property"]/tbody/tr[${row index}]/td[2]/a/nobr/span/span[1]    //*[@id="report_property"]/tbody/tr[5]/td[2]/a/nobr/span/span[1]/span
    ${actual color}=    Call Method    ${elem}    value_of_css_property    background-color
    #${color}=    Get element attribute    ${elem}    color
    Should Contain    ${actual color}    ${expected color}
    Log to console    Empty Bar color is correct and is equal to expected ${\n} --> actual color: "${actual color}" ${\n} --> expected color: "${expected color}"
    Log to console    Status: OK - color is correct (+)
    #    Validate element attribute.AD    //input[@id='obj${Dictionary}[Q2]2']    checked    true

Open Profile page.AD
    Log to console    No country found. Opening profile page. Please wait...
    Click element    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]
    sleep    2
    wait until page contains element    //*[@id="tabs"]/ul/li[5]/a
    sleep    1
    Click element    //*[@id="save"]
    ${IsElementVisible}=    Run Keyword And Return Status    Page should contain    The following fields have problems
    Run Keyword If    ${IsElementVisible}    GoBack 2 times
    #wait until page contains    saved successfully
    #Log to console    SAVED (clicked save button and "saved successfully" text present on a page)${\n}
    go to    ${URL}${checkers page}

Check result on adding new item.AD
    [Arguments]    ${Expected text}    ${Item}
    ${IsTextVisible}=    Run Keyword And Return Status    Page should contain    ${Expected text}
    Run Keyword If    '${IsTextVisible}'=='True'    Log to console    Result: The "${Item}" already exists in ${URLIndex} system
    ...    ELSE    Log to console    Result: The "${Item}" has been added to a ${URLIndex} system

HTML (old) page. AD
    [Arguments]    ${ReviewID}    ${Result}
    go to.AD    ${URL}/show-entire-crit-v5.php?CritID=${ReviewID}
    element text should be    //center[1]/div[@class='visitReportHeader']    Survey report
    #element text should be    //td/center/h2[@class='reportDetailsHeader']    Standard header text    # fails on preprod
    Page should contain    Weights and percentages
    Page should contain    End of review report
    #Page should contain link    default=QuestionnaireFormat
    Page should contain    ${ReviewID}
    Page should contain    Weights and percentages
    Page should contain    Final grade
    Page should contain    ${RobotTestClient}
    Page should contain    ${RobotQ-ry SHOPPERS}
    Page should contain    Survey report
    Page should contain    ${Free text message}
    Element Should Be Visible    //img[contains(@src, "RFchecker.gif")]
    element text should be    //tr[@class='SidePanelTRTitle'][1]/td[@class='SidePanelTDTitle']/span[@class='SidePanelTitle']    ${RobotTestClient}
    element text should be    //tr[@class='SidePanelTRTitle'][2]/td[@class='SidePanelTDTitle']/span[@class='SidePanelTitle']    Branch details
    element text should be    //tr[@class='SidePanelTRTitle'][3]/td[@class='SidePanelTDTitle']/span[@class='SidePanelTitle']    Sections
    element text should be    //table[@class='HeaderGradeTable']/tbody/tr[1]/td[1]/div[@class='smallHeader']    Final grade:
    element text should be    //tr[1]/td[@class='FinalGradeHeader']/div[@class='smallHeader']    ${Result}${space}
    element should contain    //table[@class='HeaderGradeTable']/tbody/tr[2]/td[1]    Branch
    element text should be    //table[@class='HeaderGradeTable']/tbody/tr[2]/td[2]/div[@class='smallHeader']    ${Short auto branch name 01}
    element text should be    //table[@class='HeaderGradeTable']/tbody/tr[3]/td[1]/div[@class='smallHeader']    Shopper
    element text should be    //table[@class='HeaderGradeTable']/tbody/tr[4]/td[1]/div[@class='smallHeader']    Shopper
    element text should be    //table[@class='HeaderGradeTable']/tbody/tr[3]/td[2]/div[@class='smallHeader']    : Robot 02 [Full Name]
    element text should be    //table[@class='HeaderGradeTable']/tbody/tr[4]/td[2]/div[@class='smallHeader']    : ${Shopper ID}
    element text should be    //table[@class='HeaderGradeTable']/tbody/tr[1]/td[1]/div[@class='smallHeader']    Final grade:
    Page should contain    End time :
    Page should contain    Review number :
    Page should contain    More information:
    Page should contain    Weights and percentages
    #Fix here?    element text should be    //form[@id='frm']/font/font/center[2]/table[1]/tbody/tr[@class='weightsTable'][1]/td[2]    Section 01 [RF]
    #Fix here?    element text should be    //form[@id='frm']/font/font/center[2]/table[1]/tbody/tr[@class='weightsTable'][2]/td[2]    Sub Section 01 [RF]
    element text should be    //form[@id='frm']/font/font/center[2]/table[1]/tbody/tr[@class='weightsTable'][3]/td[2]    ${Q1 text}
    element text should be    //form[@id='frm']/font/font/center[2]/table[1]/tbody/tr[@class='weightsTable'][4]/td[2]    ${Q2 text}
    element text should be    //form[@id='frm']/font/font/center[2]/table[1]/tbody/tr[@class='weightsTable'][5]/td[2]    ${Q3 text}
    element text should be    //form[@id='frm']/font/font/center[2]/table[1]/tbody/tr[@class='weightsTable'][6]/td[2]    ${Q4 text}
    Log to console    [Old HTML report] status ok (+)

HTML (new) page. AD
    [Arguments]    ${ReviewID}    ${Free text message}
    go to.AD    ${URL}/email-visit-report.php?CritID=${ReviewID}
    element text should be    //div[1]/table/tbody/tr[2]/td    Standard header text
    Element Should Be Visible    //img[contains(@src, "calendar3FA600.png")]
    Element Should Be Visible    //img[contains(@src, "clock3FA600.png")]
    Element Should Be Visible    //img[contains(@src, "geolocation3FA600.png")]
    #Element Should Be Visible    //img[contains(@src, "finalScore0")]    ${order start_time}    ${order end_time}
    Element Should Be Visible    //img[contains(@src, "finalgrade")]
    Element Should Be Visible    //img[contains(@src, "sections")]
    Element Should Be Visible    //img[contains(@src, "subsection")]
    Element Should Be Visible    //img[contains(@src, "RFtestattachedfile.png")]
    Element Should Be Visible    //img[contains(@src, "RFtestattachedfile.jpg")]
    Page should contain    file_example_WAV_1MG.wav
    #element text should be    //table/tbody/tr[1]/td[1]/table/tbody/tr[1]/td[2]    Dec 14, 2021
    #element text should be    //table/tbody/tr[1]/td[1]/table/tbody/tr[2]/td[2]    09:34 - 09:34
    element text should be    //table/tbody/tr[1]/td[1]/table/tbody/tr[3]/td[2]    RF Branch 01 [Short name]
    #element text should be    //tr[9]/td/table/tbody/tr[4]/td/table[2]/tbody/tr/td[2]/table/tbody/tr/td[2]    ${DD.MM.YY}
    #element text should be    //table/tbody/tr[9]/td/table/tbody/tr[4]/td/table[2]/tbody/tr/td[2]/table/tbody/tr/td[2]
    #element text should be    //div[1]/table/tbody/tr[10]/td/table/tbody/tr[4]/td/table[2]/tbody/tr/td[2]/table/tbody/tr/td[2]
    #element text should be    //div[1]/table/tbody/tr[11]/td/table/tbody/tr[3]/td/table/tbody/tr[2]/td/table[2]/tbody/tr[1]/td[2]/table/tbody/tr/td[2]
    #element text should be    //table/tbody/tr[11]/td/table/tbody/tr[4]/td/table/tbody/tr[2]/td/table[2]/tbody/tr[1]/td[2]/table/tbody/tr/td[2]
    #element text should be    //div[1]/table/tbody/tr[11]/td/table/tbody/tr[6]/td/table/tbody/tr[2]/td/table[2]/tbody/tr[1]/td[2]/table/tbody/tr/td[2]
    element text should be    //table/tbody/tr[8]/td/table/tbody/tr[1]/td[2]    Final grade trend
    element text should be    //div[1]/table/tbody/tr[9]/td/table/tbody/tr[1]/td[2]    Sectional grades
    #Fix here?    element text should be    //div[1]/table/tbody/tr[10]/td/table/tbody/tr[1]/td[2]    Section 01 [RF]
    element text should be    //div[1]/table/tbody/tr[11]/td/table/tbody/tr[2]/td[2]    Sub Section 01 [RF]
    element text should be    //div[1]/table/tbody/tr[12]/td/table/tbody/tr/td    ${Free text message}
    Page should contain    46-55(yellow)
    Page should contain    green
    Page should contain    2000
    Page should contain    Yes
    Page should contain    100.00
    Page should contain    Not now
    Page should contain    10.00
    Page should contain    Additional info - ${DD.MM.YY} RF
    Log to console    [New HTML report page] status ok (+)

Show entire scorecard by question code page. AD
    [Arguments]    ${ReviewID}    ${RobotTestQ-ry}    ${Date and time}    ${RobotTestClient}    ${Assessor name}    ${Short branch name}    ${Status}    ${Mass order description}    ${Result}
    go to.AD    ${URL}/show-entire-crit-by-qcode.php?CritID=${ReviewID}&_pv_sorting_column=QuestionOrder&_pv_sorting_order=up
    Wait Until Page Contains Element    //div[@id='FiltersArea']/span[@class='CritInfoItem'][1]
    Show entire scorecard by question code page. Check default elements
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][1]    ${RobotTestQ-ry}
    Element should contain    //div[@id='FiltersArea']/span[@class='CritInfoItem'][2]    ${DD.MM.YY}
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][3]    ${Result}
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][4]    ${RobotTestClient}
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][5]    Robot 02 [Full Name]
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][6]    ${Short branch name}
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][7]    ${Status}
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][8]    ${ReviewID}
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][9]/p    ${Mass order description}
    ###
    Page should contain    ${Free text message}
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[1]/td[2]    Q1
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[2]/td[2]    Q2
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[3]/td[2]    Q3
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[4]/td[2]    Bonus
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[5]/td[2]    Bonus
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[1]/td[3]    ${Q1 text}
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[2]/td[3]    ${Q2 text}
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[3]/td[3]    ${Q3 text}
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[4]/td[3]    ${Q4 text}
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[5]/td[3]    ${Q4 text}
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[1]/td[4]    46-55(yellow)
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[2]/td[4]    green
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[3]/td[4]    YES
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[4]/td[4]    Yes
    Element Should Contain    //*[@id="table_rows"]/tbody/tr[5]/td[4]    Not now
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[1]/td[6]    ***
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[2]/td[6]    Additional info - ${DD.MM.YY} RF
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[3]/td[6]    2000
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[4]/td[7]    55
    Element Text Should Be    //*[@id="table_rows"]/tbody/tr[5]/td[7]    55
    #
    Page should contain element    //input[@class='btn-input']    #Send by email button
    Page should contain element    //input[@class='btn-input'][1]    #Export button
    Page should contain element    //input[@class='btn-input'][2]    #Export all data button
    Element Text Should Be    //*[@id="side_menu"]/tbody/tr/td[3]/table/tbody/tr/td/center/div[3]/h2    The following files are attached:
    Page should contain    RF test(attached file).jpg
    Page should contain    RF test(attached file).png
    Page should contain    file_example_WAV_1MG.wav
    Element Text Should Be    //div[@id='container']/table[@id='width_limiter']/tbody/tr/td[@id='the_cell_with_the_program']/table[@id='side_menu']/tbody/tr/td[@class='middle-right']/div[@id='FiltersArea']/a    Show in review report version
    Log to console    [Show entire review by question code page] status ok (+)

Review in print version page. AD
    [Arguments]    ${ReviewID}    ${RobotTestQ-ry}    ${Date and time}    ${RobotTestClient}    ${Assessor name}    ${Short branch name}    ${Status}    ${Mass order description}    ${Result}
    go to.AD    ${URL}/show-entire-crit.php?CritID=${ReviewID}&PrintView=1
    Log to console    Go to ${URL}/show-entire-crit.php?CritID=${ReviewID}&PrintView=1
    Reload page
    Wait Until Page Contains Element    //body/table[1]/tbody/tr[2]/td/a
    Element Text Should Be    //body/table[1]/tbody/tr[2]/td/a    Edit entire review
    Element Text Should Be    //body/table[1]/tbody/tr[3]/td/a    Edit review
    Element Text Should Be    //body/table[1]/tbody/tr[4]/td/a    Show review modifications
    Page should contain link    default=Client comments management
    Page should contain element    //*[@id="save_comments"]
    Element Text Should Be    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[3]/td[1]    Q1. Q1: ${Q1 text}    #1.1.0. Q1: Enter your name    1. 1: ${Q1 text}
    Element Text Should Be    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[4]/td[1]    Q2. Q2: ${Q2 text}    #2.1.1. Q2: Enter your age    2. 2: ${Q2 text}
    Element Text Should Be    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[5]/td[1]    Q3. Q3: ${Q3 text}
    Element Text Should Be    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[6]/td[1]    Bonus. Bonus: ${Q4 text}
    Element should contain    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[3]/td[2]    46-55(yellow) (in Robot language [RTL])
    Element Text Should Be    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[4]/td[2]    green${space}
    Element Should Contain    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[5]/td[2]    YES
    Element should contain    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[6]/td[2]    Not now
    Element should contain    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[6]/td[2]    Yes
    #
    #
    Element should contain    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[3]/td[7]    ***
    Element should contain    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[4]/td[7]    Additional info - ${DD.MM.YY} RF
    Element Text Should Be    //table[2]/tbody/tr/td/center/p/span[2]/a    ${Result}
    Element Text Should Be    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[5]/td[7]    2000${space}
    ####
    Element Text Should Be    //span[@class='CritInfoItem'][1]    ${RobotTestQ-ry}
    #Element Text Should Be    //span[@class='CritInfoItem'][2]    ${Date and time}
    Element Text Should Be    //span[@class='CritInfoItem'][3]    ${Result}
    Element Text Should Be    //span[@class='CritInfoItem'][4]    ${RobotTestClient}
    Element Text Should Be    //span[@class='CritInfoItem'][5]    Robot 02 [Full Name]
    Element Text Should Be    //span[@class='CritInfoItem'][6]    ${Short branch name}
    Element Text Should Be    //span[@class='CritInfoItem'][7]    ${Status}
    Element Text Should Be    //span[@class='CritInfoItem'][8]    ${ReviewID}
    ####
    Element Text Should Be    //span[@class='critInfoItemTitle'][1]    Questionnaire name
    Element Text Should Be    //span[@class='critInfoItemTitle'][2]    Finish time
    Element Text Should Be    //span[@class='critInfoItemTitle'][3]    Result
    Element Text Should Be    //span[@class='critInfoItemTitle'][4]    Client name
    Element Text Should Be    //span[@class='critInfoItemTitle'][5]    Shopper name
    Element Text Should Be    //span[@class='critInfoItemTitle'][6]    Short branch name
    Element Text Should Be    //span[@class='critInfoItemTitle'][7]    Status
    Element Text Should Be    //span[@class='critInfoItemTitle'][8]    Review number
    Element Text Should Be    //span[@class='critInfoItemTitle'][9]    Free text
    #Element Text Should Be    //p[@class='announcement-text']    Status will be changed to RF Label 01 [Automatically change to this label] in 888 days
    Page should contain    RF test(attached file).jpg
    Page should contain    RF test(attached file).png
    Page should contain    ${Free text message}
    #Element Text Should Be    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[1]/td/span    1. Section 01 [RF]
    Element Text Should Be    //table[2]/tbody/tr/td/center/form/table[1]/tbody/tr[2]/td/span    1.1. Sub Section 01 [RF]
    Element Text Should Be    //center/p/span[@class='critInfoItemTitle']    Result
    Element Text Should Be    //center/p/span[@class='CritInfoItem']/a    ${Result}
    Log to console    [Review in print version page] status ok (+)
    Page should contain    RF test(attached file).jpg
    Page should contain    RF test(attached file).png
    Page should contain    file_example_WAV_1MG.wav

Review handling details.Check default elements

Show entire scorecard by question code page. Check default elements
    Page should contain link    default=Show in review report version
    Page should contain element    //input[@class='btn-input']
    Page should contain element    //input[@class='btn-input'][1]
    Page should contain element    //input[@class='btn-input'][2]
    Page should contain element    //*[@id="table_rows"]
    # check text
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][1]    Questionnaire name
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][2]    Finish time
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][3]    Result
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][4]    Client name
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][5]    Shopper name
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][6]    Short branch name
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][7]    Status
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][8]    Review number
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][9]    Mass order description
    Element Text Should Be    //div[@id='FiltersArea']/span[@class='critInfoItemTitle'][10]    Free text
    Log to console    Default elements are present

Full scorecard report.AD
    [Arguments]    ${ReviewID}    ${RobotTestQ-ry}    ${Date and time}    ${RobotTestClient}    ${Assessor name}    ${Short branch name}    ${Status}    ${Mass order description}    ${Result}
    go to.AD    ${URL}/show-entire-crit.php?CritID=${ReviewID}
    ####
    Element Text Should Be    //*[@id="FiltersArea"]/table[2]/tbody/tr[2]/td/a    Handle review
    Element Text Should Be    //div[@id='FiltersArea']/table[1]/tbody/tr[3]    Show entire review by question code
    Element Text Should Be    //div[@id='FiltersArea']/table[1]/tbody/tr[4]    Survey report in PDF version (6)
    Element Text Should Be    //div[@id='FiltersArea']/table[1]/tbody/tr[5]    Show entire review in Print Mode
    ####
    #Element Text Should Be    //*[@id="FiltersArea"]/table[2]/tbody/tr[3]/td/a    Create task
    Page should contain link    default=Go back
    Page should contain link    default=Back to reports menu
    Page should contain link    default=Main menu
    Page should contain link    default=Client comments management
    Page should contain link    default=Edit entire review
    Page should contain link    default=Edit review
    Page should contain link    default=Show review modifications
    ####
    Page should contain element    //*[@id="save_comments"]
    Page should contain element    //a[@id='thenote']
    Page should contain element    //input[@id='selectAll']
    #    Element Text Should Be    //p[@class='announcement-text']    Status will be changed to RF Label 01 [Automatically change to this label] in 888 days
    Page should contain element    //input[@id='downloadAll']
    Element Text Should Be    //center/p/span[@class='critInfoItemTitle']    Result
    Element Text Should Be    //center/p/span[@class='CritInfoItem']/a    ${Result}
    Element Text Should Be    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[3]/td[1]    Q1. Q1: ${Q1 text}
    Element Text Should Be    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[4]/td[1]    Q2. Q2: ${Q2 text}
    Element Text Should Be    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[5]/td[1]    Q3. Q3: ${Q3 text}
    Element Text Should Be    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[6]/td[1]    Bonus. Bonus: ${Q4 text}
    Element should contain    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[3]/td[2]    46-55(yellow) (in Robot language [RTL])
    Element Text Should Be    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[4]/td[2]    green${space}
    Element Text Should Be    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[5]/td[2]    YES${space}
    Element should contain    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[6]/td[2]    Yes
    Element should contain    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[6]/td[2]    Not now
    Element should contain    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[3]/td[7]    ***
    Element should contain    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[4]/td[7]    Additional info - ${DD.MM.YY} RF
    Element should contain    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/form/table[1]/tbody/tr[5]/td[7]    2000
    ####
    Element Text Should Be    //span[@class='CritInfoItem'][1]    ${RobotTestQ-ry}
    #Element Text Should Be    //span[@class='CritInfoItem'][2]    ${Date and time}
    Element Text Should Be    //span[@class='CritInfoItem'][3]    ${Result}
    Element Text Should Be    //span[@class='CritInfoItem'][4]    ${RobotTestClient}
    Element Text Should Be    //span[@class='CritInfoItem'][5]    Robot 02 [Full Name]
    Element Text Should Be    //span[@class='CritInfoItem'][6]    ${Short branch name}
    Element Text Should Be    //span[@class='CritInfoItem'][7]    ${Status}
    Element Text Should Be    //span[@class='CritInfoItem'][8]    ${ReviewID}
    ####
    Element Text Should Be    //span[@class='critInfoItemTitle'][1]    Questionnaire name
    Element Text Should Be    //span[@class='critInfoItemTitle'][2]    Finish time
    Element Text Should Be    //span[@class='critInfoItemTitle'][3]    Result
    Element Text Should Be    //span[@class='critInfoItemTitle'][4]    Client name
    Element Text Should Be    //span[@class='critInfoItemTitle'][5]    Shopper name
    Element Text Should Be    //span[@class='critInfoItemTitle'][6]    Short branch name
    Element Text Should Be    //span[@class='critInfoItemTitle'][7]    Status
    Element Text Should Be    //span[@class='critInfoItemTitle'][8]    Review number
    Element Text Should Be    //span[@class='critInfoItemTitle'][9]    Free text
    ####
    Page should contain    ${Free text message}
    Element Should Be Visible    //img[contains(@src, "RFtestattachedfile.png")]
    Element Should Be Visible    //img[contains(@src, "RFtestattachedfile.jpg")]
    Page should contain    file_example_WAV_1MG.wav
    Log to console    [Full review page] status = ${Status} ok (+)
    Page should contain    Download
    Page should contain    (1.02m)
    Page should contain    (69.25k)
    Page should contain    (152.51k)

Assign order (via operation-panel.php).AD
    [Arguments]    ${test order description}
    go to.AD    ${URL}/operation-panel.php
    Log To Console    Open ${URL}/operation-panel.php and filter orders by status ("Ordered, waiting for assignement") and client ("${RobotTestClient}")
    Wait Until Page Contains Element    //*[@id="update"]
    Wait Until Page Contains Element    //*[@id="FiltersAreaLink"]/a
    Log To Console    Let`s search an order (by its decription="${test order description}") on order management page
    Log To Console    Open ${URL}/operation-panel.php
    Log To Console    We are looking order in table by its order description, validating each row, please wait ----> (expected description: "${test order description}") and get its ID
    sleep    1
    Set Focus To Element    //*[@id="ClientID"]
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button
    Scroll Element Into View    xpath=//li[contains(.,'${RobotTestClient}')]
    Click element    xpath=//li[contains(.,'${RobotTestClient}')]
    #//*[@id="ClientID"]/option[215]
    Click element    //*[@id="StatusID"]
    Click element    //*[@id="StatusID"]/option[4]
    Wait Until Page Contains Element    //input[@id='show']
    Click element    //input[@id='show']
    sleep    1
    Wait Until Page Contains Element    //*[@id="table_rows"]
    ${index}    Set Variable    1
    ${elements}=    Get Element Count    //*[@id="table_rows"]/tbody/tr
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${elements}
        ${rowindex}=    Evaluate    ${rowindex}+1
        Set global variable    ${rowindex}
        ${actual order description}=    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[4]
        Run Keyword If    '${actual order description}' == '${test order description}'    Get order ID
        Log to console    № ${rowindex}. Order description --> ${actual order description}
    END
    go to.AD    ${URL}/crit-order-assignments.php?OrderID=${found order ID}
    Log To Console    Open order page URL: ${URL}/crit-order-assignments.php?OrderID=${found order ID}"
    Wait until page contains    ${test order description}
    Wait until page contains    Ordered, awaiting assignation
    Reload page
    Log To Console    Let`s assign the order using shopper property: 'Autotest'='Autotest-YES'
    Set checkbox.AD    //input[@id='scm']    false
    Check errors on page [-1]
    Wait until page contains element    //form/input[@id='show']
    Click Element    //select[@id='PropID']
    Scroll Element Into View    //span[contains(.,'Autotest')]
    Click Element    xpath=//option[contains(.,'Autotest')]
    sleep    1
    Wait until page contains element    id=ValueID
    Wait until page contains element    id=ValueID
    Click Element    id=ValueID
    Click Element    //table[3]/tbody/tr/td[2]/select[@id='pleaseFilter']
    Click Element    xpath=//option[contains(.,'Autotest')]
    Click Element    xpath=//option[contains(.,'Autotest-YES')]
    sleep    2
    Set focus to element    //*[@id="pleaseFilter"]
    Click Element    //*[@id="pleaseFilter"]/option[2]
    Wait until page contains element    //form/input[@id='show']
    Click Element    //input[@id='show']
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Set focus to element    //*[@id="assignmenttable"]/tbody/tr/td[1]/input
    Click Element    //*[@id="assignmenttable"]/tbody/tr/td[1]/input
    sleep    1
    Click Element    //input[@id='do_assignment']
    #Check errors on page [-1]    fix here
    Page should contain    1 orders assigned
    Log to console    Order `${found order ID}` is assigned!

Evaluate index
    [Arguments]    ${i}
    ${i}    Evaluate    ${i}+1
    Set global variable    ${i}

Get question ID
    Go to2.AD    ${URL}/setedit-frameset.php?SetID=${found ID}
    select frame    objects
    Wait until page contains element    //*[@id="MEF"]
    set focus to element    //*[@id="MEF"]
    ${Q1 ID} =    Get text    //*[@id="object_list"]/tbody/tr[1]/td[3]
    ${Q2 ID} =    Get text    //table/tbody/tr/td/form[1]/table[3]/tbody/tr/td/table/tbody/tr[2]/td[3]
    ${Q3 ID} =    Get text    //table/tbody/tr/td/form[1]/table[3]/tbody/tr/td/table/tbody/tr[3]/td[3]
    ${Q4 ID} =    Get text    //table/tbody/tr/td/form[1]/table[3]/tbody/tr/td/table/tbody/tr[4]/td[3]
    ${Q1 text} =    Get text    //table/tbody/tr/td/form[1]/table[3]/tbody/tr/td/table/tbody/tr[1]/td[11]
    ${Q2 text} =    Get text    //table/tbody/tr/td/form[1]/table[3]/tbody/tr/td/table/tbody/tr[2]/td[11]
    ${Q3 text} =    Get text    //table/tbody/tr/td/form[1]/table[3]/tbody/tr/td/table/tbody/tr[3]/td[11]
    ${Q4 text} =    Get text    //table/tbody/tr/td/form[1]/table[3]/tbody/tr/td/table/tbody/tr[4]/td[11]
    Set global variable    ${Q1 ID}
    Set global variable    ${Q2 ID}
    Set global variable    ${Q3 ID}
    Set global variable    ${Q4 ID}
    Set global variable    ${Q1 text}
    Set global variable    ${Q2 text}
    Set global variable    ${Q3 text}
    Set global variable    ${Q4 text}
    Check errors on page [2]
    Log To Console    Q1 ID = ${Q1 ID}. ${Q1 text}
    Log To Console    Q2 ID = ${Q2 ID}. ${Q2 text}
    Log To Console    Q3 ID = ${Q3 ID}. ${Q3 text}
    Log To Console    Q4 ID = ${Q4 ID}. ${Q4 text}
    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Q1 ID}
    Wait Until Page Contains element    //input[@id='SepQuestionName']
    Click link    default=Answers / translations
    Sleep    1
    ${Q1 answer ID}    get text    //*[@id="answersTable"]/tbody/tr[5]/td[1]
    ${Q1 answer ID}    Get Substring    ${Q1 answer ID}    2    -2
    Set global variable    ${Q1 answer ID}
    Log to console    Q1 answer ID = "${Q1 answer ID}"
    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Q2 ID}
    Wait Until Page Contains element    //input[@id='SepQuestionName']
    Click link    default=Answers / translations
    Sleep    1
    ${Q2 answer green ID}    get text    //*[@id="answersTable"]/tbody/tr[4]/td[1]
    ${Q2 answer ID}    Get Substring    ${Q2 answer green ID}    2    -2
    Log to console    Q2 answer ID = "${Q2 answer ID}"
    ${text}    get text    //*[@id="ans3text"]
    Validate value (value)    //*[@id="ans3text"]    green
    Set global variable    ${Q2 answer ID}
    Log To Console    ${Q2 answer ID}
    Check errors on page [2]
    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Q3 ID}
    Click link    default=Answers / translations
    Sleep    1
    Wait Until Page Contains element    //*[@id="answersTable"]/tbody/tr[3]/td[1]
    ${Q3 answer Yes ID}    get text    //*[@id="answersTable"]/tbody/tr[5]/td[1]
    ${Q3 answer ID}    Get Substring    ${Q3 answer Yes ID}    2    -2
    ${text}    get text    //*[@id="ans4text"]
    Validate value (value)    //*[@id="ans4text"]    YES
    Log to console    Q3 answer ID = "${Q3 answer ID}"
    Set global variable    ${Q3 answer ID}

Set client report settings.AD
    go to.AD    ${URL}/client-reports-settings.php?ClientID=${found ID}
    Log to console    Enabling all client report settings
    Wait until page contains    Client name: ${RobotTestClient}
    Page should contain    Final scores analysis
    Page should contain    Show entire review
    Page should contain    Branch relative position
    Page should contain    General
    Page should contain link    default=Cancel
    ###"Final scores analysis" section
    ####
    Page should contain    Start date
    Click element    //tr[@id='tr_StartDate']/td[@id='idStartDateEditbox']/table/tbody/tr/td
    set focus to element    xpath=//li[contains(.,'Date and time')]
    Click element    xpath=//li[contains(.,'Date and time')]
    ##
    Page should contain    Finish date
    Click element    //*[@id="idFinishDateEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[3]/ul/li[4]/label/span
    Click element    //div[3]/ul/li[4]/label/span
    ##
    Page should contain    Time of approval
    Click element    //*[@id="idApprovalDateEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[4]/ul/li[4]/label/span
    Click element    //div[4]/ul/li[4]/label/span
    ###
    ${status}=    Get Element Attribute    //input[@id='field_ShowSetType']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowSetType']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowSetType']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowSetType']
    Page should contain    Show questionnaire type
    ###
    ${status}=    Get Element Attribute    //input[@id='field_ShowSetName']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowSetName']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowSetName']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowSetName']
    Page should contain    Show questionnaire name
    ###
    ${status}=    Get Element Attribute    //input[@id='field_ShowBranchCode']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowBranchCode']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowBranchCode']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowBranchCode']
    Page should contain    Show branch code
    ###
    ${status}=    Get Element Attribute    //input[@id='field_ShowWorkersProp']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowWorkersProp']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowWorkersProp']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowWorkersProp']
    Page should contain    Show workers characteristics
    ###
    ${status}=    Get Element Attribute    //input[@id='field_ShowUnwatchedReviews']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowUnwatchedReviews']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowUnwatchedReviews']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowUnwatchedReviews']
    Page should contain    Show unwatched reviews
    ###"Show entire scorecard" section
    Click element    //*[@id="idShowEntireCritFinishDateEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[5]/ul/li[4]/label/span
    Click element    //div[5]/ul/li[4]/label/span
    ###
    Click element    //*[@id="idWeightDisplayTypeEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[6]/ul/li[3]/label/span
    Click element    //div[6]/ul/li[3]/label/span
    ###
    Click element    //*[@id="idGradeDisplayTypeEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[7]/ul/li[2]/label/span
    Click element    //div[7]/ul/li[2]/label/span
    ###
    Click element    //*[@id="idReviewReportQuestionNumberingEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[8]/ul/li[3]/label/span
    Click element    //div[8]/ul/li[3]/label/span
    #
    ${status}=    Get Element Attribute    //input[@id='field_ShowZeroWeightItemsGrades']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowZeroWeightItemsGrades']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowZeroWeightItemsGrades']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowZeroWeightItemsGrades']
    Page should contain    Show grades of zero weight items
    Page should contain    Grade display in reports
    Page should contain    Weight display type
    #
    ${status}=    Get Element Attribute    //input[@id='field_ShowColumnWeight']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowColumnWeight']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowColumnWeight']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowColumnWeight']
    #
    ${status}=    Get Element Attribute    //input[@id='field_ShowColumnMultiple']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowColumnMultiple']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowColumnMultiple']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowColumnMultiple']
    #
    ${status}=    Get Element Attribute    //input[@id='field_ShowColumnCritical']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowColumnCritical']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowColumnCritical']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowColumnCritical']
    #
    ${status}=    Get Element Attribute    //input[@id='field_ShowVisitReportText']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowVisitReportText']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowVisitReportText']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowVisitReportText']
    ##
    Page should contain    Questions numbering in Full review report
    Page should contain    Show weight column
    Page should contain    Show multiple choice result column
    Page should contain    Show critical column
    Page should contain    Show visit report text items
    Page should contain link    default=Add text fields
    Page should contain    Show names of all branches
    #
    ${status}=    Get Element Attribute    //input[@id='field_BenchmarkShowBranchName']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_BenchmarkShowBranchName']
    ${status1}=    Get Element Attribute    //input[@id='field_BenchmarkShowBranchName']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_BenchmarkShowBranchName']
    ##
    Page should contain    SignleReviewDisplayFormat
    Click element    //*[@id="idSignleReviewDisplayFormatEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[9]/ul/li[2]/label/span
    Click element    //div[9]/ul/li[2]/label/span
    ###
    Page should contain    LowestDrillDownLevel
    Click element    //*[@id="idLowestDrillDownLevelEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[10]/ul/li/label/span
    Click element    //div[10]/ul/li/label/span
    #
    Page should contain    Show the standard visit report
    ${status}=    Get Element Attribute    //input[@id='field_AllowV5VisitReport']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_AllowV5VisitReport']
    ${status1}=    Get Element Attribute    //input[@id='field_AllowV5VisitReport']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_AllowV5VisitReport']
    ##
    #Page should contain    Show the updated visit report
    ${status}=    Get Element Attribute    //input[@id='field_AllowEmailVisitReport']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_AllowEmailVisitReport']
    ${status1}=    Get Element Attribute    //input[@id='field_AllowEmailVisitReport']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_AllowEmailVisitReport']
    ##
    Page should contain    Show the PDF visit report
    ${status}=    Get Element Attribute    //input[@id='field_AllowV6VisitReport']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_AllowV6VisitReport']
    ${status1}=    Get Element Attribute    //input[@id='field_AllowV6VisitReport']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_AllowV6VisitReport']
    ##
    Page should contain    Display a notice when showing items without weight
    ${status}=    Get Element Attribute    //input[@id='field_ShowZeroWeightNotice']    checked
    log    ${status}
    Run keyword if    '${status}'=='None'    click element    //input[@id='field_ShowZeroWeightNotice']
    ${status1}=    Get Element Attribute    //input[@id='field_ShowZeroWeightNotice']    checked
    Should Be Equal    ${status1}    true
    ${status2}    checkbox should be selected    //input[@id='field_ShowZeroWeightNotice']
    ##
    Page should contain    Hide the report name that is given by the system
    Click element    //*[@id="idHideSystemReportHeaderEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[11]/div/ul/li[2]/a/span[2]
    Click element    //div[11]/div/ul/li[2]/a/span[2]
    Click element    //*[@id="idHideSystemReportHeaderEditbox"]/table/tbody/tr/td/span/button
    #
    Click element    //*[@id="idGeneralGradeDisplayTypeEditbox"]/table/tbody/tr/td/span/button
    set focus to element    //div[12]/ul/li[2]/label/span
    Click element    //div[12]/ul/li[2]/label/span
    Page should contain    Scoring type
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully

Set visit report settings.AD
    Set visit report colors.AD
    go to.AD    ${URL}/client-report-settings.php?ClientID=${found ID}
    Log to console    -------
    Log to console    Enabling all client visit settings
    Page should contain    Client name
    Page should contain    Show opening page
    Page should contain    Show closing page
    Page should contain    Show previous visit grades
    Page should contain    Show side panel
    Page should contain    Sections title color
    Page should contain    Sub-sections title color
    Page should contain    Background top color
    Page should contain    Background bottom color
    Page should contain    Text color
    Page should contain    ${RobotTestClient}
    # \ \ \ # enable all checkboxes
    Set checkbox.AD    //input[@id='field_RptGShowClosingPage']    true
    Set checkbox.AD    //input[@id='field_RptGShowOpeningPage']    true    # set None - in case if you want disable the checkbox, true if enable
    Set checkbox.AD    //input[@id='field_RptGShowLastShopGrade']    true
    Set checkbox.AD    //input[@id='field_RptShowSidePanel']    true
    ###
    Set checkbox.AD    //input[@id='field_showExif']    true
    Set checkbox.AD    //input[@id='field_showSize']    true
    Set checkbox.AD    //input[@id='field_RptGShowCriticismDetailsInOpeningPage']    true
    Set checkbox.AD    //input[@id='field_RptGShowCriticismDetailsInEveryPageHeader']    true
    Set checkbox.AD    //input[@id='field_RptShowSampleDetails']    true
    Set checkbox.AD    //input[@id='field_RptShowSampleDetails']    true
    Select dropdown.AD    //*[@id="idRptGShowSubchapterSummaryEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Show summary with scoring sub-sections only')]
    #Set checkbox    //input[@id='field_RptGShowSubchapterSummary']    true
    Set checkbox.AD    //input[@id='field_RptShowChainAverage']    true
    Set checkbox.AD    //input[@id='field_RptShowSubchapterTrend']    true
    Set checkbox.AD    //input[@id='field_RptShowSubchapterTrend']    true
    Set checkbox.AD    //input[@id='field_RptShowChangePercentage']    true
    Set checkbox.AD    //input[@id='field_RptShowTopLowChapters']    true
    Set checkbox.AD    //input[@id='field_RptShowTopLowSubchapters']    true
    Set checkbox.AD    //input[@id='field_RptShowTopLowQuestions']    true
    Set checkbox.AD    //input[@id='field_RptShowAboveBelowChapters']    true
    Set checkbox.AD    //input[@id='field_RptShowAboveBelowSubchapters']    true
    Set checkbox.AD    //input[@id='field_RptShowAboveBelowQuestions']    true
    Set checkbox.AD    //input[@id='field_RptGPageBreakAfterEachSection']    true
    Set checkbox.AD    //input[@id='field_RptGPageBreakAfterEachSubsection']    true
    Set checkbox.AD    //input[@id='hidecolorcode_RptGBarColor']    true
    Set checkbox.AD    //input[@id='hidecolorcode_RptGPastBarColor']    true
    Set checkbox.AD    //input[@id='field_RptHShowHeader']    true
    Set checkbox.AD    //input[@id='field_RptHShowSeperatingLine']    true
    Set checkbox.AD    //input[@id='field_RptHShowPageNumber']    true
    Set checkbox.AD    //input[@id='field_RptHShowClientData']    true
    Set checkbox.AD    //input[@id='field_RptHShowCompanyData']    true
    Set checkbox.AD    //input[@id='field_RptHShowStartTime']    true
    Set checkbox.AD    //input[@id='field_RptHShowEndTime']    true
    Set checkbox.AD    //input[@id='field_RptHShowCheckerName']    true
    Set checkbox.AD    //input[@id='field_RptHShowCheckerID']    true
    Set checkbox.AD    //input[@id='field_RptHShowBranchName']    true
    Set checkbox.AD    //input[@id='field_RptBShowTableGridLines']    true
    Set checkbox.AD    //input[@id='field_RptBHideQuestions']    true
    Set checkbox.AD    //input[@id='field_RptBShowNotFilledQuestions']    true
    Set checkbox.AD    //input[@id='field_RptBShowWeights']    true
    Set checkbox.AD    //input[@id='field_RptShowQuestionGroupNames']    true
    Set checkbox.AD    //input[@id='field_RptWShowWeightsAndPercentages']    true
    Set checkbox.AD    //input[@id='field_RptHShowDate']    true
    ##
    Input text    //input[@id='field_RptShowChapterTrend']    3
    Input text    //input[@id='field_RptGShowCommentConcentrationUnderGrade']    2
    Input text    //input[@id='field_RptShowTopTable']    4
    Input text    //input[@id='field_RptShowLowTable']    5
    Input text    //input[@id='field_RptShowAboveTable']    2
    Input text    //input[@id='field_RptShowBelowTable']    5
    Input text    //input[@id='field_RptAttachmentQuestionIDCode']    RptAttachmentQuestionIDCode
    Input text    //input[@id='field_RptHShowFinalGradeTrend']    3
    Input text    //input[@id='field_RptHShowFinalGradeBenchmark']    5
    ##
    Select dropdown.AD    //*[@id="idRptGShowChapterSummaryPageEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Chart')]    #//body/div[10]/ul/li[3]/label
    Select dropdown.AD    //*[@id="idRptShowChapterSummaryDesignEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Results above bar')]
    Select dropdown.AD    //*[@id="idRptComparisonPeriodEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Monthly')]
    Select dropdown.AD    //*[@id="idRptHHeaderOrderEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Client, Company, Details')]
    Select dropdown.AD    //*[@id="idRptHShowFinalGradeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'grade and widget')]
    Select dropdown.AD    //*[@id="idRptQuestionNumberingEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Question code')]
    Select dropdown.AD    //*[@id="idRptAnswersDisplayEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'All possible answers')]
    Select dropdown.AD    //*[@id="idRptBAlignEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Center')]
    #
    Page should contain link    default=Cancel
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully

Select dropdown.AD
    [Arguments]    ${element ID}    ${exp value}
    wait until page contains element    ${element ID}
    ${Uncheck all}=    set variable    //body/div[5]/div/ul/li[2]/a/span[2]
    ${is element present?}=    Run keyword and return status    ${Uncheck all}
    Log    ${is element present?}
    Run Keyword If    '${is element present?}'=='True'    ${Uncheck all}
    set focus to element    ${element ID}
    Click element    ${element ID}
    Run keyword and ignore error    Scroll Element Into View    ${exp value}
    sleep    1
    wait until page contains element    ${exp value}    5
    Run keyword and ignore error    Scroll Element Into View    ${exp value}
    set focus to element    ${exp value}
    Click element    ${exp value}
    wait until page contains element    ${element ID}
    Scroll Element Into View    ${exp value}
    set focus to element    ${exp value}
    ${status}=    Get text    ${element ID}
    log to console    Dropdown set to "${element ID}" --> "${exp value}"

Add/Edit alert.AD
    [Arguments]    ${Send when in this status}    ${AlertName}    ${condition}    ${Include in report}    ${Attachment}    ${active?}    ${Show link to review?}    ${Send to specific email?}    ${Send repeatedly?}    ${allow concentrated?}    ${body content}
    go to.AD    ${URL}/alerts.php?page_var_filter_IsActive=&ClientID=${Dictionary}[${RobotTestClient}]
    Wait until page contains element    //button[@class='btn-input']
    ${IsElementVisible}=    Run keyword and return status    Page should contain    ${AlertName}
    Run Keyword If    ${IsElementVisible}    Click link    default=${AlertName}
    ...    ELSE    GO TO    ${URL}/alerts.php?&addnew=yup&ClientID=${Client ID}
    log to console    Editing/adding alert: Name = "${AlertName}"
    Wait until page contains element    //input[@id='field_EmailSubj']
    Set global variable    ${Attachment}
    Check errors on page [-1]
    Set global variable    ${AlertName}
    ${x}=    Set variable    ${AlertName}
    Set checkbox.AD    //*[@id="field_IsActive"]    ${active?}
    Set checkbox.AD    //input[@id='field_SendRepeatedly']    ${Send repeatedly?}
    Set checkbox.AD    //input[@id='field_AlertByEmail']    true
    Set checkbox.AD    //input[@id='field_AllowEmailDigest']    ${allow concentrated?}
    Set checkbox.AD    //input[@id='field_AlertBySms']    None
    Set checkbox.AD    //input[@id='field_ShowReviewLink']    ${Show link to review?}
    ###
    Click element    //*[@id="idNoAlertsWeekdaysEditbox"]/table/tbody/tr/td/span/button
    Run keyword and ignore error    Click element    //div[6]/div/ul/li[2]/a/span[2]
    Select dropdown.AD    //*[@id="idStatusToSendEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Send when in this status}')]
    ${Alert condition status}    Get text    //*[@id="idStatusToSendEditbox"]/table/tbody/tr/td/span/button
    #
    Input text    //input[@id='field_EmailSubj']    Email subject: ${AlertName}
    Input text    //input[@id='field_AlertName']    ${AlertName}
    Input text    //textarea[@id='field_SendToSpecificEmail']    ${Send to specific email?}
    Run keyword if    ${testing?}    Enter editor text.AD    id=cke_57_label    ${body content}
    Run keyword if    ${preprod?}    Enter editor text.AD    id=cke_51_label    ${body content}
    Input text    //textarea[@id='field_AlertCondition']    ${condition}
    Input text    //input[@id='field_FileNameFormat']    %[cid]%
    Select dropdown.AD    //*[@id="idIncludeVisitReportEditbox"]/table/tbody/tr/td/span/button    ${Include in report}
    Input text    //input[@id='field_SendToSpecificSms']    ${empty}
    Select dropdown.AD    //*[@id="idSendAttachmentsEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Attachment}')]
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully
    Click link    default=${AlertName}
    Wait until page contains element    //input[@id='field_EmailSubj']
    ${sent to value}=    Get text    //textarea[@id='field_SendToSpecificEmail']
    Should be equal    ${sent to value}    ${Send to specific email?}
    Check errors on page [-1]
    log to console    Status: OK. 1. Name=${AlertName}; 2. Email subject: "${AlertName} rev date ${DD.MM.YY}"; 3. "//textarea[@id='field_SendToSpecificEmail']="${Send to specific email?}"; 4. Alert condition status="${Alert condition status}"
    Execute JavaScript    window.document.getElementById("field_IsActive").scrollIntoView(true)
    Run keyword if    "${active?}"=="true"    Checkbox should be selected    //input[@id='field_IsActive']
    Validate value (value)    //input[@id='field_EmailSubj']    Email subject: ${AlertName}
    Validate value (value)    //input[@id='field_AlertName']    ${AlertName}
    Validate value (value)    //textarea[@id='field_SendToSpecificEmail']    ${Send to specific email?}
    Validate value (value)    //input[@id='field_FileNameFormat']    %[cid]%
    #Validate value (text)    //*[@id="idIncludeVisitReportEditbox"]/table/tbody/tr/td/span/button    ${Include in report}
    Validate value (text)    //*[@id="idSendAttachmentsEditbox"]/table/tbody/tr/td/span/button    ${Attachment}
    Validate value (text)    //textarea[@id='field_AlertCondition']    ${condition}
    Validate value (value)    //input[@id='field_SendToSpecificSms']    ${empty}
    Validate value (text)    //*[@id="idStatusToSendEditbox"]/table/tbody/tr/td/span/button    ${Send when in this status}
    Set global variable    ${Attachment}

Add new alert.AD
    log to console    Adding new alert. Please wait
    Check errors on page [-1]
    Wait until page contains element    //button[@class='btn-input']
    click button    //button[@class='btn-input']
    Wait until page contains element    //input[@id='field_AlertName']
    Select dropdown.AD    //*[@id="idIncludeVisitReportEditbox"]/table/tbody/tr/td/span/button    //body/div[4]/ul/li[5]/label/span
    Set checkbox.AD    //input[@id='field_IsActive']    true
    Input text    //input[@id='field_AlertName']    ${AlertName}
    Input text    //input[@id='field_EmailSubj']    Email subject: ${AlertName} rev date ${DD.MM.YY}
    Input text    //textarea[@id='field_SendToSpecificEmail']    robotmailbox01@gmail.com
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    click element    //input[@id='addnew']
    Check errors on page [-1]
    Page should contain link    default=Back to clients list
    Page should contain link    default=Back to main menu
    Log to console    Added alert (name="${AlertName}", status="Active", Email subject="${AlertName} rev date ${DD.MM.YY}", field_SendToSpecificEmail=oksana_konyk@ukr.net)

set index
    ${URL in}=    set variable    0
    set global variable    ${URL in}

Add/Edit label.AD
    [Arguments]    ${LabelName}    ${DaysFromApproval}    ${AutoChangeAfter}    ${Automatically change to this label}
    log to console    Searching new label. Please wait...
    go to.AD    ${URL}/client-statuses.php?&ClientID=${found ID}
    #
    Page should contain link    default=Back to clients list
    Page should contain link    default=Back to main menu
    ##
    ${text is visible?}    Run keyword and return status    Page should contain    ${LabelName}
    Run keyword if    ${text is visible?}    Click link    default=${LabelName}
    ...    ELSE    Go to    ${URL}/client-statuses.php?__t=1660851548&addnew=yup&ClientID=${found ID}
    Check errors on page [-1]
    Wait until page contains element    //input[@id='field_StatusName']
    Input text    //input[@id='field_StatusName']    ${LabelName}
    #
    Page should contain element    //*[@id="idAllowCommentsToQuestionsEditbox"]/table/tbody/tr/td/span/button
    Page should contain element    //*[@id="idAutoChangeToThisStatusForNewEditbox"]/table/tbody/tr/td/span/button
    Page should contain element    //*[@id="idAllowQuickChangeFromStatusEditbox"]/table/tbody/tr/td/span/button
    #
    Page should contain link    default=Back to clients list
    Page should contain link    default=Back to main menu
    Page should contain link    default=Cancel
    ##
    Set checkbox.AD    //input[@id='field_AutoChangeToThisStatus']    ${Automatically change to this label}
    #
    Run keyword if    "${Automatically change to this label}"=="true"    Input text    //input[@id='field_DaysFromApproval']    ${DaysFromApproval}
    Run keyword if    "${Automatically change to this label}"=="true"    Input text    //input[@id='field_AutoChangeAfter']    ${AutoChangeAfter}
    Run keyword if    "${Automatically change to this label}"=="true"    Set checkbox.AD    //input[@id='field_Sunday']    true
    Run keyword if    "${Automatically change to this label}"=="true"    Set checkbox.AD    //input[@id='field_Monday']    true
    Run keyword if    "${Automatically change to this label}"=="true"    Set checkbox.AD    //input[@id='field_Tuesday']    true
    Run keyword if    "${Automatically change to this label}"=="true"    Set checkbox.AD    //input[@id='field_Wednesday']    true
    Run keyword if    "${Automatically change to this label}"=="true"    Set checkbox.AD    //input[@id='field_Thursday']    true
    Run keyword if    "${Automatically change to this label}"=="true"    Set checkbox.AD    //input[@id='field_Friday']    true
    Run keyword if    "${Automatically change to this label}"=="true"    Set checkbox.AD    //input[@id='field_Saturday']    true
    Run keyword if    "${Automatically change to this label}"=="true"    Set checkbox.AD    //input[@id='field_TriggersAlertsReporocess']    true
    ###
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    Log to console    Added/edited label name = "${LabelName}"
    Page should contain    ${LabelName}

Set Operation settings.AD
    log to console    Grabbing ID for manager user and analyst
    go to.AD    ${URL}/search-page.php?searchBox=ROBOT+%5BMANAGER%5D&searchBoxHidden=&search_submitted=1
    Page should contain    ROBOT [MANAGER]
    ${Manager ID}=    Get Text    //td[@class='report-firstcol']
    go to.AD    ${URL}/company-operation.php
    Wait until page contains element    //input[@id='field_ShowInternalApprovedButton']
    ###
    click element    //*[@id="idOpMgrUserLinkEditbox"]/table/tbody/tr/td/span/button/span[1]
    Select dropdown.AD    //*[@id="idAllowShopperToChangeJobBoardOrderDatesEditbox"]/table/tbody/tr/td/span/button    //div[2]/ul/li[1]/label
    Select dropdown.AD    //*[@id="idTimeZoneEditbox"]/table/tbody/tr/td/span/button    //div[3]/ul/li[339]/label
    Select dropdown.AD    //*[@id="idSendActivatedShopperMessageEditbox"]/table/tbody/tr/td/span/button    //body/div[7]/ul/li[3]/label
    sleep    1
    Click ELEMENT    //*[@id="idOpMgrUserLinkEditbox"]/table/tbody/tr/td/span/button
    Scroll Element Into View    xpath=//li[contains(.,'${ManagerUsername}')]
    click element    xpath=//li[contains(.,'${ManagerUsername}')]
    #Select multiselect box    id=field_OpMgrUserLink    ${Manager ID}
    #Select dropdown    //*[@id="idOpMgrUserLinkEditbox"]/table/tbody/tr/td/span/button    //span[contains(.,'${ManagerUsername}')]    #xpath=//li[contains(.,'${ManagerUsername}')]
    Select dropdown.AD    //*[@id="idBcrUserLinkEditbox"]/table/tbody/tr/td/span/button    //span[contains(.,'${ManagerUsername}')]    #//div[9]/ul/li[139]/label/span
    click element    //*[@id="idBcrUserLinkEditbox"]/table/tbody/tr/td/span/button
    Select dropdown.AD    //*[@id="idDigestCheckerMessagesEditbox"]/table/tbody/tr/td/span/button    //div[6]/ul/li[1]/label/span
    ###
    Page should contain    Advanced options
    Select dropdown.AD    //*[@id="idQAUserLinkEditbox"]/table/tbody/tr/td/span/button    //span[contains(.,'${ManagerUsername}')]
    Validate value (text)    //*[@id="idDigestCheckerMessagesEditbox"]/table/tbody/tr/td/span/button    Send immediately
    Validate value (text)    //*[@id="idOpMgrUserLinkEditbox"]/table/tbody/tr/td/span/button    ${ManagerUsername}
    Run keyword and ignore error    Validate value (text)    //*[@id="idQAUserLinkEditbox"]/table/tbody/tr/td/span/button    ${ManagerUsername}
    Run keyword and ignore error    Validate value (text)    //*[@id="idBcrUserLinkEditbox"]/table/tbody/tr/td/span/button    ${ManagerUsername}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Operation settings saved successfully
    Log to console    Saved text for editor box(es).
    go to.AD    ${URL}/company-operation.php
    Wait until page contains element    //input[@id='field_ShowInternalApprovedButton']
    ###
    Set checkbox.AD    //input[@id='field_ShowInternalApprovedButton']    None
    Set checkbox.AD    //input[@id='field_AllowShopperToRemoveeAttachments']    true
    Set checkbox.AD    //input[@id='field_AllowShopperToChangeOrders']    None
    Set checkbox.AD    //input[@id='field_AllowShopperToChangeAssignedOrderDates']    None
    Set checkbox.AD    //input[@id='field_AllowShoppersToChangeBundledOrderDate']    None
    Input text    //input[@id='field_MaxFailedPassword']    5
    Input text    //input[@id='field_PhoneRetriesMax']    2
    Set checkbox.AD    //input[@id='field_PhoneRetriesWaitTime']    1
    Input text    //input[@id='field_BonusEntitlementMinQaGrade']    5
    Input text    //input[@id='field_time_till_submitting_online_Hours']    3
    Input text    //input[@id='field_time_till_submitting_online_FixedBonus']    124
    Input text    //input[@id='field_time_till_submitting_online_PercentageBonus']    11
    Set checkbox.AD    //input[@id='field_AllowShopperSendMessages']    true
    Select dropdown.AD    //*[@id="idQAUserLinkEditbox"]/table/tbody/tr/td/span/button    //span[contains(.,'${ManagerUsername}')]
    click element    //*[@id="idQAUserLinkEditbox"]/table/tbody/tr/td/span/button
    Set checkbox.AD    //input[@id='field_CheckerNotifyAssignmentByEmail']    true
    Set checkbox.AD    //input[@id='field_CheckerNotifyAssignmentBySms']    None
    Set checkbox.AD    //input[@id='field_CheckerNotifyAsgnCancellationByEmail']    true
    Set checkbox.AD    //input[@id='field_CheckerNotifyAsgnCancellationBySms']    None
    Set checkbox.AD    //input[@id='field_CheckerNotifyAsgnApplicationApprovalEmail']    true
    Set checkbox.AD    //input[@id='field_CheckerNotifyAsgnApplicationApprovalSms']    None
    Set checkbox.AD    //input[@id='field_CheckerNotifyAsgnApplicationRejectionEmail']    true
    Set checkbox.AD    //input[@id='field_CheckerNotifyAsgnApplicationRejectionSms']    None
    Set checkbox.AD    //input[@id='field_UsePasswordPolicy']    None
    Input text    //input[@id='field_SmsPeriodStart']    09:00
    Input text    //input[@id='field_SmsPeriodEnd']    18:00
    Input text    //input[@id='field_EmailPeriodStart']    01:00
    Input text    //input[@id='field_EmailPeriodEnd']    23:59
    Set checkbox.AD    //input[@id='field_BcrUpdateBySms']    None
    Set checkbox.AD    //input[@id='field_BcrUpdateByEmail']    true
    Set checkbox.AD    //input[@id='field_QAUpdateBySms']    None
    Set checkbox.AD    //input[@id='field_QAUpdateByEmail']    true
    Input text    //input[@id='field_DaysCleanChkMsg']    1
    Set checkbox.AD    //input[@id='field_UseMilesDistance']    None
    ###
    ###
    set focus to element    //input[@id='save']
    click element    //input[@id='save']
    Log to console    Operation page edited and saved
    Check errors on page [-1]
    Wait until page contains    Operation settings saved successfully
    go to.AD    ${URL}/company-operation.php
    Log to console    Rechecking the results after saving
    Wait until page contains element    //input[@id='field_ShowInternalApprovedButton']
    Log to console    Operation settings saved successfully
    Run keyword and ignore error    Validate value (text)    //*[@id="idOpMgrUserLinkEditbox"]/table/tbody/tr/td/span/button    ${ManagerUsername}
    Run keyword and ignore error    Validate value (text)    //*[@id="idQAUserLinkEditbox"]/table/tbody/tr/td/span/button    ${ManagerUsername}

Scorecard handling details page: Disapprove a review.AD
    [Arguments]    ${ReviewID}
    go to.AD    ${URL}/crit-handling-details.php?CritID=${ReviewID}
    Log to console    Open ${URL}/crit-handling-details.php?CritID=${ReviewID}
    Log to console    1. Checking page elements 2. Review status (="Finished, awaiting approval") 3. Clicking "Disapprove" button
    Wait Until Page Contains Element    id=approveCrit
    Check errors on page [-1]
    Review handling details.Check default elements
    Page should contain element    id=checkAndSendAlerts
    #Page should contain element    id=disapproveAndReOrder
    Page should contain element    //input[@class='btn-input']
    Page should contain element    id=SimulateAlerts
    Page should contain element    id=SimulateReview
    Page should contain    Finished, awaiting approval
    #Element Text Should Be    //span[@class='CritInfoItem'][18]    Finished, awaiting approval
    Page should contain    ${ReviewID}
    #Element Text Should Be    //span[@class='CritInfoItem'][19]    ${ReviewID}

Disapprove review.AD
    go to.AD    ${URL}/crit-handling-details.php?CritID=${Review Number}
    set focus to element    //input[@id='checkAndSendAlerts']
    Click element    css:[class="fieldset_toggler"]
    sleep    2
    Run keyword and ignore error    select frame    //*[@id="cke_contents_messageToShopper1"]/iframe
    Run keyword and ignore error    select frame    //*[@id="cke_3_contents"]/iframe
    Run keyword and ignore error    Input text    css:[class="cke_show_borders"]    Disapproved by manager REV DATE: ${DD.MM.YY}
    Run keyword and ignore error    Input text    css:[class="cke_editable cke_editable_themed cke_contents_ltr cke_show_borders"]    Disapproved by manager REV DATE: ${DD.MM.YY}
    Unselect frame
    click element    //input[@id='disapproveCrit']
    Page should contain    Disapproved
    Check errors on page [-1]
    #Element Should Contain    //span[@class='CritInfoItem'][18]    Approved
    Log to console    Review status has been changed (previous status: "Finished, awaiting approval"; current status: "Disapproved")
    Log to console    Review `${ReviewID}` has been Disapproved by manager

Approve review.AD
    go to.AD    ${URL}/crit-handling-details.php?CritID=${Review Number}
    Log to console    Approving review...
    Scroll Element Into View    id=approveCrit
    Click button    id=approveCrit
    Check errors on page [-1]
    Page should contain    Approved
    #Element Should Contain    //span[@class='CritInfoItem'][18]    Approved
    Log to console    Review status has been changed (previous status: "Finished, awaiting approval"; current status: "Approved")
    Log to console    Review `${Review Number}` has been approved by manager (+)

Return review to shopper (handling page)
    go to.AD    ${URL}/crit-handling-details.php?CritID=${ReviewID}
    Wait until page contains element    //input[@id='approveCrit']
    #Click link    default=Return review to shopper
    Set focus to element    //input[@id='approveCrit']
    Click link    default=Return review to shopper
    Run keyword and ignore error    Wait until page contains element    //*[@id="cke_2_contents"]/iframe
    Run keyword and ignore error    select frame    //*[@id="cke_2_contents"]/iframe
    Run keyword and ignore error    select frame    //a[@id='cke_55']/span[@class='cke_icon']
    Run keyword and ignore error    Input text    css:[class="cke_editable cke_editable_themed cke_contents_ltr cke_show_borders"]    Returned by manager REV DATE: ${DD.MM.YY}
    Run keyword and ignore error    Input text    css:[cke_contents]    Returned by manager REV DATE: ${DD.MM.YY}
    Unselect frame
    click element    //input[@id='returnCritToChecker']
    Run keyword and ignore error    Page should contain    Review was sent back to reviewer
    Check errors on page [-1]
    Log to console    Manager clicked return review to a shopper button - ID `${ReviewID}`
    Run keyword and ignore error    Page should contain    Yes, Returned 1 times

Job board and get columns ID by title
    Check errors on page [-1]
    ${index}    Set Variable    1
    ${Rows} =    Get Element Count    ${Order Table}/tbody/tr    #how many order rows do we have
    Log To Console    how many order rows do we have? = ${Rows}
    #iterate for each row    How many order rows do we have? = "${Rows}"
    FOR    ${rowindex}    IN RANGE    ${Rows}
        Log    ${rowindex}
        Set global variable    ${index}
        Get column titles.SD    ${Order Table}    ${Rows}
    END

Check default reset password elements.AD
    Page should contain    Recover password
    Page should contain    Please specify your user name or email address, and the password will be sent to you.
    Page should contain element    //*[@id="side_menu"]/tbody/tr/td/div/a
    Page should contain    User name or Email address:
    Check errors on page [-1]
    Page should contain element    //table[@id='side_menu']/tbody/tr/td[@class='middle-right']/div[@class='p-menu-language']/a[@class='linkClass']
    Page should contain link    default=Login again
    #Page should contain element    //*[@id="top_title_graphics"]/tbody/tr[1]/td[1]/img
    Log to console    OK! Default reset password elements are present

Check default reset password elements.SD
    Page should contain    Recover password
    Page should contain    Please specify your user name or email address, and the password will be sent to you.
    Page should contain element    //*[@id="set-language"]
    Page should contain    User name or Email address:
    Check errors on page [-1]
    Page should contain element    //div[4]
    Page should contain link    default=Login again
    #Page should contain element    //table/tbody/tr/td[1]/table/tbody/tr/td[1]/img
    Log to console    OK! Default reset password elements are present

Remove Captcha.AD
    go to.AD    ${URL}/company-info.php
    Log to console    Go to ${URL}/company-info.php
    Set checkbox.AD    //input[@id='field_LoginCaptcha']    None
    Input text    //input[@id='field_CaptchaSecret']    ${EMPTY}
    Input text    //input[@id='field_CaptchaCode']    ${EMPTY}
    click element    //input[@id='save']
    Log to console    Captcha is disabled

Set Assessor display settings
    go to.AD    ${URL}/company-checker-disp.php

Allow assessor to modify these fields about himself.AD
    [Arguments]    ${expected status}
    go to.AD    ${URL}/company-checker-disp.php
    Wait until page contains element    //input[@id='field_CheckerDEF_IsTelephonic']
    Page should contain    Define default options for new shoppers
    Log to console    Enable all options at "Define default options for new interviewers" section
    ####
    Set checkbox.AD    //input[@id='field_CheckerSEF_Fullname']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Password']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_z_Picture']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_CityName']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Address']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_HouseNumber']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Zipcode']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_ZipcodeAdditional']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_AvailabilityRadious']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Phone']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Phone2']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Phone3']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_VOIPPhone']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Email']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_BirthDate']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_IdNumber']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_SSN']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Skype']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_ICQ']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Messenger']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_z_Properties']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Remove_me']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCanDeletePersonalData']    ${expected status}
    ###
    Check errors on page [-1]
    Click element    //input[@id='save']
    Wait until page contains    display settings saved successfully

Show these columns in the "Scorecard history" screen.AD
    [Arguments]    ${expected status}
    go to.AD    ${URL}/company-checker-disp.php
    Log to console    Open ${URL}/company-checker-disp.php
    Wait until page contains element    //input[@id='field_CheckerDEF_IsTelephonic']
    Page should contain    Define default options for new shoppers
    Log to console    Enable all options at "Define default options for new interviewers" section
    ####
    Set checkbox.AD    //input[@id='field_CheckerDEF_IsTelephonic']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSearch']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanAdd']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSearch']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanInitiateCrit']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanInitiateCrit']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_AutomaticCritApproval']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_AutomaticCritApproval']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_ConfirmAssignment']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_ConfirmAssignment']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyBySms']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyBySms']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyByEmail']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyByEmail']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditAvailability']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditAvailability']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditSelfInfo']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditSelfInfo']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeSetsPreview']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeSetsPreview']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeCritHistory']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeCritHistory']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_UseVAT']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_UseVAT']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeRefundReport']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeRefundReport']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanAddRefundRecords']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanAddRefundRecords']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditRegions']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditRegions']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeBranchAddresses']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeBranchAddresses']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanApplyForOrders']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanApplyForOrders']    ${expected status}
    ####
    Set checkbox.AD    //input[@id='field_CheckerSEF_Fullname']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Password']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_z_Picture']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_CityName']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Address']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_HouseNumber']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Zipcode']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_ZipcodeAdditional']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_AvailabilityRadious']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Phone']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Phone2']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Phone3']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_VOIPPhone']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Email']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_BirthDate']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_IdNumber']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_SSN']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Skype']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_ICQ']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Messenger']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_z_Properties']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerSEF_Remove_me']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCanDeletePersonalData']    ${expected status}
    ###
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_CritID']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_FinishTime']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_ActualFinishTime']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_ClientName']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_BranchName']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_SetName']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_Status']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_Result']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_QaGradeAdjusted']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_QaDoneByUser']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_QaNote']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerCritHistoryCol_LinkedMoneySum']    ${expected status}
    Check errors on page [-1]
    Click element    //input[@id='save']
    Wait until page contains    display settings saved successfully

Set shoppers settings.AD
    [Arguments]    ${exp value}
    go to.AD    ${URL}/checkers.php?edit=${found ID}
    Wait until page contains element    //*[@id="tabs"]/ul/li[1]/a
    Click element    //*[@id="tabs"]/ul/li[5]
    Wait until page contains element    //input[@id='field_IsTelephonic']
    ####
    Set checkbox.AD    //input[@id='field_IsTelephonic']    ${exp value}
    Set checkbox.AD    //input[@id='field_IsSelfRegistered']    ${exp value}
    Set checkbox.AD    //input[@id='field_AutomaticCritApproval']    None
    Set checkbox.AD    //td[@id='idCanEditRegionsTedit']    ${exp value}
    Set checkbox.AD    //input[@id='field_IsSelfRegistered']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanAdd']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanInitiateCrit']    ${exp value}
    Set checkbox.AD    //input[@id='field_ConfirmAssignment']    ${exp value}
    Set checkbox.AD    //input[@id='field_NotifyBySms']    ${exp value}
    Set checkbox.AD    //input[@id='field_NotifyByEmail']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanEditAvailability']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanEditSelfInfo']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanSeeSetsPreview']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanSeeCritHistory']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanSeeRefundReport']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanAddRefundRecords']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanEditRegions']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanSeeBranchAddresses']    ${exp value}
    Set checkbox.AD    //input[@id='field_CanApplyForOrders']    ${exp value}
    ###
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Click element    //*[@id="tabs"]/ul/li[1]
    Wait until page contains element    //*[@id="save"]
    Click element    //*[@id="save"]
    Check errors on page [-1]
    Wait until page contains    saved successfully
    Log to console    [Shopper profile page] all default settings are set to "${exp value}" (TAB 5)

Define default options for new assessors.AD
    [Arguments]    ${expected status}
    go to.AD    ${URL}/company-checker-disp.php
    Wait until page contains element    //input[@id='field_CheckerDEF_IsTelephonic']
    Page should contain    Define default options for new shoppers
    Log to console    Enable all options at "Define default options for new interviewers" section
    ####
    Set checkbox.AD    //input[@id='field_CheckerDEF_IsTelephonic']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSearch']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanAdd']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSearch']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanInitiateCrit']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanInitiateCrit']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_AutomaticCritApproval']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_AutomaticCritApproval']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_ConfirmAssignment']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_ConfirmAssignment']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyBySms']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyBySms']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyByEmail']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_NotifyByEmail']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditAvailability']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditAvailability']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditSelfInfo']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditSelfInfo']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeSetsPreview']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeSetsPreview']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeCritHistory']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeCritHistory']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_UseVAT']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_UseVAT']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeRefundReport']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeRefundReport']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanAddRefundRecords']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanAddRefundRecords']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditRegions']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanEditRegions']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeBranchAddresses']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanSeeBranchAddresses']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanApplyForOrders']    ${expected status}
    Set checkbox.AD    //input[@id='field_CheckerDEF_CanApplyForOrders']    ${expected status}
    Check errors on page [-1]
    Click element    //input[@id='save']
    Wait until page contains    display settings saved successfully

Check records in tables.AD
    [Arguments]    ${expected records on page}
    Log to console    Opening page ...${URL}/company-display.php and checking records per page value
    go to.AD    ${URL}/company-display.php
    ${actual rec on page}=    Get Value    //input[@id='field_RecordsPerPage']    #//input[@id='field_RecordsPerPage']
    Should Be Equal As Strings    ${actual rec on page}    ${expected records on page}
    Log to console    ${\n}Setting value is saved properly on page: ${URL}/company-display.php and is equal to "${expected records on page}"
    Set global variable    ${expected records on page}
    ###
    Check records in tables keyword    /checkers.php
    Check records in tables keyword    /clients.php
    Check records in tables keyword    /surveys.php
    Check records in tables keyword    /table-fields.php
    Check records in tables keyword    /user-role-types.php
    Check records in tables keyword    /regions.php
    Check records in tables keyword    /countries.php
    Check records in tables keyword    /panelists.php
    Check records in tables keyword    /users.php
    Check records in tables keyword    /samples.php
    Check records in tables keyword    /survey-blacklists.php
    Check records in tables keyword    /client-actions.php
    Check records in tables keyword    /chapters.php
    Check records in tables keyword    /custom-scales.php
    Check records in tables keyword    /sets.php
    Check records in tables keyword    /set-type-characteristics.php
    Check records in tables keyword    /client-task-types.php
    Check records in tables keyword    /certificates.php
    Check records in tables keyword    /field-surveys.php
    Check records in tables keyword    /users-files.php
    Check records in tables keyword    /internet-surveys.php
    Check records in tables keyword    /panel-surveys.php
    Check records in tables keyword    /support-tickets.php
    Check records in tables keyword    /company-email-accounts.php
    Check records in tables keyword    /company-css-editor.php
    Check records in tables keyword    /icons-settings.php
    Check records in tables keyword    /sb-api.php
    Check records in tables keyword    /company-user-automatic-notifications.php
    Check records in tables keyword    /company-agreements.php
    Check records in tables keyword    /checker-props.php
    Check records in tables keyword    /qa-questions.php
    Check records in tables keyword    /currencies.php
    Check records in tables keyword    /settings-creditcards.php
    Check records in tables keyword    /settings-bank-names.php
    Check records in tables keyword    /stage-types.php
    Check records in tables keyword    /cash-flow-types.php
    Check records in tables keyword    /settings-creditcard-types.php
    Check records in tables keyword    /settings-holidays.php
    Check records in tables keyword    /alt-langs.php
    Check records in tables keyword    /client-cash-flow-types.php
    Check records in tables keyword    /company-panel-trns-types.php
    Check records in tables keyword    /settings-special-days.php
    Check records in tables keyword    /table-fields.php
    Check records in tables keyword    /attachment-types.php
    log to console    Status: Done (+)
    ###

Enable agreementsNEW.SD
    ${required-agreements}=    Set variable    //div[@class='agreements']/form/div[@class='agreement']/div[@class='checkbox']/input
    ${is required-agreements visible?}=    Run Keyword And Return Status    Element Should Be Visible    ${required-agreements}
    ${Continue button visible}=    Run Keyword And Return Status    Element Should Be Visible    //div[@class='agreements']/form/div[@class='agreement']/div[@class='checkbox']/input
    Run keyword if    '${Continue button visible}'=='True'    check agreement error
    ${index}    Set Variable    1
    #iterate for each row
    FOR    ${i}    IN RANGE    10
        ${I agree}=    Run Keyword And Return Status    Element Should Be Visible    //div[@class='agreements']/form/div[@class='agreement'][${index}]/div[@class='checkbox']/input    #//body/div[2]/form/div[${index}]/div[2]/input
        Set global variable    ${index}
        Run keyword if    '${I agree}'=='False'    exit for loop
        Run keyword if    '${I agree}'=='True'    Click element    //div[@class='agreements']/form/div[@class='agreement'][${index}]/div[@class='checkbox']/input
        ${index}    evaluate    ${index}+1
        ${Continue button visible}=    Run Keyword And Return Status    Element Should Be Visible    //body/div[2]/form/input[2]
        Run keyword if    '${Continue button visible}'=='True'    click element    //body/div[2]/form/input[2]
    END

Register random shopper.SD
    #Set assessors self registration options
    go to.AD    ${URL}/company_shopper_reg.php
    Wait until page contains element    //input[@id='field_AllowCheckerSelfReg']
    ${Auto approve self registered}=    Get Element Attribute    //input[@id='field_AutoApproveSelfReg']    checked
    Run keyword if    '${Auto approve self registered}'=='None'    Click element    //input[@id='field_AutoApproveSelfReg']
    ${checked}=    checkbox should be selected    //input[@id='field_AutoApproveSelfReg']
    Click element    //input[@id='save']
    Open registration page and check agreement box(es)
    ${random string}=    Generate Random String    8    [LETTERS]
    set global variable    ${random string}
    ${mobile}=    Generate Random String    5    [NUMBERS]
    set global variable    ${mobile}
    Self register of new shopper.SD    RF-${random string}    ${Robot country 01}    ${Robot region 01}    ${Robot city 01}    RF-${random string}@gmail.com    ${mobile}
    Click element    //input[@id='addnew']
    Page should contain    Thank you for registering on our website.

Enter editor text.AD
    [Arguments]    ${Editor element}    ${input text}
    Wait until page contains element    ${Editor element}    8
    set focus to element    ${Editor element}
    click element    ${Editor element}
    #Run keyword and ignore error    click element    css:[class="cke_off cke_button_source"]
    Run keyword and ignore error    set focus to element    css:[class="cke_source cke_reset cke_enable_context_menu cke_editable cke_editable_themed cke_contents_ltr"]
    #Run keyword and ignore error    click element    css:[cke_button cke_button__source cke_button_on]
    Log to console    Entering text (element = "${Editor element}") . Please wait....
    Run keyword and ignore error    Input text    css:[class="cke_source cke_reset cke_enable_context_menu cke_editable cke_editable_themed cke_contents_ltr"]    ${input text}    #css:[class="cke_source cke_reset cke_enable_context_menu cke_editable cke_editable_themed cke_contents_ltr"]    css:[class="cke_source cke_enable_context_menu"]
    Run keyword and ignore error    Input text    css:[class="cke_source cke_enable_context_menu"]    ${input text}
    #Run keyword and ignore error    click element    css:[class="cke_off cke_button_source"]
    #Run keyword and ignore error    click element    css:[cke_button cke_button__source cke_button_on]
    click element    ${Editor element}
    Check errors on page [-1]

Add icon.AD
    [Arguments]    ${exp name}    ${location}    ${expected result}
    go to.AD    ${URL}/icons-settings.php?page_var_divide_recordsPerPage=2000
    Log to console    ADDING ICON at (${exp name} icon)
    Wait until page contains element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Page should contain element    xpath=//a[@href="main-menu.php"]
    ${is element visible?}    Run Keyword And Return Status    Page should contain    ${exp name}
    Log to console    Searching "${exp name}" icon...
    Run keyword if    ${is element visible?}    click link    default=${exp name}
    ...    ELSE    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Wait until page contains element    //input[@id='field_W9IconName']
    Input text    //input[@id='field_W9IconName']    ${exp name}
    Page should contain link    default=Cancel
    Page should contain    Max size: 50k, Allowed file types: .gif,.jpg,.jpeg,.png,.bmp
    Page should contain element    xpath=//a[@href="main-menu.php"]
    Log to console    File ${location}
    Choose File    //table[@class='tedit']/tbody/tr[2]/td[2]/input[1]    ${location}
    Click Save/Add/Delete/Cancel button.AD
    #Wait until page contains    ${expected result}
    Log to console    Added "${exp name}" icon
    Log to console    --------------------------
    Check errors on page [-1]
    go to.AD    ${URL}/icons-settings.php?page_var_divide_recordsPerPage=2000
    Wait until page contains element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Page should contain    ${exp name}

Update icon.AD
    [Arguments]    ${exp name}    ${location}
    go to.AD    ${URL}/icons-settings.php?page_var_divide_recordsPerPage=2000
    Log to console    UPDATING ICON at ${URL}/icons-settings.php (${exp name} icon)
    Wait until page contains element    //button[@class='btn-input']
    Page should contain element    xpath=//a[@href="main-menu.php"]
    ${is element visible?}    Run Keyword And Return Status    Page should contain    ${exp name}
    Log to console    Searching "${exp name}" icon. If YES - return from keyword
    Return from keyword if    '${is element visible?}'=='False'
    Click link    default=${exp name}
    Check errors on page [-1]
    Input text    //input[@id='field_W9IconName']    ${exp name}
    Page should contain link    default=Cancel
    Page should contain element    xpath=//a[@href="main-menu.php"]
    #Set focus to element    //*[@id="tedit33"]/table/tbody/tr/td/table/tbody/tr[2]/td[2]/input[1]
    #Click element    //*[@id="tedit33"]/table/tbody/tr/td/table/tbody/tr[2]/td[2]/input[1]
    Choose File    //table[@class='tedit']/tbody/tr[2]/td[2]/input[1]    ${location}
    Click element    //input[@id='save']
    Log to console    Updated "${exp name}" icon
    Log to console    --------------------------
    Wait until page contains    Item '${exp name}' saved successfully
    Check errors on page [-1]

Delete icon.AD
    [Arguments]    ${exp name}
    go to.AD    ${URL}/icons-settings.php?page_var_divide_recordsPerPage=2000
    Log to console    DELETING ICON at ${URL}/icons-settings.php ("${exp name}" icon)
    Wait until page contains element    //button[@class='btn-input']
    click link    default=${exp name}
    click element    //input[@id='delete']
    Wait until page contains    Are you sure you want to erase the record ${exp name}?
    click element    //form/input[@id='sure_delete']
    Wait until page contains    Item ${exp name} deleted successfully
    Log to console    "${exp name}" icon has been deleted successfully
    Log to console    --------------------------
    Check errors on page [-1]

Check positive registration result message
    Page should contain    Thank you for registering on our website
    Page should contain    Save Trees - Please consider the environment before printing this e-mail
    Page should contain    This electronic mail transmission contains confidential information intended only for the person(S) named. Any use, distribution, copying, or disclosure by any other person is strictly prohibited. If you received this transmission in error, please notify the sender by reply e-mail and then destroy the message. Opinions, conclusions, and other information in this message that do not relate to the official business of the Company shall be understood to be neither given nor endorsed by Company. When addressed to Company clients, any information contained in this e-mail is subject to the terms and conditions in the governing client contract.
    Page should contain    ****************************************Disclaimer**********************************************
    Page should contain    Modification date: ${DD.MM.YY}
    Page should contain    Thank you for registering.
    Page should contain    You will be contacted soon.
    Check errors on page [-1]

Check registration message
    Page should contain    Hello, and welcome to
    Page should contain    Checker Inc.
    Page should contain    shopper registration page.
    Page should contain    Please enter your details below, and we will contact you as soon as a new recruiting cycle is started.
    Page should contain    Important!
    Page should contain    Please use a user name and password that you can remember.
    Page should contain    RF REVN DT:
    Run keyword and ignore error    Page should contain    ${DD.MM.YY}
    Page should contain    ENV/SYS:
    Check errors on page [-1]

Operation panel > Cancel expired orders.AD
    [Arguments]    ${RobotTestClient}
    go to.AD    ${URL}/operation-panel.php
    Log To Console    Let`s cancel all orders for test client --> "${RobotTestClient}"
    Page should contain element    //select[@id='StatusID']
    Page should contain element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button
    Page should contain element    //select[@id='wsbts']
    Page should contain element    //input[@id='zipcode']
    Page should contain element    //input[@id='radius']
    Page should contain element    //input[@id='start_date']
    #Page should contain element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[5]/td[2]/span/button
    Page should contain element    //input[@id='CheckerID_qs']
    Page should contain element    //*[@id="CheckerID_div"]/table/tbody/tr/td/span/button
    Page should contain element    //select[@id='BudgetControlStatus']
    Page should contain element    //input[@id='end_date']
    Page should contain element    //select[@id='UserLink']
    Page should contain element    //select[@id='DuplicateOrders']
    Page should contain element    //select[@id='DateType']
    Page should contain element    //select[@id='sPublicized']
    #----------------------------#
    Log to console    searching orders of test client
    Set Focus To Element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button
    sleep    1
    Scroll Element Into View    xpath=//option[contains(.,'${RobotTestClient}')]
    #Input text    //div[4]/div/div/input    Auto tests
    Click element    //div[4]/ul/li[11]/label/span
    sleep    1
    Select dropdown.AD    //*[@id="StatusID"]    //*[@id="StatusID"]/option[14]
    Click element    //input[@id='update']
    Click element    //input[@id='show']
    Wait until page contains element    //form[@id='frm']/input[1]
    Click element    //form[@id='frm']/input[1]
    Click element    //input[@id='cancelOrders']
    sleep    1
    Wait until page contains    orders canceled.
    Page should not contain    //span[contains(.,'${RobotTestClient}')]
    Check errors on page [-1]
    Log to console    Select filter="unassigned", select all orders, press Cancel and confirm
    Log to console    Dropbox "Client name" does not contain "${RobotTestClient}"
    Log to console    Page does not contain text: ${RobotTestClient}
    Log to console    Page does not contain text: ${test order description}
    Check errors on page [-1]
    Log to console    "${RobotTestClient}" orders (unassigned) were cancelled!

GMAIL: FOOTER (users)
    Should Contain    ${payload}    ${DD.MM.YY}    # email footer text
    Should Contain    ${payload}    Your friendly Mystery Shopping    # email footer text
    Should Contain    ${payload}    <a href="https://www.checker-soft.com/">https://www.checker-soft.com</a></p>
    Should Contain    ${payload}    This is a test "Email footer for users" message. Please ignore it.
    Should Contain    ${payload}    RF REVN DT
    Should Contain    ${payload}    ENV/SYS
    Should Contain    ${payload}    <a href="${URL}">${URLIndex}</a>
    Log to console    Footer (email) text is correct

GMAIL: FOOTER (shoppers)
    #    Should Contain    ${payload}    ${DD.MM.YY}    # email footer text
    Should Contain    ${payload}    Your friendly Mystery Shopping    # email footer text
    Should Contain    ${payload}    <a href="https://www.checker-soft.com/">https://www.checker-soft.com</a></p>
    Should Contain    ${payload}    This is a test "Email footer for shoppers" message. Please ignore it.
    Should Contain    ${payload}    RF REVN DT
    Should Contain    ${payload}    ENV/SYS
    Should Contain    ${payload}    <a href="${URL}">${URLIndex}</a>
    Log to console    Footer (email) text is correct (+)

GMAIL: BRIEFING
    Should Contain    ${HTML}    Briefing content:    # email footer text
    #Should Contain    ${HTML}    Mod date: ${DD.MM.YY}    # email footer text
    Should Contain    ${HTML}    What Is a Content Brief?    # email footer text
    Should Contain    ${HTML}    (2 min read)
    Should Contain    ${HTML}    A content brief is a document that compiles all the information a content creator needs to execute a piece of content. Usually, it’s created by a content strategist or editorial manager. The best content briefs seamlessly combine editorial direction and content strategy to ensure every piece of content is both well-written and primed to drive SEO results.
    Should Contain    ${HTML}    Every company has its own way of creating content briefs, and there are many valid approaches.
    Should Contain    ${HTML}    Order date:
    Log to console    Brief text is visible and is correct

GMAIL: delete all INBOX emails.AD
    Log to console    Deleting all inbox email. Please wait...
    Open Mailbox    host=${host}    user=${user}    password=${password}
    Mark All Emails As Read
    Delete All Emails
    Close Mailbox
    Log to console    ${\n}--------------------------Open Mailbox ("${RFShopperEmail}")--------------------------
    Open Mailbox    host=${host}    user=${RFShopperEmail}    password=${shopper email app password}
    Mark All Emails As Read
    Delete All Emails
    Close Mailbox

GMAIL: Assignment notification.AD
    [Arguments]    ${email subject}
    Log to console    Expected email: "Assignment notification"
    Set global variable    ${email subject}
    Log to console    ${\n}--------------------------Open Mailbox ("${RFShopperEmail}")--------------------------
    Open Mailbox    host=${host}    user=${RFShopperEmail}    password=${shopper email app password}
    Wait for expected email
    ${LATEST} =    Wait For Email    sender=info-${URL1index}-system@checker-soft.com    timeout=20
    Log to console    Done. Waiting email from sender="info-${URL1index}-system@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    ${RFShopperEmail}" <${RFShopperEmail}>
    should contain    ${subject}    Assignment notification
    ###
    log    ${LATEST}
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    Set global variable    ${HTML}
    Check default codes table    ${ReviewID}
    log    ${HTML}
    GMAIL: BRIEFING    # check email brief text
    GMAIL: FOOTER (shoppers)    # check email footer text
    # Returns the content of a header field
    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    ${Parsed_Token}=    Split String    ${Paser_Body}
    #${Parsed_Token}=    Get From List    ${Parsed_Token}    40    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Assignment email contains next info: ${\n}Name of the client - AUTO 01 [RF CLIENT] ${\n}Purchase Invoice value - No Invoice Value ${\n}City to which the branch is linked - Robot city 01 ${\n}Opening hours of the branch - 07:00 - 18:00 ${\n}Description of the order with html tags - ${test order description} ${\n}Date of the order - ${DD.MM.YY} ${\n}Time of the order - ${order start_time} - ${order end_time} ${\n}Purchase description of the order - RF Purchase Description Single Order ${\n}Order ID number - ${found order ID}
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Assignment cancellation notification.AD
    Log to console    Expected email: "Assignment cancellation notification"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=60
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Assignment cancellation notification
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        set global variable    ${payload}
        GMAIL: FOOTER (users)    # email footer text
        Should Contain    ${payload}    Hello, Robot 02 [Full Name](date:09-10-2021),
        Should Contain    ${payload}    This is for the information that assigned job(s) to you has been canceled by the manager. It was assigned to another relevant available shopper. No need to call our company. We will contact you soon for more fieldwork.
        Should Contain    ${payload}    Regards,
        Should Contain    ${payload}    Checker Team
        Should Contain    ${payload}    Your assignment to 09.10.2021, branch RF Branch 01 (short name), city Kyiv have been canceled
        Should Contain    ${payload}    the store
        Should Contain    ${payload}    the day
        Should Contain    ${payload}    Password:
        Should Contain    ${payload}    BRIEFING
        Should Contain    ${payload}    (MOD DATE: ${DD.MM.YY})
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    log to console    ${LATEST}
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    log    ${HTML}
    # Returns the content of a header field
    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    ${Parsed_Token}=    Split String    ${Paser_Body}
    #${Parsed_Token}=    Get From List    ${Parsed_Token}    40    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: ALERT (no email body).AD
    [Arguments]    ${expected subject}
    Log to console    Expected email: "Alert"
    ${DD.MM.YY}=    Get Current Date    result_format=%d-%m-%Y
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=100
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    ${expected subject}
    ###
    Log to console    Email subject is correct (original text="${expected subject}")
    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: DISAPPROVED JOB.AD
    Log to console    Expected email: "Review disapproved"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=60
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....Expected email: "Scorecard disapproved"
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Review disapproved
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        GMAIL: FOOTER (shoppers)
        Should Contain    ${payload}    Disapproved by manager REV DATE: ${DD.MM.YY}
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    log to console    ${LATEST}
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    log    ${HTML}
    # Returns the content of a header field
    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    ${Parsed_Token}=    Split String    ${Paser_Body}
    #${Parsed_Token}=    Get From List    ${Parsed_Token}    40    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Review completed (internet review).AD
    [Arguments]    ${Branch}    ${Score}
    Log to console    Expected email: "Review complete"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=40
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Review complete:
    should contain    ${subject}    ${RobotTestClient}
    #should contain    ${subject}    -${Branch}
    ###
    Log to console    Email subject is correct
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        Should Contain    ${payload}    Review complete and requires approval!
        Should Contain    ${payload}    Branch: ${Branch}
        Should Contain    ${payload}    Result: ${Score}
        Should Contain    ${payload}    Click here to view the review.
    END
    ###
    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Review completed and requires approval.AD
    Log to console    Expected email: "Review complete"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=60
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Review complete: Robot 02 [Full Name], AutoTests Client${\n} 01-RF Branch 01 (short name)
    ###
    Log to console    Email subject is correct
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        Should Contain    ${payload}    Review complete and requires approval! Branch: RF Branch 01 (short name)
        Should Contain    ${payload}    Click here to view the review.
        Should Contain    ${payload}    Shopper: Robot 02 [Full Name] (Robot 02 [Short Name])
        Should Contain    ${payload}    Result:
    END
    ###
    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Scorecard was sent back.AD
    Log to console    Expected email: "Review was sent back"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=60
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Review ${ReviewID} was sent back
    ###
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        set global variable    ${payload}    # email footer text
        GMAIL: FOOTER (shoppers)    # email footer text \ \ \ # email footer text
        Should Contain    ${payload}    Click here to see list of unfinished reviews
        Should Contain    ${payload}    Returned by manager REV DATE: ${DD.MM.YY}
        Log to console    Email contains the needed text
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    ###
    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Sent mass email.AD
    [Arguments]    ${check footer for shoppers?}    ${check footer for users?}
    Log to console    Expected email: "Test Email Subject ${DD.MM.YY}"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-${URLIndex}-system@checker-soft.com    timeout=20
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=20sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Subject: Test Email (${DD.MM.YY})
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        set global variable    ${payload}
        Run Keyword If    "${check footer for shoppers?}"=="S"    GMAIL: FOOTER (shoppers)
        Run Keyword If    "${check footer for users?}"=="U"    GMAIL: FOOTER (users)    # check email footer text
        Should Contain    ${payload}    This test email was sent using page&nbsp;.../mass-sms.php
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    log to console    ${LATEST}
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    log    ${HTML}
    # Returns the content of a header field
    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    ${Parsed_Token}=    Split String    ${Paser_Body}
    #${Parsed_Token}=    Get From List    ${Parsed_Token}    40    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    OK. Mass email has been recieved and validated
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Survey order refusal.AD
    Log to console    Expected email: "Survey order refusal"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=60
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Survey order refusal: Robot 02 [Full Name], RF Branch 01${\n} (short name)
    ###
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        #Should Contain    ${payload}    <p><strong>This is a test message. Please ignore it.</strong></p>    # email footer text
        #Should Contain    ${payload}    <p>Your friendly Mystery Shopping boss<br />    # email footer text
        #Should Contain    ${payload}    _________________________________<br /> Address, city, and the lots... (Last modification date: ${DD.MM.YY})</p>    # email footer text
        Should Contain    ${payload}    The shopper Robot 02 Robot 02 [Full Name] (Robot 02 [Short Name])
        Should Contain    ${payload}    at the branch RF Branch 01
        Should Contain    ${payload}    refused to do the review from the date ${DD.MM.YY}
        Should Contain    ${payload}    Reason: n/a (date: ${DD.MM.YY})<BR>
        Should Contain    ${payload}    Region name: <B>Robot region 01</b><BR>
        Should Contain    ${payload}    City: <B>Robot city 01</b><BR>
        Should Contain    ${payload}    Phone: <B>+380670118780</b><BR>
        Should Contain    ${payload}    Email: <B>robotmailbox01@gmail.com,robotmailbox02@gmail.com</b><BR>
        Should Contain    ${payload}    Require confirmation after assignment: <B>Yes</b><BR>
        Should Contain    ${payload}    Full name: <B>Robot 02 [Full Name]</b><BR>
        Should Contain    ${payload}    Birth date: (min)7- (max)120 years: <B>02.02.2014</b><BR>
        Should Contain    ${payload}    Assessor characteristics:<BR>
        Should Contain    ${payload}    Autotest: <b>Autotest-YES</b><BR>
        Should Contain    ${payload}    Order details:<BR>
        Should Contain    ${payload}    Description:
        Should Contain    ${payload}    Order characteristics:<BR>
        Should Contain    ${payload}    <i>None defined</i><P>
        Should Contain    ${payload}    Date: <B>
        Should Contain    ${payload}    Limit for products payment : <B>4.00</b><BR>
        Should Contain    ${payload}    Questionnaire name: <B>Auto Questionnaire 03</b><BR>
        Should Contain    ${payload}    Client name: <B>AutoTests Client 01</b><BR>
        Should Contain    ${payload}    Short branch name: <B>RF Branch 01 (short name)</b><BR>
        Should Contain    ${payload}    Description: <B><p>${test order description}
        Log to console    Email contains needed text
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    ###
    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Assessor self registration(+profilePicture).AD
    Log to console    Expected email: "Assessor self registration"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=60
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Assessor self registration
    ###
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        #Should Contain    ${payload}    <p><strong>This is a test message. Please ignore it.</strong></p>    # email footer text
        #Should Contain    ${payload}    <p>Your friendly Mystery Shopping boss<br />    # email footer text
        #Should Contain    ${payload}    _________________________________<br /> Address, city, and the lots... (Last modification date: ${DD.MM.YY})</p>    # email footer text
        Should Contain    ${payload}    A new assessor has registered through the site.
        Should Contain    ${payload}    Name: RF-${random string}, Username: RF-${random string}, Picture: No
        Should Contain    ${payload}    Email
        Should Contain    ${payload}    RF-${random string}@gmail.com
        Should Contain    ${payload}    City Robot city 01
        Log to console    Email contains needed text
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    ###
    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Assessor self registration.AD
    Log to console    Expected email: "Shopper self registration"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=300
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Shopper self registration
    ###
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        #Should Contain    ${payload}    <p><strong>This is a test message. Please ignore it.</strong></p>    # email footer text
        #Should Contain    ${payload}    <p>Your friendly Mystery Shopping boss<br />    # email footer text
        #Should Contain    ${payload}    _________________________________<br /> Address, city, and the lots... (Last modification date: ${DD.MM.YY})</p>    # email footer text
        Should Contain    ${payload}    A new shopper has registered through the site.
        Should Contain    ${payload}    Name: RF-${random string}, Username: RF-${random string}, Picture: Yes
        Should Contain    ${payload}    Email
        Should Contain    ${payload}    RF-${random string}@gmail.com
        Should Contain    ${payload}    City Robot city 01
        Log to console    Email contains needed text
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    ###
    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Your user is now Active.AD
    Log to console    Expected email: "Your user is now Active"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=60
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Your user is now Active
    ###
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        set global variable    ${payload}    ${EMPTY}    # email footer text
        GMAIL: FOOTER (users)    # email footer text \ \ \ # email footer text
        Should Contain    ${payload}    Welcome,
        Should Contain    ${payload}    (MOD DATE: ${DD.MM.YY})
        Should Contain    ${payload}    You are now officially one of the Checker's researchers.
        Should Contain    ${payload}    You can now access our system and check the vacancies available.
        Should Contain    ${payload}    If you don't find vacancies available in your region at the moment, don't worry!
        Should Contain    ${payload}    Whenever new vacancies open, we will send an email to let you know, ok?
        Should Contain    ${payload}    We'll just need you to add us to your safe senders so you don't fall for spam and ensure you don't miss any of our opportunities.
        Log to console    Email contains needed text
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    ###
    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Message from an assessor.AD
    [Arguments]    ${exp subject}    ${expected body phrase}
    Log to console    Expected email: "Message from shopper"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=40
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email body...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    #Log to console    ${HTML}
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    ${exp subject}
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        Should Contain    ${payload}    ${expected body phrase}
        Log to console    Email contains next text: "${expected body phrase}"
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    # Returns the content of a header field
    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    ${Parsed_Token}=    Split String    ${Paser_Body}
    #${Parsed_Token}=    Get From List    ${Parsed_Token}    40    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    ${\n}--------------------------Deleting all inbox email. Closing Mailbox.

GMAIL: check subject and body.AD
    [Arguments]    ${exp subject}    ${expected body phrase}    ${from}
    Log to console    Expected email: "Other system email to check subject+content"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=robotmailbox01@gmail.com    timeout=20
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email body...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    #Log to console    ${HTML}
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    ${from}
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    ${exp subject}
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        Should Contain    ${payload}    ${expected body phrase}
        Log to console    Email contains next text: "${expected body phrase}"
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    # Returns the content of a header field
    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    ${Parsed_Token}=    Split String    ${Paser_Body}
    #${Parsed_Token}=    Get From List    ${Parsed_Token}    40    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    ${\n}--------------------------Deleting all inbox email. Closing Mailbox.

Add client user.AD
    go to.AD    ${URL}/users.php?page_var_filter_ClientName=${found ID}

Set Job board settings.AD
    [Arguments]    ${exp status}
    [Tags]    Critical
    go to.AD    ${URL}/settings-jobboard.php
    Log to console    Opening ${URL}/settings-jobboard.php
    Log to console    Let`s enable the required checkboxes
    #assigned_jobs BEFORE
    Wait until page contains element    //input[@id='field_AhrUpdateAboutAssignments']
    ##
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_57_label"]    ${Message to display when the job board is empty}${RF REVN DT}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_51_label"]    ${Message to display when the job board is empty}${RF REVN DT}
    Log to console    Editing "Message to display when the job board is empty"
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Set checkbox.AD    //input[@id='field_AhrUpdateAboutAssignments']    ${exp status}
    Set checkbox.AD    //input[@id='field_AhrUpdateAboutCriticisms']    ${exp status}
    Set checkbox.AD    //input[@id='field_AhrUpdateBySms']    ${exp status}
    Set checkbox.AD    //input[@id='field_AhrUpdateByEmail']    ${exp status}
    ###
    Select dropdown.AD    //*[@id="idAhrUserLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${ManagerUsername}')]    #//span[contains(.,'${ManagerUsername}')]
    Sleep    1
    Click element    //input[@id='save']
    Check errors on page [-1]
    go to.AD    ${URL}/settings-jobboard.php
    Validate value (text)    //*[@id="idAhrUserLinkEditbox"]/table/tbody/tr/td/span/button    ${ManagerUsername}
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Wait until page contains element    //input[@id='field_AhrUpdateAboutAssignments']
    #Select Frame    //*[@id="cke_1_contents"]/iframe
    #${actual text}=    Get text    //*[@id="cke_contents_field_EmptyJobBoardMsg"]
    Page Should contain    Hello, welcome to JOB BOARD
    Page Should contain    (this is a message when the job board is empty)
    Page Should contain    RF REVN DT:
    Page Should contain    ENV/SYS:
    Log to console    Reopening ${URL}/settings-jobboard.php... Assignments handling responsible = "${ManagerUsername}", checkboxes status= ${exp status}, Message to display when the job board is empty = "Hello, welcome to JOB BOARD (Modification date: ${DD.MM.YY})"

Validate value (text)
    [Arguments]    ${locator}    ${exp value}
    Wait until page contains element    ${locator}
    ${actual value}    Get text    ${locator}
    Should Be Equal    ${actual value}    ${exp value}
    Log to console    VALIDATION: "${exp value}" (+) (element= ${locator})

Select multiselect box
    [Arguments]    ${list ID}    ${exp value}    ${index}
    Wait until page contains element    ${list ID}
    Set focus to element    ${list ID}
    scroll element into view    ${list ID}
    #Click element    //div[${index}]/div/ul/li[2]/a/span[2]
    #Input text    //div[${index}]/div/div/input    ${ManagerUsername}
    #wait until page contains    ${exp value}
    Select from list by value    ${list ID}    ${exp value}
    #Click element    ${locator}
    Log    Selected ${exp value}

Add email acount.AD
    Go to2.AD    ${URL}/company-email-accounts.php
    Run keyword and ignore error    Check errors on page [2]
    Log to console    Open ${URL}/company-email-accounts.php and add test account
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Wait until page contains element    //button[@class='btn-input']    50
    Click button    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Wait until page contains element    //input[@id='field_FromName']    40
    Input text    //input[@id='field_FromName']    ${email account}
    Input text    //input[@id='field_Email']    ${email}
    Select dropdown.AD    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button    //body/div[2]/ul/li[2]/label
    Wait until page contains element    //input[@id='addnew']
    Input text    //input[@id='field_Email']    ${email}
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Click element    //input[@id='addnew']
    Wait until page contains    Item '${email account}' added successfully    60
    Wait until page contains    ${email account}
    Log to console    Item '${email account}' added successfully
    Run keyword and ignore error    Check errors on page [2]

Edit email acount.AD
    Go to2.AD    ${URL}/company-email-accounts.php
    Run keyword and ignore error    Check errors on page [2]
    Wait until page contains element    //button[@class='btn-input']
    ${index}    Set Variable    1
    ${Rows} =    Get Element Count    //*[@id="table_rows"]/tbody/tr    #how many order rows do we have
    Log To Console    how many order rows do we have? = ${Rows}
    #iterate for each row    How many order rows do we have? = "${Rows}"
    FOR    ${rowindex}    IN RANGE    ${Rows}
        Log    ${rowindex}
        ${found name in table}=    Get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]
        Log to console    Row #${index}. "${found name in table}"
        #Set global variable    ${id}
        Run Keyword If    "${found name in table}"=="${email account}"    click element    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]
        Run Keyword If    "${found name in table}"=="${email account}"    Log to console    Found. Row "${index}"
        Run Keyword If    "${found name in table}"=="${email account}"    exit for loop
        ${index}    Evaluate    ${index}+1
    END
    Log to console    End of the list
    Wait until page contains element    //*[@id="ideaIDEditbox"]    50
    ${email ID}=    Get text    //*[@id="ideaIDEditbox"]
    Set global variable    ${email ID}
    Log    ID = "${email ID}"
    Wait until page contains element    //input[@id='field_FromName']    25
    Input text    //input[@id='field_FromName']    ${email account}
    Input text    //input[@id='field_Email']    ${email}
    Select dropdown.AD    //*[@id="idEmailServerTypeEditbox"]/table/tbody/tr/td/span/button    //body/div[2]/ul/li[2]/label
    Input text    //input[@id='field_Email']    ${email}
    Click button    //input[@id='save']
    Wait until page contains    Item '${email account}' saved successfully    60
    Wait until page contains    ${email account}
    LOG TO CONSOLE    Item "${email account}" edited and saved
    Run keyword and ignore error    Check errors on page [2]

Delete email acount.AD
    @{urls}=    String.Split String    ${TestURLs}    ,
    SeleniumLibrary.Open Browser    ${urls[0]}    browser=chrome
    Maximize Browser Window
    FOR    ${URL}    IN    @{urls}
        Set global variable    ${URL}
        Enter existing login and password.AD    ${ManagerUsername}    ${ManagerPassword}
        Log to console    ------------------------TEARDOWN: deleting "${email account}"...
        Go to2.AD    ${URL}/company-email-accounts.php
        Wait until page contains element    //*[@id="page_division_wrapping_table"]/tbody/tr/td[1]/input[1]
        ${is element visible?}=    Run keyword and return status    Page should contain    ROBO`s mail
        Log to console    is test email account visible on page? = "${is element visible?}"
        Run Keyword If    '${is element visible?}'=='False'    exit for loop
        Run Keyword If    '${is element visible?}'=='True'    Edit email acount.AD
        Go to2.AD    ${URL}/company-email-accounts.php
        Wait until page contains element    //button[@class='btn-input']    40
        Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
        Click link    default=${email ID}
        Wait until page contains element    //input[@id='field_FromName']    60
        Click element    //input[@id='delete']
        Wait until page contains element    //input[@id='sure_delete']    60
        Wait until page contains element    //form/input[@id='cancel']
        Wait until page contains    Are you sure you want to erase the record ${email ID}?
        Run keyword and ignore error    Click element    //input[@id='sure_delete']
        Run keyword and ignore error    Wait until page contains    Item ${email ID} deleted successfully    60
        Page should not contain    ${email account}
        Log to console    "${email account}" has been deleted successfully
    END
    Close Browser

Check sent email for acount.AD
    LOG TO CONSOLE    Let`s try to send an email
    go to.AD    ${URL}/email-test-page.php?AccountID=${email ID}
    Wait until page contains    Send test email to the address below
    input text    //input[@id='sendTestTo']    ${email}
    Set checkbox.AD    //input[@id='skipqueue']    true
    Set checkbox.AD    //input[@id='sndspm']    true
    click element    //input[@id='send']
    Wait until page contains    Sending test email to    60
    Wait until page contains    please validate it was sent correctly.    25
    Wait until page contains    Sent ok!    25
    Page should not contain    SMTP server error:    25
    GMAIL: check subject and body.AD    Test email settings    <IMG title="Check out our web site" border="0" alt="Check out our web site" src="http://www.checker-soft.com/images/logos/checker_logo_innovative.jpg">    ROBO`s mail <robotmailbox01@gmail.com>    #<IMG title="Check out our web site" border="0" alt="Check out our web site" src="http://www.checker-soft.com/images/logos/checker_logo_innovative.jpg">
    #This is a test message, Please do not This is a test message, Please do not reply. Sender name should be ROBO`s mail, Email address should be ${email ID}. Sender name should be ${email account}
    Log to console    OK - email is recieved

Set Operation messages.AD
    go to.AD    ${URL}/company-operation.php
    Wait until page contains element    //input[@id='field_ShowInternalApprovedButton']
    Wait until page contains element    //input[@id='save']
    ###
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_85_label"]    ${Message to activated shopper Email}${RF REVN DT}
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_147_label"]    ${Usual Text Codes Table} ${Branch property text codes} ${Section text codes} ${RF REVN DT}
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_208_label"]    ${Shoppers assignment notification message for packaged orders}${RF REVN DT}
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_269_label"]    ${Shoppers assignment cancellation notification message}${RF REVN DT}
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_330_label"]    <p>Hello, $[202]$, this is the Shoppers application rejection notification message</p>${RF REVN DT}
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_391_label"]    ${Message to show when accepting a package}${RF REVN DT}
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_452_label"]    ${Message to show when applying for a package}${RF REVN DT}
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_513_label"]    ${Message to show when rejecting a package}${RF REVN DT}
    Run Keyword If    ${demo?} or ${preprod?}    Enter editor text.AD    //*[@id="cke_58_label"]    ${Message to activated shopper Email}${RF REVN DT}
    Run Keyword If    ${demo?} or ${preprod?}    Enter editor text.AD    //*[@id="cke_115_label"]    ${Usual Text Codes Table} ${Branch property text codes} ${Section text codes} ${RF REVN DT}
    Run Keyword If    ${demo?} or ${preprod?}    Enter editor text.AD    //*[@id="cke_170_label"]    ${Shoppers assignment notification message for packaged orders}${RF REVN DT}
    Run Keyword If    ${demo?} or ${preprod?}    Enter editor text.AD    //*[@id="cke_225_label"]    ${Shoppers assignment cancellation notification message}${RF REVN DT}
    Run Keyword If    ${demo?} or ${preprod?}    Enter editor text.AD    //*[@id="cke_280_label"]    <p>Hello, $[202]$, this is the Shoppers application rejection notification message</p>${RF REVN DT}
    Run Keyword If    ${demo?} or ${preprod?}    Enter editor text.AD    //*[@id="cke_335_label"]    ${Message to show when accepting a package}${RF REVN DT}
    Run Keyword If    ${demo?} or ${preprod?}    Enter editor text.AD    //*[@id="cke_390_label"]    ${Message to show when applying for a package}${RF REVN DT}
    Run Keyword If    ${demo?} or ${preprod?}    Enter editor text.AD    //*[@id="cke_445_label"]    ${Message to show when rejecting a package}${RF REVN DT}
    Input text    //textarea[@id='field_ActivatedShopperSmsMsg']    Hello $[202]$, you are now active! (RF REVN DT: ${DD.MM.YY})
    set focus to element    //input[@id='save']
    click element    //input[@id='save']
    Log to console    Saved text for editor box(es).
    Check errors on page [-1]
    Wait until page contains    Operation settings saved successfully
    go to.AD    ${URL}/company-operation.php
    Log to console    Rechecking the results
    Wait until page contains element    //input[@id='field_ShowInternalApprovedButton']
    Log to console    Operation text(s) saved successfully
    Validate value (text)    //textarea[@id='field_ActivatedShopperSmsMsg']    Hello $[202]$, you are now active! (RF REVN DT: ${DD.MM.YY})

Deactivate mandatory CFields
    @{urls}=    String.Split String    ${TestURLs}    ,
    Log to console    Teardown: deactivation of CF. Please wait...
    SeleniumLibrary.Open Browser    ${urls[0]}    browser=chrome
    Maximize Browser Window
    Set CF variables
    FOR    ${URL}    IN    @{urls}
        Set global variable    ${URL}
        SET UP
        Login as a Manager    ${ManagerUsername}    ${ManagerPassword}
        SeleniumLibrary.Open Browser    ${urls[0]}    browser=chrome
        Maximize Browser Window
        Login as a Manager    ${ManagerUsername}    ${ManagerPassword}
        ${link}    set variable    /table-fields.php?page_var_divide_recordsPerPage=400&page_var_filter_TableLink=Checkers
        set global variable    ${link}
        log to console    ${\n}TEARDOWN: Deactivating 8 Custom Fields. Please wait...${\n}
        Deactivate CF by ID.AD    ${Test Custom Field1}    None    None    None    None
        Deactivate CF by ID.AD    ${Test Custom Field2}    None    None    None    None
        Deactivate CF by ID.AD    ${Test Custom Field3}    None    None    None    None
        Deactivate CF by ID.AD    ${Test Custom Field4}    None    None    None    None
        Deactivate CF by ID.AD    ${Test Custom Field5}    None    None    None    None
        Deactivate CF by ID.AD    ${Test Custom Field6}    None    None    None    None
        Deactivate CF by ID.AD    ${Test Custom Field7}    None    None    None    None
        Deactivate CF by ID.AD    ${Test Custom Field8}    None    None    None    None
        Open registration page and check agreement box(es)
        Page should not contain    ${Test Custom Field1}
        Page should not contain    ${Test Custom Field2}
        Page should not contain    ${Test Custom Field3}
        Page should not contain    ${Test Custom Field4}
        Page should not contain    ${Test Custom Field5}
        Page should not contain    ${Test Custom Field6}
        Page should not contain    ${Test Custom Field7}
        Page should not contain    ${Test Custom Field8}
        log to console    Done. Registration page does not contain ${Test Custom Field1} ${Test Custom Field2} ${Test Custom Field3} ${Test Custom Field4} ${Test Custom Field5} ${Test Custom Field6} ${Test Custom Field7} ${Test Custom Field8}
    END
    Close all browsers
    [Teardown]    Close all browsers

JOB board - set parameters while viewing job board.AD
    [Arguments]    ${exp status}
    go to.AD    ${URL}/settings-jobboard.php
    Log to console    Opening ${URL}/settings-jobboard.php
    Log to console    Let`s enable the required checkboxes
    #assigned_jobs BEFORE
    Set checkbox.AD    //input[@id='field_JobBoardCheckerAutoApprove']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderAvailabilityHours']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderCheckerProps']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderFormerCheckerRefusal']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderChillingPeriod']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderMonthlyCritLimit']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderDailyCritLimit']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderFreeTimeAtDayEnd']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderMaxCritsPerDay']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderMaxCritsPerDay']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderSetPermissions']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardShowNonAllowedSetsWithCertificationOption']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderCheckerRegions']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderCheckerInvited']    ${exp status}
    Set checkbox.AD    //input[@id='field_JobBoardConsiderCheckerAvailabilityRadious']    None
    ##
    Click element    //input[@id='save']
    Check errors on page [-1]
    Log to console    set "status" of all checkboxes = ${exp status}

Cancel all order assignation
    go to.AD    ${URL}/checker-assignation.php?CheckerID=${found ID}
    Log To Console    Let`s cancel the assignation
    #Select dropdown    //select[@id='pleaseDisplay']    //*[@id="pleaseDisplay"]/option[2]
    Click element    //input[@id='update']
    ${select button}=    set variable    //input[@id='assignMarkedOrders']
    ${select button visible?}=    run keyword and return status    Page should contain    ${select button}
    log    ${select button visible?}
    Run keyword if    "${select button visible?}"=="True"    Cancel all order assignation (checker)

Cancel all order assignation (checker)
    Click element    //input[1]
    Click element    //input[@id='cancelAssignments']
    Page should contain    No assignments.
    Page should contain    No orders.
    Check errors on page [2]

Check shopper message.SD
    element should contain    //center/table[@class='tablemmMessage']/tbody/tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[1]/td/p/span/strong    General guideline for shoppers
    element should contain    //tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[2]/td/strong/span    Date & Time Requirements
    element should contain    //table[@class='tablemmMessage']/tbody/tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[3]/td/ul/li    You must visit the store on the date scheduled.
    element should contain    //table[@class='tablemmMessage']/tbody/tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[4]/td/strong/span    Data Entry Requirements
    element should contain    //table[@class='tablemmMessage']/tbody/tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[5]/td/ul/li[1]    You must enter results on the same day as your assessment or not more than 24 hours after the visit.
    element should contain    //table[@class='tablemmMessage']/tbody/tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[5]/td/ul/li[2]    Failure to enter results within the specified timescales will result in the assessment being de-allocated and consequent non payment.
    element should contain    //table[@class='tablemmMessage']/tbody/tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[6]/td/strong/span    Important Information
    element should contain    //table[@class='tablemmMessage']/tbody/tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[7]/td/ul/li[1]/strong    Before the visit
    Run keyword and ignore error    Page should contain    Get assured to have downloaded the App on your smartphone.
    element should contain    //tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[7]/td/ul/li[3]/strong    Use the App to complete the questionnaire during your Mystery visit.
    element should contain    //table[@class='tablemmMessage']/tbody/tr[@class='mmMessageTR']/td[@class='mmMessage']/table/tbody/tr[7]/td/ul/li[4]    Only for Mystery Calls (by phone), use the browser, do not use the App.
    Page should contain    Download the mobile App below:
    Run keyword and ignore error    Page should contain    ${DD.MM.YY}
    Run keyword and ignore error    Page should contain    ENV/SYS:
    Run keyword and ignore error    Page should contain    RF REVN DT:
    Page should contain element    xpath=//a[@href="https://play.google.com/store/apps/details?id=com.mor.sa.android.activities&hl=en_US"]
    Page should contain element    xpath=//a[@href="https://play.google.com/store/apps/details?id=com.mor.sa.android.activities&hl=en_US"]
    Log to console    Checker can see a default text message for shoppers saved at .../messages.php

Add sys image.AD
    [Arguments]    ${location}
    go to.AD    ${URL}/company-css-images.php
    Log to console    ADDING NEW syst Image at ${URL}/company-css-images.php
    Wait until page contains element    //input[@id='New']
    Page should contain element    //input[@class='btn-input']
    Page should contain element    //input[@class='btn-input'][1]
    Page should contain element    //input[@class='btn-input'][2]
    Click element    //input[@id='New']
    Choose File    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/input[1]    ${location}
    Log to console    Choose File ${location}
    Click element    //input[@id='save']
    Log to console    --------------------------
    Check errors on page [-1]

Edit branch access
    go to.AD    ${URL}/user-branch-access.php?UserID=${found ID}
    Wait until page contains element    //select[@id='ClientID']
    Select dropdown.AD    //*[@id="ClientID"]    //*[@id="ClientID"]/option[11]
    Click element    //input[@id='add_all_branches']
    Page should contain    All branches added successfully.
    Click element    //tbody/tr/td[@id='the_cell_with_the_program']/table[@id='side_menu']/tbody/tr/td[@class='middle-right']/form[2]/p[2]/select/option[1]
    Click element    //tbody/tr/td[@id='the_cell_with_the_program']/table[@id='side_menu']/tbody/tr/td[@class='middle-right']/form[2]/p[2]/select/option[2]
    Click element    //tbody/tr/td[@id='the_cell_with_the_program']/table[@id='side_menu']/tbody/tr/td[@class='middle-right']/form[2]/p[2]/select/option[3]
    Click element    //input[@id='do_delete']
    Page should contain    3 branches removed

Reports: Final scores analysis
    [Arguments]    ${report name}    ${report category}
    go to.AD    ${URL}/report-property.php
    Wait Until Element is Visible    //div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td/table/tbody/tr/td/center/a[1]
    CLICK element    //div[@id='FiltersArea']/form/table[1]/tbody/tr/td[2]/table/tbody/tr[2]/td[2]/input[1]
    CLICK element    //div[@id='FiltersArea']/form/input[@id='go']
    ${table row 1}=    set variable    //td[@class='report-dir'][1]
    ${is table row visible?}=    Run keyword and return status    Page should contain element    ${table row 1}
    Run keyword if    "${is table row visible?}"=="True"    Check report table (Final score)    ${report name}    ${report category}

Create category (reports)
    [Arguments]    ${report name}    ${category name}
    go to.AD    ${URL}/reports-list.php
    Wait Until Element is Visible    //button[@class='btn-input']
    Click element    //button[@class='btn-input']
    Input text    //input[@id='field_ReportTitle']    ${report name}
    Input text    //input[@id='field_ReportOrder']    1
    Input text    //input[@id='field_RowPosition']    1
    Input text    //input[@id='field_ColumnPosition']    1
    Input text    //input[@id='field_RowSpan']    1
    Input text    //input[@id='field_ColumnSpan']    1
    #Click element    //*[@id="idReportCategoryEditbox"]/table/tbody/tr/td/span/button
    #Select from list by value    //*[@id="field_ReportCategory"]    -1
    Select dropdown.AD    //*[@id="idReportCategoryEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'New')]
    Mouse over    //*[@id="idReportCategoryEditbox"]/table/tbody/tr/td/span/button
    Wait Until Element is Visible    //input[@id='field_ReportCategory_new']    60
    set focus to element    //input[@id='field_ReportCategory_new']
    Input text    //input[@id='field_ReportCategory_new']    ${category name}
    Click element    //input[@id='addnew']
    Log to console    Created report: "${report name}" (Category: "${category name}")

Delete all report(s)
    go to.AD    ${URL}/reports-list.php
    Log to console    deleting reports...
    ${index}    Set Variable    1
    ${Rows} =    Get Element Count    //*[@id="table_rows"]/tbody/tr    #how many rows do we have
    Log To Console    Found: "${Rows}" item(s)
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${Rows}
        go to    ${URL}/reports-list.php
        Log    ${rowindex}
        Set global variable    ${index}
        ${ID}    set variable    //*[@id="table_rows"]/tbody/tr[1]/td[1]
        ${element visible?}    Run keyword and return status    Page should contain element    ${ID}
        Run Keyword If    '${element visible?}'=='True'    delete item
        ${index}    Evaluate    ${index}+1
        Check errors on page [-1]
        reload page
    END

delete item
    ${Name}    Get text    //*[@id="table_rows"]/tbody/tr[1]/td[2]
    Click element    //*[@id="table_rows"]/tbody/tr[1]/td[1]/a
    set focus to element    //input[@id='delete']
    Click element    //input[@id='delete']
    Check errors on page [-1]
    Wait Until Element is Visible    //input[@id='sure_delete']
    Click element    //input[@id='sure_delete']
    Wait until page contains    deleted successfully
    Log to console    "${Name}" has been deleted

Delete all report categories
    go to.AD    ${URL}/reports-tabs.php
    Log to console    deleting report categories...
    ${index}    Set Variable    1
    ${Rows} =    Get Element Count    //*[@id="table_rows"]/tbody/tr    #how many rows do we have
    Log To Console    Found: "${Rows}" item(s)
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${Rows}
        go to    ${URL}/reports-tabs.php
        Log    ${rowindex}
        Set global variable    ${index}
        ${ID}    set variable    //*[@id="table_rows"]/tbody/tr[1]/td[1]
        ${element visible?}    Run keyword and return status    Page should contain element    ${ID}
        Run Keyword If    '${element visible?}'=='True'    delete item
        ${index}    Evaluate    ${index}+1
        Check errors on page [-1]
        reload page
    END

Add report to dashboard.AD
    [Arguments]    ${report name}    ${report category}
    CLICK element    //div[@id='FiltersAreaLink']/a[@class='togglefiltersclass']
    CLICK element    //div[@id='FiltersArea']/form/input[@id='AddToReportsList']
    Wait Until Element is Visible    //input[@id='field_ReportTitle']
    Input text    //input[@id='field_ReportTitle']    ${report name}
    Page should contain element    //center/form[1]/table/tbody/tr/td[1]/label/input
    Page should contain element    //center/form[1]/table/tbody/tr/td[2]/label/input
    Page should contain element    //*[@id="tabs"]/ul/li[1]
    Page should contain element    //*[@id="tabs"]/ul/li[2]
    Page should contain element    //*[@id="tabs"]/ul/li[3]
    Page should contain element    //*[@id="tabs"]/ul/li[4]
    #Click element    //*[@id="idReportCategoryEditbox"]/table/tbody/tr/td/span/button
    #Select from list by value    //*[@id="field_ReportCategory"]    -1
    Select dropdown.AD    //*[@id="idReportCategoryEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'New')]
    Mouse over    //*[@id="idReportCategoryEditbox"]/table/tbody/tr/td/span/button
    Wait Until Element is Visible    //input[@id='field_ReportCategory_new']    60
    set focus to element    //input[@id='field_ReportCategory_new']
    Input text    //input[@id='field_ReportCategory_new']    ${report category}
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Run Keyword If    ${check env?}    Enter editor text.AD    //span[@id='cke_101_label']    I am note "${report name}" ${RF REVN DT}
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_163_label"]    I am note under "${report name}" ${RF REVN DT}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_58_label"]    I am note of "${report name}" ${RF REVN DT}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_115_label"]    I am note under "${report name}" ${RF REVN DT}
    Click element    //input[@id='addnew']
    Log to console    Created report: "${report name}" (Category: "${report category}")
    Check errors on page [-1]

Check report on dashboard.AD
    [Arguments]    ${report name}    ${report category}
    go to.AD    ${URL}/main-menu.php
    Log to console    Go to ${URL}/main-menu.php
    Click link    default=${report category}
    Wait until page contains    I am note of "${report name}"
    Page should contain    ${report name}
    Page should contain    ${report category}
    Page should contain    I am note of "${report name}"
    Page should contain    I am note under "${report name}"
    Log to console    Dashboard contains report: "${report name}" (Category: "${report category}")
    Wait until page contains element    //input[@id='filter_0']    20
    Wait until page contains    Branch performance summary across 2 date cycles    20
    Page should contain    ${RobotTestClient}
    Page should contain    Starting from
    Page should contain element    //input[@class='btn-input'][1]
    Page should contain element    //input[@class='btn-input']
    Page should contain element    //input[@class='btn-input'][1]
    Page should contain element    //input[@class='btn-input'][2]
    Check if sorting is visible.AD    id="table_rows"
    Element text should be    //th[@class='report-dir'][1]/a[@class='report-caption']    BranchCode
    Log to console    Report on dashboard contains report

Check report table (Final score)
    [Arguments]    ${report name}    ${report category}
    Check report page (Final score)
    Add report to dashboard.AD    ${report name}    ${report category}
    Check report on dashboard.AD    ${report name}    ${report category}

Check report page (Final score)
    Wait until page contains    Branch performance summary across 2 date cycles    20
    #Page should contain    ${RobotTestClient}
    Page should contain    Starting from
    Page should contain element    //input[@class='btn-input'][1]
    Page should contain element    //input[@class='btn-input']
    Page should contain element    //input[@class='btn-input'][1]
    Page should contain element    //input[@class='btn-input'][2]
    Element text should be    //th[@class='report-dir'][1]/a[@class='report-caption']    BranchCode
    #Element text should be    //th[@class='report-dir'][8]/a[@class='report-caption']    Actual points
    #Element text should be    //th[@class='report-dir'][9]/a[@class='report-caption']    Possible points
    #Element text should be    //th[@class='report-dir'][10]/a[@class='report-caption']    Show entire scorecard
    #Element text should be    //th[@class='report-dir'][11]/a[@class='report-caption']    Start time
    #Element text should be    //th[@class='report-dir'][12]/a[@class='report-caption']    Date and time of activity
    #Element text should be    //tr[@class='report']/th[@class='report-dir'][13]    Show scorecard report
    #Element text should be    //th[@class='report-dir'][14]    Watched
    #Element text should be    //th[@class='report-dir'][15]/a[@class='report-caption']    Employee name
    #Element text should be    //th[@class='report-dir'][16]/a[@class='report-caption']    Bonus system RF
    #Element text should be    //th[@class='report-dir'][17]/a[@class='report-caption']    Bonus
    #Page should contain element    //input[@id='filter_17']
    #Page should contain element    //input[@id='markWatched']
    Check if sorting is visible.AD    id="table_rows"
    Check errors on page [-1]

Set q-ry brief.AD
    go to.AD    ${URL}/set-edit-briefings.php?SetID=${found ID}
    Wait Until Element is Visible    //button[@class='btn-input']
    ${RF Briefing visible?}=    Run keyword and return status    Page should contain    ${RF Briefing}
    Run keyword if    "${RF Briefing visible?}"=="True"    delete brief
    go to.AD    ${URL}/set-edit-briefings.php?SetID=${found ID}
    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr/td/table/tbody/tr/td/button
    Add/ edit brief
    #Click link    default=${RF Briefing}
    #Add/ edit brief
    go to.AD    ${URL}/sets.php?edit=${found ID}
    Log to console    Let`s update the q-ry at ${URL}/sets.php?edit=${found ID}
    Wait Until Element is Visible    //*[@id="idDefault_briefingEditbox"]/table/tbody/tr/td/span/button
    Select dropdown.AD    //*[@id="idDefault_briefingEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RF Briefing}')]
    Page should contain link    Edit briefings for this questionnaire
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    uccessfully
    go to.AD    ${URL}/sets.php?edit=${found ID}
    Validate value (text)    //*[@id="idDefault_briefingEditbox"]/table/tbody/tr/td/span/button    ${RF Briefing}

Add/ edit brief
    Wait Until Element is Visible    //input[@id='field_BriefingDescription']
    Input text    //input[@id='field_BriefingDescription']    ${RF Briefing}
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_57_label"]    ${RF Briefing content}${RF REVN DT}
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_51_label"]    ${RF Briefing content}${RF REVN DT}
    Log to console    ${RF Briefing} has been added
    Page should contain    You may use the [b], [i] and [u] text codes
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully

delete brief
    Click link    default=${RF Briefing}
    Click element    //input[@id='delete']
    Run keyword and ignore error    Click element    //input[@id='delete']
    Wait until page contains element    //input[@id='sure_delete']    3
    Click element    //input[@id='sure_delete']
    Log to console    ${RF Briefing} has been deleted
    Check errors on page [-1]

Select client users for alerts
    log to console    Grabbing ID for RF "manager" user and "analyst"
    go to.AD    ${URL}/search-page.php?searchBox=Robot+Analyst+01&searchBoxHidden=&search_submitted=1
    ${Analyst ID}=    Get Text    //td[@class='report-firstcol']
    go to.AD    ${URL}/search-page.php?searchBox=ROBOT+%5BMANAGER%5D&searchBoxHidden=&search_submitted=1
    ${Manager ID}=    Get Text    //td[@class='report-firstcol']
    log to console    Analyst ID=${Analyst ID}
    log to console    Manager ID=${Manager ID}
    ##################
    go to.AD    ${URL}/clients.php?edit=${client ID}
    Wait until page contains element    //*[@id="idLinkUserToClientEditbox"]/table/tbody/tr/td/span/button
    Select multiselect box    id=field_LinkUserToClient    ${Manager ID}    8
    Validate value (text)    //*[@id="idLinkUserToClientEditbox"]/table/tbody/tr/td/span/button    ROBOT [MANAGER]
    #
    Select multiselect box    id=field_LinkUserToClient_forshopper    ${Manager ID}    9
    Validate value (text)    //*[@id="idLinkUserToClient_forshopperEditbox"]/table/tbody/tr/td/span/button    ROBOT [MANAGER]
    #
    Select dropdown.AD    //*[@id="idAlertOnCritCommentEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${ManagerUsername}')]
    Validate value (text)    //*[@id="idAlertOnCritCommentEditbox"]/table/tbody/tr/td/span/button    ROBOT [MANAGER]
    Select dropdown.AD    //*[@id="idAlertContactAllEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Robot Analyst 01')]
    Validate value (text)    //*[@id="idAlertContactAllEditbox"]/table/tbody/tr/td/span/button    Robot Analyst 01
    Execute Javascript    window.document.getElementById("idAlertContactMinEditbox").scrollIntoView(true);
    # fix here
    Select dropdown.AD    //*[@id="idAlertContactMinEditbox"]/table/tbody/tr/td/span/button    //span[contains(.,'Robot Analyst 01')]    #//div[4]/ul/li[2]/label/span
    Validate value (text)    //*[@id="idAlertContactMinEditbox"]/table/tbody/tr/td/span/button    Robot Analyst 01
    ##
    Select dropdown.AD    //*[@id="idAlertContactCriticalEditbox"]/table/tbody/tr/td/span/button    //span[contains(.,'Robot Analyst 01')]
    Validate value (text)    //*[@id="idAlertContactCriticalEditbox"]/table/tbody/tr/td/span/button    Robot Analyst 01
    Click Save/Add/Delete/Cancel button.AD
    go to.AD    ${URL}/clients.php?edit=${client ID}
    Wait until page contains element    //*[@id="idLinkUserToClientEditbox"]/table/tbody/tr/td/span/button
    Validate value (text)    //*[@id="idLinkUserToClientEditbox"]/table/tbody/tr/td/span/button    ROBOT [MANAGER]
    Validate value (text)    //*[@id="idLinkUserToClient_forshopperEditbox"]/table/tbody/tr/td/span/button    ROBOT [MANAGER]
    Validate value (text)    //*[@id="idAlertOnCritCommentEditbox"]/table/tbody/tr/td/span/button    ROBOT [MANAGER]
    Validate value (text)    //*[@id="idAlertContactAllEditbox"]/table/tbody/tr/td/span/button    Robot Analyst 01
    Validate value (text)    //*[@id="idAlertContactMinEditbox"]/table/tbody/tr/td/span/button    Robot Analyst 01
    Validate value (text)    //*[@id="idAlertContactCriticalEditbox"]/table/tbody/tr/td/span/button    Robot Analyst 01
    log to console    RF "manager" user and "analyst" were selected as client contacts

Check job details.SD
    Log to console    Checking order details. Please wait...
    reload page
    Wait until page contains element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${OrderID ID}]
    Scroll Element Into View    //*[@id="orders_list"]/tbody/tr[${index}]/td[${OrderID ID}]
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Description ID}]    ${test order description}
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Client description ID}]    This client is created for RF autotests
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Client name ID}]    ${RobotTestClient}
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Full name ID}]    ${Full auto branch name 01}
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Questionnaire name ID}]    ${RobotQ-ry SHOPPERS} Execute a simulation Preview
    #Element Should Contain    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Survey payment ID}]    Survey payment: 30.00${\n}Bonus payment: 1.00${\n}Transport payment: 3.00
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Order count ID}]    1
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Due date of the visit ID}]    ${DD.MM.YY}
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Order start time ID}]    ${order start_time}
    Page should contain element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Status ID}]/form[1]/input[@id='accept']
    #Page should contain element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Status ID}]/form[@class='inline']/input[@id='Reject']
    Page should contain element    //*[@id="orders_list"]/tbody/tr/td[${Questionnaire name ID}]/a/img
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Questionnaire name ID}]/button[@class='btn-input'][1]    Execute a simulation
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Questionnaire name ID}]/button[@class='btn-input'][2]    Preview
    Page should contain element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Select ID}]/input[@id='selected_orders[]']
    #Page should contain element    //table[@id='orders_list']/tbody/tr[@class='report1 ']/td[@class='report-dir'][${Begin scorecard ID}]
    #Page should contain element    //table[@id='orders_list']/tbody/tr[@class='report1 ']/td[@class='report-dir'][${OrderID ID}]
    Page should contain element    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Briefing ID}]
    Page should contain    Survey payment: 30.00
    Page should contain    Bonus payment: 1.00
    #    Page should contain    Transportation payment: 3.00
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Branch phone ID}]    +74564456454
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Order end time ID}]    ${order end_time}
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Type of client ID}]    ${RF Type of client}
    Element Should Be Visible    //img[contains(@src, "images/arrows/information.png")]
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Briefing ID}]    ${empty}
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Zip code ID}]    0354354
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Purchase ID}]    Limit for products payment : 4.00
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Short branch name ID}]    ${Short auto branch name 01}
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Branch opening hours ID}]    07:00 - 18:00
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Branch address fields ID}]    Robot city 01, Zelena street 45A, 44
    Element text should be    //*[@id="orders_list"]/tbody/tr[${index}]/td[${Branch phone ID}]    +74564456454

Set Status ID
    [Arguments]    ${id}
    ${Status ID}=    Set variable    ${id}
    Set global variable    ${Status ID}
    ###

Set Select ID
    [Arguments]    ${id}
    ${Select ID}=    Set variable    ${id}
    Set global variable    ${Select ID}
    ###

Set Questionnaire name ID
    [Arguments]    ${id}
    ${Questionnaire name ID}=    Set variable    ${id}
    Set global variable    ${Questionnaire name ID}
    ###

Set Begin scorecard ID
    [Arguments]    ${id}
    ${Begin scorecard ID}=    Set variable    ${id}
    Set global variable    ${Begin scorecard ID}
    ###

Set Description ID
    [Arguments]    ${id}
    ${Description ID}=    Set variable    ${id}
    Set global variable    ${Description ID}
    ###

Set OrderID ID
    [Arguments]    ${id}
    ${OrderID ID}=    Set variable    ${id}
    Set global variable    ${OrderID ID}
    ###

Set Briefing ID
    [Arguments]    ${id}
    ${Briefing ID}=    Set variable    ${id}
    Set global variable    ${Briefing ID}
    ###

Set Order start time ID
    [Arguments]    ${id}
    ${Order start time ID}=    Set variable    ${id}
    Set global variable    ${Order start time ID}
    ###

Set Full name ID
    [Arguments]    ${id}
    ${Full name ID}=    Set variable    ${id}
    Set global variable    ${Full name ID}
    ###

Set Client description ID
    [Arguments]    ${id}
    ${Client description ID}=    Set variable    ${id}
    Set global variable    ${Client description ID}
    ###

Set Survey payment ID
    [Arguments]    ${id}
    ${Survey payment ID}=    Set variable    ${id}
    Set global variable    ${Survey payment ID}
    ###

Set Order count ID
    [Arguments]    ${id}
    ${Order count ID}=    Set variable    ${id}
    Set global variable    ${Order count ID}
    ###

Set Due date of the visit ID
    [Arguments]    ${id}
    ${Due date of the visit ID}=    Set variable    ${id}
    Set global variable    ${Due date of the visit ID}
    ###

Set Client name ID
    [Arguments]    ${id}
    ${Client name ID}=    Set variable    ${id}
    Set global variable    ${Client name ID}
    ###

Attach files.SD
    #Page should contain element    //input[@id='saveAndExit']
    #Page should contain element    //input[@id='askAboutRestartCrit']
    #Page should contain element    //input[@id='askAboutExitAndDelete']
    #Page should contain element    //input[@id='Preview']
    #Page should contain element    //input[@id='Uploadfiles']
    #Page should contain element    Review
    #Wait until page contains    If you have more comments, write them here:    10
    #Page should contain    Send an internal message to the company
    #Page should contain element    //*[@id="request-break"]
    go to.AD    ${URL}/popup-file.php?CritID=${Review Number}&authmode=2&FileType=0
    Log to console    Let`s attach file to a review
    Select files to be attached.SD    //*[@id="fileupload"]/div[1]/label/input    ${CURDIR}\\Extra files\\IMAGES\\RF test(attached file).jpg
    go to.AD    ${URL}/popup-file.php?CritID=${Review Number}&authmode=2&FileType=0
    reload page
    Wait until page contains    The following files are attached:
    reload page
    Wait until page contains    RF test(attached file).jpg
    Log to console    Now let`s delete all the attached files and reupload the files
    Wait until page contains element    //div[@class='_container_']/form/input[1]
    Click element    //div[@class='_container_']/form/input[1]
    Click element    //div[@class='_container_']/form/input[2]
    Handle Alert
    Page should not contain    RF test(attached file).jpg
    Page should not contain    RF test(attached file).png
    Select files to be attached.SD    //*[@id="fileupload"]/div[1]/label/input    ${CURDIR}\\Extra files\\Audio files\\file_example_WAV_1MG.wav
    Select files to be attached.SD    //*[@id="fileupload"]/div[1]/label/input    ${CURDIR}\\Extra files\\IMAGES\\RF test(attached file).png
    Select files to be attached.SD    //*[@id="fileupload"]/div[1]/label/input    ${CURDIR}\\Extra files\\IMAGES\\RF test(attached file).jpg
    #Reload page
    go to.AD    ${URL}/popup-file.php?CritID=${Review Number}
    reload page
    Wait until page contains    The following files are attached:
    Page should contain    RF test(attached file).jpg
    Page should contain    RF test(attached file).png
    Page should contain    file_example_WAV_1MG.wav
    Log to console    Done. 3 files are attached to review (png, jpg and wav formats)
    element text should be    //*[@id="t_attachments"]/thead/tr/th[2]    File name
    element text should be    //*[@id="t_attachments"]/thead/tr/th[3]    Download
    element text should be    //*[@id="t_attachments"]/thead/tr/th[4]    Thumbnail
    element text should be    //*[@id="t_attachments"]/thead/tr/th[5]    File size
    Page should contain    69.2
    Page should contain    152.5
    Page should contain    1.02
    Page should contain    Download
    go to.AD    ${URL}/c_v5-criticize.php?CritID=${Review Number}
    [Teardown]

Select files to be attached.SD
    [Arguments]    ${locator}    ${file}
    go to.AD    ${URL}/popup-file.php?CritID=${ReviewID}&authmode=2&FileType=0
    Wait until page contains element    //*[@id="fileupload"]/div[1]/label
    Choose File    ${locator}    ${file}
    Page should contain element    //*[@id="fileupload"]/div[1]/button[2]/span[2]
    Page should contain element    //div[1]/form/p[2]/a
    Click element    //*[@id="fileupload"]/div[1]/button[1]/span[2]
    sleep    4
    Wait until page contains    File uploaded successfully    10
    Log to console    "${file}" has been selected and uploaded properly

select q-ry type / Internet
    Wait until page contains element    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button
    Input text    //input[@id='field_SetCode']    IS-01
    Select dropdown.AD    //*[@id="idCharNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RF Type of client}')]
    Input text    //input[@id='field_SetDescription']    ${RF Type of client}
    Select dropdown.AD    //*[@id="idSetTypeLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Internet')]
    Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    Input text    //input[@id='field_QuestionsPerPage']    50
    Set checkbox.AD    //input[@id='field_OnePageLogic']    true
    Set checkbox.AD    //input[@id='field_AutomaticApproval']    true
    Set checkbox.AD    //input[@id='field_ShowFreeTextBox']    true

Edit ISurvey.AD
    [Arguments]    ${TargetQuota}    ${Questionnaire to be used}    ${Branch}
    go to.AD    ${URL}/internet-surveys.php?page_var_filter_IsActive=&page_var_filter_ClientLink=${found ID}
    Wait until page contains element    //button[@class='btn-input']
    ${IsElementVisible?}=    Run keyword and return status    Page should contain    ${ISurveyName}
    Run Keyword If    ${IsElementVisible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr/td/table/tbody/tr/td/button
    Run Keyword If    ${IsElementVisible?}    click Link    ${ISurveyName}
    Wait until page contains element    //input[@id='field_SurveyName']
    Input text    //input[@id='field_SurveyName']    ${ISurveyName}
    ##
    Select dropdown.AD    //*[@id="idDefaultLanguageEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'English Australia')]
    Validate value (text)    //*[@id="idDefaultLanguageEditbox"]    English Australia
    Set checkbox.AD    //input[@id='field_IsActive']    true
    ##
    Wait until page contains element    //input[@id='field_SurveyName']
    Input text    //input[@id='field_SurveyName']    ${ISurveyName}
    Select dropdown.AD    //*[@id="idDefaultLanguageEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'English Australia')]
    Validate value (text)    //*[@id="idDefaultLanguageEditbox"]    English Australia
    Set checkbox.AD    //input[@id='field_IsActive']    true
    #Select dropdown.AD    //*[@id="idClientLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    Validate value (text)    //*[@id="idClientLinkEditbox"]/table/tbody/tr/td/span/button    ${RobotTestClient}
    Run keyword and ignore error    Wait until page contains element    //*[@id="field_BranchLink_div"]/table/tbody/tr/td/span/button
    Run keyword and ignore error    Click element    //*[@id="field_BranchLink_div"]/table/tbody/tr/td/span/button
    Run keyword and ignore error    Scroll element into view    xpath=//li[contains(.,'${Branch}')]
    Run keyword and ignore error    Set focus to element    xpath=//li[contains(.,'${Branch}')]
    Run keyword and ignore error    Click element    xpath=//li[contains(.,'${Branch}')]
    Run keyword and ignore error    Validate value (text)    //*[@id="field_BranchLink_div"]/table/tbody/tr/td/span/button    ${Branch}
    Input text    //input[@id='field_TargetQuota']    ${TargetQuota}
    Input text    //input[@id='field_RedirectAfter']    5
    Click Save/Add/Delete/Cancel button.AD
    go to.AD    ${URL}/internet-surveys.php?page_var_filter_IsActive=&page_var_filter_ClientLink=${found ID}
    click Link    ${ISurveyName}
    Wait until page contains element    //*[@id="idSetLinkEditbox"]/table/tbody/tr/td/span/button
    click element    //*[@id="idSetLinkEditbox"]/table/tbody/tr/td/span/button
    Set focus to element    xpath=//li[contains(.,'${Questionnaire to be used}')]
    click element    xpath=//li[contains(.,'${Questionnaire to be used}')]
    Validate value (text)    //*[@id="idSetLinkEditbox"]/table/tbody/tr/td/span/button/span[2]    ${Questionnaire to be used}
    Validate value (value)    //input[@id='field_RedirectAfter']    5
    Log to console    ----------------------------
    #
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_61_label"]    <p style="text-align:center">&nbsp;</p><p style="text-align:center">&nbsp;</p><p style="text-align:center">Quota reached message: <strong>&quot;sorry, this survey`s quota has been exceeded&quot;</strong></p> <p style="text-align:center"><em><span style="font-size:9px">What is a survey quota?&nbsp;A survey quota is the number of observations needed to meet a specified requirement, such as the number of men and the number of women to complete a survey.&nbsp;</span></em></p> ${RF REVN DT}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_52_label"]    <p style="text-align:center">&nbsp;</p><p style="text-align:center">&nbsp;</p><p style="text-align:center">Quota reached message: <strong>&quot;sorry, this survey`s quota has been exceeded&quot;</strong></p> <p style="text-align:center"><em><span style="font-size:9px">What is a survey quota?&nbsp;A survey quota is the number of observations needed to meet a specified requirement, such as the number of men and the number of women to complete a survey.&nbsp;</span></em></p> ${RF REVN DT}
    #
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_123_label"]    <p style="text-align:center">&nbsp;</p> <p style="text-align:center">&nbsp;</p> <p style="text-align:center">Thank you message: <strong>&quot;You have completed the RF survey, thank you for participating&quot;</strong></p> <p style="text-align:center"><span style="font-size:9px"><em>Thank you for taking the time to complete this survey. The fact that you are reading this message indicates that you have completed our survey&nbsp; and that we owe you a debt of thanks. We are very appreciative of the time you have taken to assist in our analysis and commit to utilizing the information gained to contemplate and implement worthwhile improvements.</em></span></p>${RF REVN DT}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_109_label"]    <p style="text-align:center">&nbsp;</p> <p style="text-align:center">&nbsp;</p> <p style="text-align:center">Thank you message: <strong>&quot;You have completed the RF survey, thank you for participating&quot;</strong></p> <p style="text-align:center"><span style="font-size:9px"><em>Thank you for taking the time to complete this survey. The fact that you are reading this message indicates that you have completed our survey&nbsp; and that we owe you a debt of thanks. We are very appreciative of the time you have taken to assist in our analysis and commit to utilizing the information gained to contemplate and implement worthwhile improvements.</em></span></p>${RF REVN DT}
    #
    Run keyword and ignore error    Enter editor text.AD    tr_QuotaReachedMessage    <p style="text-align:center">&nbsp;</p><p style="text-align:center">&nbsp;</p><p style="text-align:center">Quota reached message: <strong>&quot;sorry, this survey`s quota has been exceeded&quot;</strong></p> <p style="text-align:center"><em><span style="font-size:9px">What is a survey quota?&nbsp;A survey quota is the number of observations needed to meet a specified requirement, such as the number of men and the number of women to complete a survey.&nbsp;</span></em></p>${RF REVN DT}
    Run keyword and ignore error    Enter editor text.AD    tr_ThankYouMessage    <p style="text-align:center">&nbsp;</p> <p style="text-align:center">&nbsp;</p> <p style="text-align:center">Thank you message: <strong>&quot;You have completed the RF survey, thank you for participating&quot;</strong></p> <p style="text-align:center"><span style="font-size:9px"><em>Thank you for taking the time to complete this survey. The fact that you are reading this message indicates that you have completed our survey&nbsp; and that we owe you a debt of thanks. We are very appreciative of the time you have taken to assist in our analysis and commit to utilizing the information gained to contemplate and implement worthwhile improvements.</em></span></p>${RF REVN DT}
    Input text    //input[@id='field_LandingPage']    https://www.checker-soft.com
    #xpath=//li[contains(.,'BranchFullname 05 (for Internet Surveys)')]
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${ReviewID 1} =    Fetch From Right    ${Pageurl}    &edit=
    ${ReviewID} =    Fetch From Left    ${ReviewID 1}    &page_var_sorting_column
    Set global variable    ${ReviewID}
    Log to console    ReviewID="${ReviewID}"
    Click Save/Add/Delete/Cancel button.AD
    Page Should Contain    Survey '${ISurveyName}' saved successfully
    Check errors on page [-1]
    go to.AD    ${URL}/internet-surveys.php?page_var_filter_IsActive=&page_var_filter_ClientLink=${found ID} &page_var_filter_SurveyName=&page_var_divide_recordsPerPage=50&page_var_divide_curPage=1
    Wait until page contains element    //button[@class='btn-input']
    Element text should be    //tr[@class='db']/th[@class='db-firstcol']    Survey name
    Element text should be    //th[@class='db-ltr'][1]    Active?
    Element text should be    //th[@class='db-ltr'][2]    Questionnaire
    Element text should be    //th[@class='db-ltr'][3]    Target quota
    Element text should be    //th[@class='db-ltr'][4]    Survey count
    Element text should be    //th[@class='db-ltr'][5]    Survey internet link
    Element text should be    //th[@class='db-ltr'][6]    URL
    Element text should be    //th[@class='db-ltr'][7]    Share..
    #
    Element text should be    //tbody/tr[@class='db1']/td[@class='db-firstcol']    ${ISurveyName}
    Element text should be    //td[@class='db-ltr'][1]    Yes
    Element text should be    //td[@class='db-ltr'][2]    ${Questionnaire to be used}
    Element text should be    //td[@class='db-ltr'][3]    ${TargetQuota}
    Element text should be    //td[@class='db-ltr'][5]    Click here to fill in
    Validate value (value)    //*[@id="table_rows"]/tbody/tr/td[8]/input    Share
    Element should contain    //td[@class='db-ltr'][6]    ${URL}/i_survey-fill.php?SurveyID=${ReviewID}

Click Save/Add/Delete/Cancel button.AD
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    ${status1}    Run Keyword And return status    Page Should Contain element    //input[@id='save']
    Run Keyword and ignore error    Execute JavaScript    window.document.getElementById("save").scrollIntoView(true)    //input[@id='save']
    Run Keyword If    '${status1}'=='True'    Scroll element into view    //input[@id='save']
    Run Keyword If    '${status1}'=='True'    Set focus to element    //input[@id='save']
    Run Keyword If    '${status1}'=='True'    Click element    //input[@id='save']
    ${status2}    Run Keyword And return status    Page Should Contain element    //input[@id='addnew']
    Run Keyword If    '${status2}'=='True'    Click element    //input[@id='addnew']
    Log to console    Page has been Saved/Updated!
    Check errors on page [-1]

Search QA question.AD
    [Arguments]    ${QAQ name}    ${QAQ name description}
    go to.AD    ${URL}/qa-questions.php?page_var_divide_recordsPerPage=600
    Log to console    ${URL}/qa-questions.php?page_var_divide_recordsPerPage=600
    Wait until page contains element    //button[@class='btn-input']
    ${element visible?}=    Run keyword and return status    Page should contain    ${QAQ name}
    Run Keyword If    ${element visible?}    Click link    default=${QAQ name}
    Run Keyword If    ${element visible?}==False    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Wait Until Page Contains Element    //input[@id='field_Question']
    Input text    //input[@id='field_Question']    ${QAQ name}
    Input text    //input[@id='field_Description']    ${QAQ name description}
    Click Save/Add/Delete/Cancel button.AD
    #Wait Until Page Contains    Question '${QAQ name}' saved successfully
    Log to console    "${QAQ name}" has been added
    go to.AD    ${URL}/qa-questions.php?page_var_divide_recordsPerPage=600
    Wait until page contains element    //button[@class='btn-input']
    Click link    default=${QAQ name}
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${ReviewID 1} =    Fetch From Right    ${Pageurl}    &edit=
    ${QAQID} =    Fetch From Left    ${ReviewID 1}    &page_var_sorting_column
    Set global variable    ${QAQID}
    Page should contain    ${QAQ name}

Add QAQ answer.AD
    [Arguments]    ${QAQ answer}    ${grade}    ${effect in percent}    ${Change priority}
    go to.AD    ${URL}/qa-answers.php?QaQuestionID=${QAQID}
    Log to console    Adding/Updating the answer
    Wait until page contains element    //button[@class='btn-input']
    ${element visible?}=    Run keyword and return status    ${QAQ answer}
    Run Keyword If    ${element visible?}    Click link    default=${QAQ answer}
    Run Keyword If    ${element visible?}==False    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Input text    //input[@id='field_Answer']    ${QAQ answer}
    Input text    //tr[@id='tr_AnswerValue']/td[@id='idAnswerValueEditbox']/input    ${grade}
    Input text    //input[@id='field_CheckerPaymentPercentageAffect']    ${effect in percent}
    Input text    //input[@id='field_ChangePriorityPoints']    ${Change priority}
    Click Save/Add/Delete/Cancel button.AD
    Log to console    "${QAQ answer}" answer is saved (${QAQ answer}, ${grade}, ${effect in percent}, ${Change priority})
    #Wait until page contains    successfully

Search QA stage.AD
    [Arguments]    ${QAQ name}
    go to.AD    ${URL}/stage-types.php?page_var_divide_recordsPerPage=600
    Wait until page contains element    //button[@class='btn-input']
    ${element visible?}=    Run keyword and return status    Page should contain    ${QAQ name}
    Run Keyword If    ${element visible?}    Click link    default=${QAQ name}
    Run Keyword If    ${element visible?}==False    Click element    //button[@class='btn-input']
    Wait Until Page Contains Element    //input[@id='field_Payment']
    Input text    //input[@id='field_StageName']    ${QAQ name}
    Input text    //input[@id='field_Payment']    10
    Input text    //input[@id='field_StageOrder']    6
    Set checkbox.AD    //input[@id='field_AllowCritApproval']    true
    Set checkbox.AD    //input[@id='field_AllowCritDisapproval']    true
    Set checkbox.AD    //input[@id='field_AllowReportComplete']    true
    Set checkbox.AD    //input[@id='field_AllowReportUncomplete']    true
    Set checkbox.AD    //input[@id='field_AllowAutomaticAssign']    true
    Click element    //*[@id="idPermittedCritStatusesEditbox"]/table/tbody/tr/td/span/button
    Click element    //body/div[2]/div/ul/li[1]/a/span[2]
    Element text should be    //table[@class='tedit']/tbody/tr[@class='actions']/td/table/tbody/tr/td[3]/a[@class='linkClass']    Cancel
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully
    go to.AD    ${URL}/stage-types.php?page_var_divide_recordsPerPage=600
    Wait until page contains element    //button[@class='btn-input']
    Click link    default=${QAQ name}
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${ReviewID 1} =    Fetch From Right    ${Pageurl}    &edit=
    ${QAQID} =    Fetch From Left    ${ReviewID 1}    &page_var_sorting_column
    Set global variable    ${QAQID}
    Log to console    "${QAQ name}" stage has been added/updated (ID="${QAQID}")

Search currency.AD
    [Arguments]    ${QAQ name}
    go to.AD    ${URL}/currencies.php
    Wait until page contains element    //button[@class='btn-input']
    Check errors on page [-1]
    ${element visible?}=    Run keyword and return status    Page should contain    ${QAQ name}
    Run Keyword If    ${element visible?}    Click link    default=${QAQ name}
    Run Keyword If    "${element visible?}"=="False"    Click element    //button[@class='btn-input']
    Wait Until Page Contains Element    //input[@id='field_CurrencyName']
    Input text    //input[@id='field_CurrencyName']    ${QAQ name}
    Input text    //input[@id='field_CurrencySign']    ??
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully
    go to.AD    ${URL}/currencies.php
    Wait until page contains element    //button[@class='btn-input']
    Click link    default=${QAQ name}
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${ReviewID 1} =    Fetch From Right    ${Pageurl}    &edit=
    ${QAQID} =    Fetch From Left    ${ReviewID 1}    &page_var_sorting_column
    Set global variable    ${QAQID}
    Log to console    "${QAQ name}" stage has been added/updated (ID="${QAQID}")

Add record.AD
    [Arguments]    ${name}    ${description}    ${page URL}
    go to.AD    ${URL}${page URL}
    Wait until page contains element    //button[@class='btn-input']
    ${element visible?}=    Run keyword and return status    Page should contain    ${name}
    Run Keyword If    "${element visible?}"=="True"    Click link    default=${name}
    Run Keyword If    "${element visible?}"=="False"    Click element    //button[@class='btn-input']
    ${status1}    Run Keyword And return status    Page Should Contain element    //input[@id='field_CreditName']
    Run Keyword If    '${status1}'=='True'    Input text    //input[@id='field_CreditName']    ${name}
    ${status2}    Run Keyword And return status    Page Should Contain element    //input[@id='field_BankName']
    Run Keyword If    '${status2}'=='True'    Input text    //input[@id='field_BankName']    ${name}
    ${status3}    Run Keyword And return status    Page Should Contain element    //input[@id='field_TransactName']
    Run Keyword If    '${status3}'=='True'    Input text    //input[@id='field_TransactName']    ${name}
    ${status4}    Run Keyword And return status    Page Should Contain element    //input[@id='field_UseVAT']
    Run Keyword If    '${status4}'=='True'    Set checkbox.AD    //input[@id='field_UseVAT']    true
    ${status6}    Run Keyword And return status    Page Should Contain element    //input[@id='field_Name']
    Run Keyword If    '${status6}'=='True'    Input text    //input[@id='field_Name']    ${name}
    ${status7}    Run Keyword And return status    Page Should Contain element    //input[@id='field_Name']
    Run Keyword If    '${status7}'=='True'    Input text    //input[@id='field_Name']    ${name}
    ${status8}    Run Keyword And return status    Page Should Contain element    //input[@id='field_Name']
    Run Keyword If    '${status8}'=='True'    Set today date    //*[@id="idDateEditbox"]/table/tbody    //*[@id="ui-datepicker-div"]/div[2]/button[1]
    Run keyword and ignore error    Input text    //input[@id='field_Description']    ${description}
    ${status5}    Run Keyword And return status    Page Should Contain element    //input[@id='field_CardNumber']
    Run Keyword If    '${status5}'=='True'    Set Credit card data.AD    ${description}
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully
    go to.AD    ${URL}${page URL}
    Wait until page contains element    //button[@class='btn-input']
    Run keyword and ignore error    Click link    default=${name}
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${ReviewID 1} =    Fetch From Right    ${Pageurl}    &edit=
    ${ID}=    Fetch From Left    ${ReviewID 1}    &page_var_sorting_column
    Set global variable    ${ID}
    Log to console    "${name}" has been added/updated (ID="${ID}")
    Check errors on page [-1]

Set Credit card data.AD
    [Arguments]    ${description}
    Execute JavaScript    window.document.getElementById("idFullnameEditbox").scrollIntoView(true)
    sleep    1
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Click element    //*[@id="idFullnameEditbox"]/table/tbody/tr/td/span/button
    sleep    1
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Scroll Element Into View    xpath=//li[contains(.,'Robot 02 [Full Name]')]
    wait until page contains element    xpath=//li[contains(.,'Robot 02 [Full Name]')]
    set focus to element    xpath=//li[contains(.,'Robot 02 [Full Name]')]
    sleep    1
    Click element    xpath=//li[contains(.,'Robot 02 [Full Name]')]
    Validate value (text)    //*[@id="idFullnameEditbox"]/table/tbody/tr/td/span/button    Robot 02 [Full Name]
    #Select dropdown    //*[@id="idFullnameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Robot 02 [Full Name]')]
    Input text    //input[@id='field_CardNumber']    ${name}
    #Input text    //input[@id='field_Description']    ${description}
    Set checkbox.AD    //input[@id='field_IsActive']    true
    Select dropdown.AD    //*[@id="idCreditNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Credit Account [RF]')]
    Select dropdown.AD    //*[@id="idBankNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Auto Bank [RF]')]
    Page should contain    Note: Checker Systems recommends not to input the card expiration date and not to input all the credit card digits. You may input only the last 4 digits.
    Set today date    //input[@id='field_ReceivedAt']    //*[@id="ui-datepicker-div"]/div[2]/button[1]
    Input text    //input[@id='field_Expiration']    02-02-2035

Set today date
    [Arguments]    ${element locator}    ${now button locator}
    Wait Until Page Contains Element    ${element locator}
    Click element    ${element locator}
    Wait Until Page Contains Element    ${now button locator}
    Click element    ${now button locator}
    Check errors on page [-1]
    Log to console    Date element (locator=${element locator} is set to today date)

Add shopper notification.AD
    [Arguments]    ${Message title}    ${Message to shopper}    ${link}
    go to.AD    ${URL}${link}
    log to console    Go to ${URL}${link} and add "${Message title}" notification
    Wait until page contains element    //button[@class='btn-input']
    ${1}=    Run keyword and return status    Page should contain    ${Message title}
    Run keyword if    "${1}"=="True"    Click link    default=${Message title}
    Run keyword if    "${1}"=="False"    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_57_label"]    ${Message to shopper}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_51_label"]    ${Message to shopper}
    Input text    //input[@id='field_NotificationDescription']    ${Message title}
    Input text    //input[@id='field_HourToRun']    08:00
    Input text    //input[@id='field_TimeFromOrderStart']    0
    Input text    //input[@id='field_TimeFromOrderEnd']    1
    ${a}=    Set variable    ${Message title}
    ${x}=    Run Keyword And Return Status    Should contain    ${a}    acceptance
    Run Keyword If    '${x}'=='True'    Select dropdown.AD    //*[@id="idEffectiveOrderStatusEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Assigned, awaiting shopper acceptance')]
    ${y}=    Run Keyword And Return Status    Should contain    ${a}    in progress
    Run Keyword If    '${y}'=='True'    Select dropdown.AD    //*[@id="idEffectiveOrderStatusEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'In progress')]
    ${c}=    Run Keyword And Return Status    Should contain    ${a}    implementation
    Run Keyword If    '${c}'=='True'    Select dropdown.AD    //*[@id="idEffectiveOrderStatusEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Accepted, awaiting implementation')]
    Select dropdown.AD    //*[@id="idSendViaEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'e-mail')]
    Click element    //input[@id='field_NotificationDescription']
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully    50
    log to console    Notification "${Message title}" was created/updated successfully
    go to.AD    ${URL}${link}
    Wait until page contains element    //button[@class='btn-input']    30
    Wait until page contains    ${Message title}

Delete notification.AD
    [Arguments]    ${Message title}    ${link}
    go to.AD    ${URL}${link}
    log to console    Go to ${URL}${link}.php and remove "${Message title}" notification
    Wait until page contains element    //button[@class='btn-input']
    ${1}=    Run keyword and return status    Page should contain    ${Message title}
    Run keyword if    "${1}"=="True"    Click link    default=${Message title}
    Run keyword if    "${1}"=="False"    log to console    ${Message title} not found
    Wait until page contains element    //input[@id='delete']
    Scroll Element Into View    //input[@id='delete']
    Click element    //input[@id='delete']
    Click element    //input[@id='sure_delete']
    Wait until page contains element    //button[@class='btn-input']
    Page should contain    ${Message title}
    log to console    Notification "${Message title}" was removed successfully

Add user notification.AD
    [Arguments]    ${Message title}    ${Message to shopper}    ${link}
    go to.AD    ${URL}${link}
    log to console    Go to ${URL}${link} and add "${Message title}" notification
    Wait until page contains element    //button[@class='btn-input']
    ${1}=    Run keyword and return status    Page should contain    ${Message title}
    Run keyword if    "${1}"=="True"    Click link    default=${Message title}
    Run keyword if    "${1}"=="False"    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    ##Enter notification details
    #Click element    //*[@id="idActionToTakeEditbox"]/table/tbody/tr/td
    #Execute Javascript    window.document.getElementById("idClientNameEditbox").scrollIntoView(true);
    #Select from list by label    id=field_ActionToTake    SMS
    Execute Javascript    window.document.getElementById("idActionToTakeEditbox").scrollIntoView(true);
    #Click element    //*[@id="idActionToTakeEditbox"]/table/tbody/tr/td/span/button    //*[@id="idActionToTakeEditbox"]/table/tbody/tr/td
    ${a}=    Set variable    ${Message title}
    ${x}=    Run Keyword And Return Status    Should contain    ${a}    e-mail
    Run Keyword If    '${x}'=='True'    Select dropdown.AD    //*[@id="idActionToTakeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'e-mail')]
    ${y}=    Run Keyword And Return Status    Should contain    ${a}    SMS
    Run Keyword If    '${y}'=='True'    Select dropdown.AD    //*[@id="idActionToTakeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'SMS')]
    ${c}=    Run Keyword And Return Status    Should contain    ${a}    Approve scorecard
    Run Keyword If    '${c}'=='True'    Select dropdown.AD    //*[@id="idActionToTakeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Approve review')]
    ${c}=    Run Keyword And Return Status    Should contain    ${a}    Disapprove scorecard
    Run Keyword If    '${c}'=='True'    Select dropdown.AD    //*[@id="idActionToTakeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Disapprove review')]
    Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    Select dropdown.AD    //*[@id="idEffectiveStageEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Stage 1 - Spellcheck&content validation [RF]')]
    Input text    //input[@id='field_HourToRun']    08:00
    Click element    //input[@id='field_HourToRun']
    Mouse over    //input[@id='field_HourToRun']
    Wait until page contains element    //input[@id='field_HourToEnd']
    Run keyword and ignore error    Input text    //input[@id='field_HourToEnd']    23:59
    Run keyword and ignore error    Click element    //input[@id='field_HourToEnd']
    Execute Javascript    window.document.getElementById("idClientNameEditbox").scrollIntoView(true);
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_57_label"]    ${Message to shopper}
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_51_label"]    ${Message to shopper}
    Input text    //input[@id='field_NotificationDescription']    ${Message title}
    Set checkbox.AD    //input[@id='field_IsActive']    true
    Input text    //input[@id='field_RepeatEveryMinutes']    60
    Input text    //input[@id='field_TimeFromAssignmentStart']    0
    Input text    //input[@id='field_TimeFromAssignmentEnd']    1
    Wait until page contains element    //*[@id="idActionToTakeEditbox"]/table/tbody/tr/td/span/button
    click element    //input[@id='field_HourToRun']
    Click Save/Add/Delete/Cancel button.AD
    ###
    Wait until page contains    successfully    50
    log to console    Notification "${Message title}" was created/updated successfully
    go to.AD    ${URL}${link}
    Wait until page contains element    //button[@class='btn-input']    5
    Wait until page contains    ${Message title}

Check if sorting is visible.AD
    [Arguments]    ${table id}
    Log to console    -----------------------[SUB TASK START] Checking if each table` columns contain "sorting":
    ${id}=    Set variable    0
    ${index}    Set Variable    1
    ${Row} =    Get Element Count    //*[@${table id}]/thead/tr/th    #how many (columns) do we have    //*[@${table id}]/thead/tr[1]/th
    #${Rows} =    Evaluate    ${Row}+1
    #${FILTER0 VISIBLE}    Run keyword and return status    Page should contain element    //*[@id="filter_0"]
    #Run keyword if    ${FILTER0 VISIBLE}==True    Log to console    //*[@id="filter_0"] -->"sorting" is visible +
    #iterate for each column
    FOR    ${rowindex}    IN RANGE    ${Row}
        ${FILTER VISIBLE}    Run keyword and return status    Page should contain element    //*[@id="filter_${id}"]
        #Exit For Loop If    ${FILTER VISIBLE}==False
        ${Column name}=    get text    //*[@${table id}]/thead/tr/th[${index}]
        ${attribute}=    Get Element Attribute    //*[@${table id}]/thead/tr/th[${index}]    filter
        Log    ${attribute}
        Run keyword if    "${attribute}"=="None" and "${FILTER VISIBLE}"=="True"    Element should be visible    //input[@id='filter_${id}']
        Run keyword if    ${FILTER VISIBLE}==True    Log to console    Column №"${index}": "${Column name}" -->"sorting" input field is visible (+)
        Run keyword if    ${FILTER VISIBLE}==True    Scroll element into view    //*[@id="filter_${id}"]
        Run keyword if    ${FILTER VISIBLE}==True    Element should be visible    //input[@id='filter_${id}']
        Run keyword if    "${attribute}"=="false"    Element should not be visible    //input[@id='filter_${id}']
        Run keyword if    "${attribute}"=="false"    log to console    "${Column name}" -> Column is not sortable (!)
        ${id}=    Evaluate    ${id}+1
        ${index}=    Evaluate    ${index}+1
    #Exit For Loop If    ${FILTER VISIBLE}==False
    END
    Log to console    -----------------------[SUB TASK END. STATUS +]

Order page - check elements. AD
    [Arguments]    ${order status}    ${date}    ${day}    ${Starting time}    ${Ending time}
    go to.AD    ${URL}/crit-order-assignments.php?OrderID=${found order ID}
    wait until page contains element    //td[1]/span[@class='critInfoItemTitle'][1]
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][1]    Description
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][2]    Client name
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][3]    Short branch name
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][4]    Region name
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][5]    City
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][6]    Address
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][7]    Questionnaire name
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][8]    Briefing description
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][9]    Status
    ${Assessor name visible?}=    Run keyword and return status    Page should contain    Assigned, awaiting shopper acceptance
    ${Canceled text visible?}=    Run keyword and return status    Page should contain    Canceled
    ${Finished, awaiting approval}=    Run keyword and return status    Page should contain    Finished, awaiting approval
    ${Criticism}=    Run keyword and return status    Page should contain    Criticism
    ${Ordered, awaiting assignation}=    Run keyword and return status    Page should contain    Ordered, awaiting assignation
    Run keyword if    ${Finished, awaiting approval}==True    Finished, awaiting approval/AD    ${date}    ${day}    ${Starting time}    ${Ending time}
    #Run keyword if    "${Ordered, awaiting assignation}"=="True"    Not Assigned order/AD    ${date}    ${day}    ${Starting time}    ${Ending time}
    Run keyword if    "${Ordered, awaiting assignation}"=="True" and "${Criticism}"=="True"    Assigned order/AD    ${date}    ${day}    ${Starting time}    ${Ending time}
    #Run keyword if    ${Canceled text visible?}==True
    #Run keyword if    ${Assessor name visible?}==False    Not Assigned order/AD    ${date}    ${day}    ${Starting time}    ${Ending time}
    Page should contain element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table[1]/tbody/tr/td[2]
    ##
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][1]    Limit for products payment
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][2]    Budget control confirmation
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][3]    Services payment
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][4]    Transportation payment
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][5]    Survey payment
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][6]    Bonus payment
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][7]    Time extent (minutes)
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][8]    Maximum reviews per day
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][9]    Allow orders on holidays
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][10]    Allow orders on special days
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][11]    Enforce dates policy
    Element text should be    //td[2]/span[@class='critInfoItemTitle'][12]    Shopper availability radius
    ##
    Element text should be    //td[1]/span[@class='CritInfoItem'][1]    ${test order description}
    Element text should be    //td[1]/span[@class='CritInfoItem'][2]    ${RobotTestClient}
    Element text should be    //td[1]/span[@class='CritInfoItem'][3]    ${Short auto branch name 01}
    Element text should be    //td[1]/span[@class='CritInfoItem'][4]    Robot region 01
    Element text should be    //td[1]/span[@class='CritInfoItem'][5]    Robot city 01
    Element text should be    //td[1]/span[@class='CritInfoItem'][6]    Zelena street 45A, 44
    Element text should be    //td[1]/span[@class='CritInfoItem'][7]    ${RobotQ-ry SHOPPERS}
    Element text should be    //td[1]/span[@class='CritInfoItem'][8]    ${RF Briefing}
    Element text should be    //td[1]/span[@class='CritInfoItem'][9]    ${order status}
    ##
    Element text should be    //td[2]/span[@class='CritInfoItem'][1]    4.00
    Element text should be    //td[2]/span[@class='CritInfoItem'][2]    No
    Element text should be    //td[2]/span[@class='CritInfoItem'][3]    4.00
    Element text should be    //td[2]/span[@class='CritInfoItem'][4]    3.00
    Element text should be    //td[2]/span[@class='CritInfoItem'][5]    30.00
    Element text should be    //td[2]/span[@class='CritInfoItem'][6]    1.00
    Element text should be    //td[2]/span[@class='CritInfoItem'][7]    5
    Element text should be    //td[2]/span[@class='CritInfoItem'][8]    100
    Element text should be    //td[2]/span[@class='CritInfoItem'][9]    Yes
    Element text should be    //td[2]/span[@class='CritInfoItem'][10]    Yes
    Element text should be    //td[2]/span[@class='CritInfoItem'][11]    No
    Element text should be    //td[2]/span[@class='CritInfoItem'][12]    0
    Log To Console    Order status="${order status}" (+)
    Log To Console    Order`s details are correct (+)

Assigned order/AD
    [Arguments]    ${date}    ${day}    ${Starting time}    ${Ending time}
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][10]    Shopper
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][11]    Date
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][12]    Day in week
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][13]    Starting time
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][14]    Ending time
    Element text should be    //td[1]/span[@class='CritInfoItem'][10]    Robot 02 [Full Name]
    Element text should be    //td[1]/span[@class='CritInfoItem'][11]    ${date}
    Element text should be    //td[1]/span[@class='CritInfoItem'][12]    ${day}
    Element text should be    //td[1]/span[@class='CritInfoItem'][13]    ${Starting time}
    Element text should be    //td[1]/span[@class='CritInfoItem'][14]    ${Ending time}
    #Element text should be    //td[2]/span[@class='CritInfoItem'][10]    Yes

Not Assigned order/AD
    [Arguments]    ${date}    ${day}    ${Starting time}    ${Ending time}
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][10]    Date
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][11]    Day in week
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][12]    Starting time
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][13]    Ending time
    Run Keyword And Ignore Error    Element text should be    //td[1]/span[@class='CritInfoItem'][10]    ${date}
    Element text should be    //td[1]/span[@class='CritInfoItem'][11]    ${day}
    Element text should be    //td[1]/span[@class='CritInfoItem'][12]    ${Starting time}
    Element text should be    //td[1]/span[@class='CritInfoItem'][13]    ${Ending time}
    Element text should be    //td[2]/span[@class='CritInfoItem'][10]    Yes
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][8]    Briefing description

Finished, awaiting approval/AD
    [Arguments]    ${date}    ${day}    ${Starting time}    ${Ending time}
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][10]    Criticism
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][11]    Shopper
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][12]    Date
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][13]    Day in week
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][14]    Starting time
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][15]    Ending time
    ###
    Element text should be    //td[1]/span[@class='CritInfoItem'][11]    Robot 02 [Full Name]
    Element text should be    //td[1]/span[@class='CritInfoItem'][12]    ${date}
    Element text should be    //td[1]/span[@class='CritInfoItem'][13]    ${day}
    Element text should be    //td[1]/span[@class='CritInfoItem'][14]    ${Starting time}
    Element text should be    //td[1]/span[@class='CritInfoItem'][15]    ${Ending time}
    #Element text should be    //td[2]/span[@class='CritInfoItem'][10]    Yes
    Element text should be    //td[1]/span[@class='CritInfoItem'][9]    Finished, awaiting approval
    Element text should be    //td[1]/span[@class='CritInfoItem'][10]    ${ReviewID}

Select color.AD
    [Arguments]    ${element ID}    ${exp value}
    wait until page contains element    ${element ID}
    set focus to element    ${element ID}
    Click element    ${element ID}
    wait until page contains element    //input[@class='sp-input']
    set focus to element    //input[@class='sp-input']
    wait until page contains element    //input[@class='sp-input']
    Run keyword and ignore error    Input text    //input[@class='sp-input']    ${exp value}
    Run keyword and ignore error    Input text    //body/div[2]/div[2]/div[2]/input    ${exp value}
    Run keyword and ignore error    Input text    //body/div[3]/div[2]/div[2]/input    ${exp value}
    Run keyword and ignore error    Input text    //body/div[4]/div[2]/div[2]/input    ${exp value}
    Run keyword and ignore error    Input text    //body/div[5]/div[2]/div[2]/input    ${exp value}
    #
    Run keyword and ignore error    Click element    //button[@class='sp-choose']
    Run keyword and ignore error    Click element    //body/div[2]/div[2]/div[4]/button
    Run keyword and ignore error    Click element    //body/div[3]/div[2]/div[4]/button
    Run keyword and ignore error    Click element    //body/div[4]/div[2]/div[4]/button
    Run keyword and ignore error    Click element    //body/div[5]/div[2]/div[4]/button
    Run keyword and ignore error    Click element    //body/div[6]/div[2]/div[4]/button
    wait until page contains element    ${element ID}
    Check errors on page [-1]

Check returned review elements.AD
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][16]    Yes, Returned 1 times
    Page should contain    Returned by manager REV DATE: ${DD.MM.YY}

Check footer info.AD
    [Arguments]    ${link}    ${check search bar?}    ${check language box?}
    go to.AD    ${link}
    ${Footer is visible?}    Run Keyword And Return Status    Page should contain    ${GENERAL INFO: company name} [${URLIndex} system]
    Run Keyword If    '${Footer is visible?}'=='False'    log to console    "${link}" - FOOTER IS MISSING!!!!
    ${Footer is visible?}    Run Keyword And Return Status    Page should contain    ${GENERAL INFO: company address} | RF REVN DT: ${DD.MM.YY} - ${HH:MM} | © 2005-2022
    Run Keyword If    '${Footer is visible?}'=='False'    log    "${link}" - FOOTER IS MISSING!!!!
    ${Pageurl} =    Execute Javascript    return window.location.href    #get short test URL
    ${a}=    Set variable    ${Pageurl}
    ${x}=    Run Keyword And Return Status    Should contain    ${a}    /c_
    ${Call center}    Run Keyword And Return Status    Should contain    ${a}    CallCenterDashboard
    Run Keyword If    '${x}'=='True'    Page should contain    Email info-${URL1index}-system@checker-soft.com
    Run Keyword If    '${x}'=='True'    Page should contain    ${GENERAL INFO: company name} [${URLIndex} system]
    Run Keyword If    '${x}'=='True'    Page should contain    Phone ${GENERAL INFO: company phone}
    Log to console    ${Pageurl} Status: ok (+)
    Run Keyword If    '${check search bar?}'=='YES'    Page should contain element    //input[@class='searchClass']    # search bar
    Run Keyword If    '${check language box?}'=='YES'    Page should contain element    //*[@id="set-language"]/span    # language box

GMAIL: Scorecard below limit.AD
    Log to console    Expected email: "Review below minimum"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=60
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Scorecard below minimum:
    should contain    ${subject}    Branch: BranchFullname 05 (for Internet${\n} Surveys)
    should contain    ${subject}    score: 0.00 minimum: 0
    ###
    Log to console    Email subject is correct
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        Should Contain    ${payload}    Scorecard below minimum: Branch: BranchFullname 05 (for Internet Surveys) score: 0.00 minimum: 0
        Should Contain    ${payload}    Click here to view the
    END
    ###
    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

Check Review handling details page (Single order).AD
    [Arguments]    ${exp status}    ${returned?}    ${Free text message}    ${Internal message}
    go to.AD    ${URL}/crit-handling-details.php?CritID=${ReviewID}
    Log to console    1. Checking page elements 2. Review status (="Finished, awaiting approval") 3. Clicking "Approve" button
    Wait Until Page Contains Element    //input[@id='checkAndSendAlerts']
    Page should contain element    //input[@class='btn-input']
    Page should contain element    id=SimulateAlerts
    Page should contain element    id=SimulateReview
    Element Should Be Visible    //div[1]/table[1]/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/div/table/tbody/tr[1]/td[2]/table/tbody/tr[2]/td/fieldset/form/table[2]/tbody/tr/td/table/tbody/tr[2]/td[4]/a[1]/img
    Element Should Be Visible    //div[1]/table[1]/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/div/table/tbody/tr[1]/td[2]/table/tbody/tr[2]/td/fieldset/form/table[2]/tbody/tr/td/table/tbody/tr[2]/td[4]/a[1]/img
    Wait until page contains element    //form[@id='_attachments']/input[2]
    Wait until page contains element    //form[@id='_attachments']/input[3]
    Wait until page contains element    //form[@id='_attachments']/input[4]
    Wait until page contains element    //form[@id='_attachments']/input[5]
    Wait until page contains element    //form[@id='_attachments']/input[6]
    Wait until page contains element    //form[@id='_attachments']/input[7]
    Wait until page contains element    //form[@id='_attachments']/input[8]
    ###
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][1]    ${test order description}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][2]    ${found order ID}
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][3]    ${ManagerUsername}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][4]    ${RobotTestClient}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][5]    RF Branch 01 (full name) (RF Branch 01 (short name))
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][6]    Zelena street 45A, 44
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][7]    ${RobotQ-ry SHOPPERS}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][8]    ${RF Briefing}
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][9]    ${DD.MM.YY} ${Ttime}    #should match regexp \ ${item} \ \ \ \ ^Liability: \\d{3}-\\d{1}-2\\d{4}.*$
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][10]    ${DD.MM.YY} ${Ttime}
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][11]    ${DD.MM.YY} ${Ttime}
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][12]    ${DD.MM.YY} ${Ttime}
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][13]    Robot 02 [Full Name] (Robot 02 [Short Name])
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][14]    1
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][15]    1
    ${a}=    Set variable    ${returned?}
    ${x}=    Run Keyword And Return Status    Should contain    ${a}    ${test order description}
    Run Keyword If    '${x}'=='NO'    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][16]    No
    Run Keyword If    '${x}'=='YES'    Check returned review elements.AD
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][17]    No
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][18]    ${ReviewID} ${exp status}
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][19]    ${Free text message}
    Page should contain    ${Internal message}
    Page should contain    ${Free text message}
    Page should contain    ${exp status}
    Page should contain    ${ReviewID}
    #check default links
    #####    # \ \ \ # \ \ \ # \ \ \ //*[@id="FiltersArea"]/table/tbody/tr[1]/td[1]/fieldset[1]/legend
    Page should contain link    default=Send a message to the shopper
    Page should contain link    default=Edit entire review
    Page should contain link    default=Edit review
    Page should contain link    default=Display full review in a new window
    Page should contain link    default=Change branch linked to this review
    Page should contain link    default=Check for recording files
    #check elements
    Page should contain element    //*[@id="FiltersArea"]/table/tbody/tr[1]/td[2]/table/tbody/tr[2]/td/fieldset    #files div
    Page should contain element    //*[@id="FiltersArea"]/table/tbody/tr[1]/td[2]/table/tbody/tr[1]/td/fieldset/form/table/tbody/tr[2]/td    #Quality assurance note
    Page should contain element    //*[@id="FiltersArea"]/table/tbody/tr[1]/td[1]/fieldset[2]    #option div
    Page should contain element    //*[@id="FiltersArea"]/table/tbody/tr[1]/td[2]/table/tbody/tr[1]/td/fieldset    #qa div
    Page should contain element    //*[@id="FiltersArea"]/table/tbody/tr[1]/td[1]/fieldset[1]    #details div
    #Page should contain element    //input[@id='InternalApproveCrits']
    Page should contain element    //*[@id="checkAndSendAlerts"]
    Page should contain element    //*[@id="SimulateAlerts"]
    Page should contain element    //*[@id="SimulateReview"]
    Page should contain element    //*[@id="FiltersArea"]/table/tbody/tr[1]/td[1]/fieldset[2]/table/tbody/tr[4]/td/table/tbody/tr[4]/td[2]/input
    Page should contain element    //*[@id="FiltersArea"]/table/tbody/tr[1]/td[1]/fieldset[2]/table/tbody/tr[1]/td/a
    Page should contain element    //*[@id="QaUpdate"]
    #Page should contain element    //*[@id="FiltersArea"]/table/tbody/tr[1]/td[2]/table/tbody/tr[1]/td/fieldset/form/table/tbody/tr[2]/td/input[3]
    Page should contain element    //*[@id="fileupload"]
    #check text
    ###
    Element text should be    //tr[1]/td[1]/fieldset[1]/legend    Details
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][1]    Mass order description
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][2]    OrderID
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][3]    Assigned to shopper by
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][4]    Client name
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][5]    Full name
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][6]    Address
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][7]    Questionnaire name
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][8]    Briefing description
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][9]    Shopper acceptance date
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][9]    Start time
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][10]    Finish time
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][12]    Order due date
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][13]    Shopper name
    #Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][14]
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][15]    Shopper comments
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][16]    Was sent back to shopper
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][17]    Is Duplicate
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][18]    Review number
    Element text should be    //tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][19]    Free text
    Page should contain element    id=checkAndSendAlerts
    Element text should be    //span[@class='critInfoItemTitle'][14]    Applicants

Add question (Scale).AD
    [Arguments]    ${Code}    ${name}    ${color}    ${grade}    ${report order}    ${Color in the reports}
    go to.AD    ${URL}/custom-scale-values.php?scale=${Scale ID}
    Log to console    Let`s create/edit "${name}" answer at ${URL}/custom-scale-values.php?scale=${Scale ID}
    Wait until page contains element    //button[@class='btn-input']
    ${element visible?}    Run keyword and return status    Page should contain    ${name}
    Run keyword if    ${element visible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Run keyword if    ${element visible?}==True    Get ID    id="table_rows"    ${name}    1    2
    Run keyword if    ${element visible?}==True    Go to2.AD    ${URL}/custom-scale-values.php?edit=${found ID}&scale=${Scale ID}
    Wait until page contains element    //input[@id='field_Description']
    Input text    //input[@id='field_Description']    ${name}
    Input text    //input[@id='field_Value']    ${grade}
    Input text    //input[@id='field_ScaleValueCode']    Code${Code}
    Set checkbox.AD    //input[@id='field_vBold']    true
    Set checkbox.AD    //input[@id='field_vItalics']    true
    Set checkbox.AD    //input[@id='field_vUnderline']    true
    Input text    //input[@id='field_ReportColor']    ${Color in the reports}
    Input text    //input[@id='field_ReportOrder']    ${report order}
    click element    //*[@id="idvColorEditbox"]/table/tbody/tr/td/div/div[1]
    Input text    //input[@class='sp-input']    ${color}
    Input text    _CustomScaleValuesAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    ${name} (in Robot language [RTL])
    Input text    _CustomScaleValuesAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    ${name} (in Robot language [LTR])
    Validate value (value)    _CustomScaleValuesAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    ${name} (in Robot language [RTL])
    Validate value (value)    _CustomScaleValuesAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    ${name} (in Robot language [LTR])
    click element    //button[@class='sp-choose']
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    go to.AD    ${URL}/custom-scale-values.php?edit=${found ID}&scale=${Scale ID}
    Wait until page contains element    //*[@id="idvColorEditbox"]/table/tbody/tr/td/div/div[1]/div
    ${actual color}    Get element attribute    //*[@id="idvColorEditbox"]/table/tbody/tr/td/div/div[1]/div    style
    Run keyword and ignore error    Should be equal    ${actual color}    background-color: ${color};
    Validate value (value)    _CustomScaleValuesAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    ${name} (in Robot language [RTL])
    Validate value (value)    _CustomScaleValuesAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    ${name} (in Robot language [LTR])
    Validate value (value)    //input[@id='field_Description']    ${name}
    Validate value (value)    //input[@id='field_Value']    ${grade}
    Validate value (value)    //input[@id='field_ScaleValueCode']    Code${Code}
    Validate value (value)    //input[@id='field_ReportColor']    ${Color in the reports}
    Validate value (value)    //input[@id='field_ReportOrder']    ${report order}
    Log to console    "${name}" has been added/updated with next values: ${name} | ${color} | ${grade}
    Checkbox should be selected    //input[@id='field_vBold']
    Checkbox should be selected    //input[@id='field_vItalics']
    Checkbox should be selected    //input[@id='field_vUnderline']
    Checkbox should not be selected    //input[@id='field_Exclude']

Edit branch.AD
    sleep    1

Add/Update Shopper property.AD
    [Arguments]    ${Property name}    ${Mandatory?}    ${OrderReg?}    ${DIsplayCon?}    ${show in registr?}    ${AllowotherEdit?}    ${AllowShopperEdit}    ${Multiple?}    ${Order?}
    Run keyword and ignore error    go to.AD    ${URL}/checker-props.php?edit=${parent prop ID}
    Log to console    Let`s add/update "${Property name}"
    ${is element visible?}    Run keyword and return status    page should contain element    //input[@id='field_PropertyName']
    Run keyword if    ${is element visible?}==False    go to.AD    ${URL}/checker-props.php?addnew=checker-props.php
    Wait until page contains element    //input[@id='field_PropertyName']    8
    Input text    //input[@id='field_PropertyName']    ${Property name}
    Set checkbox.AD    //input[@id='field_Mandatory']    ${Mandatory?}
    Input text    //input[@id='field_OrderInRegistration']    ${OrderReg?}
    Input text    //input[@id='field_DisplayCondition']    ${DIsplayCon?}
    Set checkbox.AD    //input[@id='field_ShowInRegistration']    ${show in registr?}
    Set checkbox.AD    //input[@id='field_AllowOtherAddition']    ${AllowotherEdit?}
    Set checkbox.AD    //input[@id='field_AllowShopperEdit']    ${AllowShopperEdit}
    Set checkbox.AD    //input[@id='field_MultiplePossibilities']    ${Multiple?}
    Input text    //input[@id='field_Order']    ${Order?}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    Log to console    "${Property name}" has been added/updated

Search agreement by name.AD
    [Arguments]    ${Agreement name}    ${Agreement content}
    go to.AD    ${URL}/company-agreements.php
    ${IS VISIBLE?}=    Run keyword and return status    Page should contain    ${Agreement name}
    Run keyword if    ${IS VISIBLE?}==True    Check if sorting is visible.AD    id="table_rows"
    Run keyword if    ${IS VISIBLE?}==True    click link    default=${Agreement name}
    Run keyword if    ${IS VISIBLE?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Wait until page contains element    //input[@id='field_Title']    8
    Input text    //input[@id='field_Title']    ${Agreement name}
    ${a}=    Set variable    ${Agreement name}
    ${sh}=    Run Keyword And Return Status    Should contain    ${a}    Shoppers
    ${us}=    Run Keyword And Return Status    Should contain    ${a}    Users
    ${pa}=    Run Keyword And Return Status    Should contain    ${a}    Panelists
    ${su}=    Run Keyword And Return Status    Should contain    ${a}    Survey subject
    ${optional}=    Run Keyword And Return Status    Should contain    ${a}    optional
    ${required}=    Run Keyword And Return Status    Should contain    ${a}    required
    sleep    2
    Run Keyword If    "${sh}"=="True"    Select dropdown.AD    //*[@id="idTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Shoppers')]
    Run Keyword If    "${us}"=="True"    Select dropdown.AD    //*[@id="idTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Users')]
    Run Keyword If    "${pa}"=="True"    Select dropdown.AD    //*[@id="idTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Panelists')]
    Run Keyword If    "${su}"=="True"    Select dropdown.AD    //*[@id="idTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Survey subject')]
    Run Keyword If    "${optional}"=="True"    Set checkbox.AD    //input[@id='field_RequiredInOrderToUse']    None
    Run Keyword If    "${required}"=="True"    Set checkbox.AD    //input[@id='field_RequiredInOrderToUse']    true
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_57_label"]    ${Agreement content}
    ...    ELSE    Enter editor text.AD    //*[@id="cke_51_label"]    ${Agreement content}
    sleep    1
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully    8
    Check errors on page [-1]
    Wait until page contains    ${Agreement name}
    click link    default=${Agreement name}
    Wait until page contains element    //input[@id='field_Title']
    Get ID from ad bar.AD    edit=    &&page_var_sorting_column
    Log to console    "${Agreement name}" has been created/updated (ID="${ReviewID}")

Edit questionnaire [Certificate]
    go to.AD    ${URL}/sets.php?edit=${found ID}
    Log to console    Let`s update the q-ry at ${URL}/sets.php?edit=${found ID}
    Get Title
    Mouse over    //input[@id='field_SetDescription']
    Input Text    //input[@id='field_SetDescription']    Questionnaire description: updated ${DD.MM.YY}
    Input Text    //input[@id='field_SetCode']    RFQRY03
    Input Text    //input[@id='field_QuestionsPerPage']    1
    Select dropdown.AD    //*[@id="idAllowCritFileUploadEditbox"]/table/tbody/tr/td/span/button    //div[9]/ul/li[4]/label/span
    Select dropdown.AD    //*[@id="idDefault_briefingEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RF Briefing}')]
    Set checkbox.AD    //input[@id='field_AllowCheckerToSetLang']    true
    Set checkbox.AD    //input[@id='field_AllowSimulation']    true
    Set checkbox.AD    //input[@id='field_ShowTimer']    true
    Set checkbox.AD    //input[@id='field_AutoApprovePayment']    true
    Input Text    //input[@id='field_DefaultPaymentForChecker']    30
    Input Text    //input[@id='field_DefaultPurchaseLimit']    4
    Input Text    //input[@id='field_DefaultNonRefundableServicePayment']    4
    Input Text    //input[@id='field_DefaultTransportationPayment']    3
    Input Text    //input[@id='field_DefaultBonusPayment']    1
    Click button    id=save
    Check errors on page [-1]
    #Page should contai    # \ \ \ saved successfully
    go to.AD    ${URL}/sets.php?edit=${found ID}
    Mouse over    //input[@id='field_SetDescription']
    #Click element    //input[@id='field_Fullname']
    ${UpdatedDescription}    Get Element Attribute    //input[@id='field_SetDescription']    value
    Should Be Equal    ${UpdatedDescription}    Questionnaire description: updated ${DD.MM.YY}
    Check errors on page [-1]
    Log to console    Qry description has been updated to "Updated ${DD.MM.YY}" successfully
    Exit for loop

Get ID from ad bar.AD
    [Arguments]    ${from right}    ${from left}
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${Pageurl 1} =    Fetch From Right    ${Pageurl}    ${from right}
    ${found ID} =    Fetch From Left    ${Pageurl 1}    ${from left}
    Set global variable    ${found ID}
    Log to console    Item ID: "${found ID}"
    ${ReviewID}=    set variable    ${found ID}
    Set global variable    ${ReviewID}
    Check errors on page [-1]

Search the Q-ry(via table).AD
    [Arguments]    ${Robot q-ry}    ${qry type index}
    Log to console    Searching "${Robot q-ry}" via records table
    go to.AD    ${URL}/sets.php?page_var_divide_recordsPerPage=800&page_var_divide_curPage=1&page_var_sorting_column=SetName&page_var_sorting_order=up&page_var_filter_IsActive=&page_var_filter_ClientName=&page_var_filter_SetTypeLink=&popup=
    wait until page contains element    //button[@class='btn-input']
    click element    //*[@id="TableEdit_filtering"]/tbody/tr/td[3]/div/div/table/tbody/tr/td/span/button
    click element    //div[4]/ul/li[${qry type index}]/label/span
    ${abc}=    Set variable    ${Robot q-ry}
    ${check qry-name?}=    Run Keyword And Return Status    Should contain    ${abc}    Certificate
    Run keyword if    "${abc}"=="False"    Select dropdown.AD    //*[@id="TableEdit_filtering"]/tbody/tr/td[2]/div/div/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    wait until page contains element    //button[@class='btn-input']
    ${index}=    Set variable    1
    FOR    ${i}    IN RANGE    2
        ${element visible?}    Run keyword and return status    Page should contain    ${Robot q-ry}
        Run keyword if    ${element visible?}==True    Click link    default=${Robot q-ry}
        Run keyword if    ${element visible?}==False    Create new questionnaire    ${Robot q-ry}
        Run Keyword If    ${element visible?}==True    exit for loop
        ${index}=    Evaluate    ${index}+1
        Log to console    try    # ${index}.
    END
    Get ID from ad bar.AD    &edit=    &page_var_sorting_column

Check brif.SD
    Run keyword and ignore error    select frame    questionnaire
    Run keyword and ignore error    Element text should be    //span[@class='critInfoItemTitle'][1]    Short branch name
    Run keyword and ignore error    Element text should be    //span[@class='CritInfoItem'][1]    ${Short auto branch name 01}
    Run keyword and ignore error    Element text should be    //span[@class='critInfoItemTitle'][2]    Questionnaire name
    Run keyword and ignore error    Element text should be    //span[@class='CritInfoItem'][2]    ${RobotQ-ry SHOPPERS}
    Element text should be    //center/table/tbody/tr[2]/td/span[1]    Briefing
    Page should contain    Briefing content:
    Page should contain    What Is a Content Brief?
    Page should contain    (2 min read)
    Page should contain    A content brief is a document that compiles all the information a content creator needs to execute a piece of content. Usually, it’s created by a content strategist or editorial manager. The best content briefs seamlessly combine editorial direction and content strategy to ensure every piece of content is both well-written and primed to drive SEO results.
    Page should contain    Every company has its own way of creating content briefs, and there are many valid approaches...
    Page should contain    RF REVN DT:
    Page should contain    ENV/SYS:
    Page should contain    Order date
    Page should contain    Briefing:
    Run keyword and ignore error    select frame    questionnaire
    Run keyword and ignore error    Click element    //input[@id='begin']
    Run keyword and ignore error    Click element    //*[@id="begin"]
    Run keyword and ignore error    Unselect Frame

Check translation version.AD
    [Arguments]    ${file version}
    Enter existing login and password.AD    checker    C43tgpcz
    Switch language.AD    21
    go to.AD    ${URL}/main-menu.php
    Page should contain    Ласкаво просимо,
    Page should contain    (v.${file version})
    Log to console    Status: Done. System upadated up to "v.${file version}" version

Shopper comments visible.AD
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][16]    Shopper comments
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][17]    Was sent back to shopper
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][18]    Is Duplicate
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][19]    Review number
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][20]    Free text

Shopper comments is not visible.AD
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][17]    Review number
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][16]    Was sent back to shopper
    Run keyword and ignore error    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][18]    Is Duplicate
    Element text should be    //td[1]/fieldset[1]/span[@class='critInfoItemTitle'][18]    Free text

Send email via mass page.AD
    [Arguments]    ${send to shopper?}    ${send to user?}
    go to.AD    ${URL}/mass-sms.php
    Log to console    Go to ${URL}/mass-sms.php
    Wait until page contains element    //select[@id='ClientID']    15
    Run Keyword If    ${send to shopper?}==1    Select dropdown.AD    //select[@id='ClientID']    xpath=//option[contains(.,'${RobotTestClient}')]
    Run Keyword If    ${send to shopper?}==1    select from list by label    id=lomeshane2    ${RobotAnalystUser 01}
    Run Keyword If    ${send to shopper?}==1    Click element    //form/p[1]/table/tbody/tr/td[2]/input[@id='moveButton']
    Run Keyword If    ${send to user?}==1    Click element    //form/p[1]/table/tbody/tr/td[2]/input[@id='moveButton']
    Run Keyword If    ${send to user?}==1    select from list by label    //select[@id='lomeshane']    Robot 02 [Full Name]
    Run Keyword If    ${send to user?}==1    Click element    //form/table/tbody/tr/td[2]/input[@id='moveButton']
    Input text    //input[@id='subj']    Subject: Test Email (${DD.MM.YY})
    Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_57"]    <p>This test email was sent using page&nbsp;.../mass-sms.php</p>
    Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_51"]    <p>This test email was sent using page&nbsp;.../mass-sms.php</p>
    #
    Execute JavaScript    window.document.getElementById("send").scrollIntoView(true)
    Select dropdown.AD    //*[@id="sendWhat"]    xpath=//option[contains(.,'Email')]
    Click button    send
    Handle Alert
    Wait until page contains    Sent ok
    Log to console    Status: Sent ok (+)
    Log to console    Email Subject: "Test Email Subject ${DD.MM.YY}"
    Log to console    Email Body: "This test email was sent using page .../mass-sms.php Date: ${DD.MM.YY}"

Check records in tables keyword
    [Arguments]    ${test URL}
    go to.AD    ${URL}${test URL}
    ${Is element visible?}=    run keyword and return status    page should contain element    //*[@id="page_division_wrapping_table"]/tbody/tr/td[1]/input[1]
    Run keyword if    ${Is element visible?}==False    Return From Keyword
    ${actual records on page}=    Get Value    //*[@id="page_division_wrapping_table"]/tbody/tr/td[1]/input[1]
    ${actual rec in table}=    Get Element Count    //form/table[@id='table_rows']/tbody/tr
    Run keyword if    ${actual rec in table} < ${expected records on page}    Log to console    (!) Page: "${URL}${test URL}". Status: NA. Actual table records on page is less then expected records (${actual rec in table}/${expected records on page}) (!)
    Run keyword if    ${actual rec in table} < ${expected records on page}    Return From Keyword
    Should Be Equal As Strings    ${actual records on page}    ${expected records on page}
    Should Be Equal As Strings    ${actual rec in table}    ${expected records on page}
    Log to console    Table on page "${URL}${test URL}" lists "${actual rec in table}" records
    ###
    Check if sorting is visible.AD    id="table_rows"

Open OP and filter reviews.AD
    go to.AD    ${URL}/operation-panel.php
    log to console    ................OPERATIONAL PANEL............................
    Wait until page contains element    //input[@id='show']
    #Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button
    #Select multiselect box    id=ClientID    1293    4
    #scroll element into view    xpath=//option[contains(.,'${RobotTestClient}')]
    #Select from list by value    id=ClientID    1293
    #Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button
    #input text    //div[4]/div/div/input    ${RobotTestClient}
    #Click element    //*[@id="ui-multiselect-ClientID-option-7"]    #//*[@id="ui-multiselect-ClientID-option-7"]
    Select dropdown.AD    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    Validate value (text)    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button    AUTO 01 [RF CLIENT]
    #select '${RobotTestClient}'
    ${selected client}=    Get value    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button
    Log to console    selected client="${RobotTestClient}"
    select from list by value    //select[@id='StatusID']    5    #select status 'Finished, awaiting approval'
    Input text    //input[@id='start_date']    ${DD-MM-YY}    #select start date
    Input text    //input[@id='end_date']    ${DD-MM-YY}    #select finish date
    Log to console    start_date=${DD-MM-YY}
    Log to console    end_date=${DD-MM-YY}
    ##Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[2]/table/tbody/tr/td/span/button
    ##Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[2]/table/tbody/tr/td/span/button
    #select from list by label    id=ClientID    1    #locate element with visible text: 1
    Wait Until Element Is Visible    //*[@id="FiltersAreaLink"]/a
    Click element    //input[@id='show']
    Wait until page contains element    //*[@id="table_rows"]/tbody/tr
    ${index}    Set Variable    1
    ${elements}=    Get Element Count    //*[@id="table_rows"]/tbody/tr
    log to console    reviews on page ="${elements}"
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${elements}
        ${rowindex}=    Evaluate    ${rowindex}+1
        Set global variable    ${rowindex}
        ${actual review ID}=    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[2]
        Run Keyword If    "${actual review ID}" == "${ReviewID}"    click element    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[1]
        Run Keyword If    "${actual review ID}" == "${ReviewID}"    log to console    found row ${rowindex}
        Run Keyword If    "${actual review ID}" == "${ReviewID}"    Scroll Element Into View    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[1]
        Run Keyword If    "${actual review ID}" == "${ReviewID}"    exit for loop
        Log to console    № ${rowindex}. Found order "${actual review ID}" == "${ReviewID}"
    END
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    click element    ReturnCrits
    Wait until page contains    The following reviews were sent back to the shoppers: ${ReviewID}    10
    Log to console    The following reviews were sent back to the shoppers: ${ReviewID}

Edit CE profile.AD
    [Arguments]    ${quest-ry}    ${status}    ${exp format}    ${RF export file name}    ${Questions name format}    ${Base of export}    ${separator}
    Get ID from ad bar.AD    edit=    &page_var_
    Log to console    Let`s edit the export profile: "${RF custom profile name}"
    Set global variable    ${separator}
    Wait until page contains element    //input[@id='field_ProfileName']
    ################Select Client
    Click element    //*[@id="idClientsEditbox"]/table/tbody/tr/td/span/button
    Click element    //div[2]/div/ul/li[2]/a/span[2]
    Scroll Element Into View    //div[2]/ul/li[29]/label/span
    Click element    xpath=//li[contains(.,'${RobotTestClient}')]
    Click element    //*[@id="idClientsEditbox"]/table/tbody/tr/td/span/button
    Validate value (text)    //*[@id="idClientsEditbox"]/table/tbody/tr/td/span/button    ${RobotTestClient}
    ################Select Base of export
    Execute JavaScript    window.document.getElementById("idExportBaseEditbox").scrollIntoView(true)
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idExportBaseEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Base of export}')]
    Run keyword and ignore error    Click element    //*[@id="idExportBaseEditbox"]/table/tbody/tr/td/span/button
    Run keyword and ignore error    Click element    //body/div[9]/ul/li[1]/label/span
    Validate value (text)    //*[@id="idExportBaseEditbox"]/table/tbody/tr/td/span/button    ${Base of export}
    ################Select Format
    Scroll Element Into View    field_CSVFieldDelimiter
    Select dropdown.AD    //*[@id="idExportFormatEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${exp format}')]
    Validate value (text)    //*[@id="idExportFormatEditbox"]/table/tbody/tr/td/span/button    ${exp format}
    ################Select Status
    Click element    //*[@id="idStatusesEditbox"]/table/tbody/tr/td/span/button
    Run keyword and ignore error    Click element    //body/div[3]/div/ul/li[2]/a/span[2]
    Run keyword and ignore error    Click element    //body/div[5]/div/ul/li[2]/a/span[2]
    Click element    //*[@id="ui-multiselect-field_Statuses-option-${status}"]
    Click element    //*[@id="idStatusesEditbox"]/table/tbody/tr/td/span/button
    Validate value (text)    //*[@id="idStatusesEditbox"]/table/tbody/tr/td/span/button    Approved
    Input text    //input[@id='field_FileNameFormat']    ${RF export file name}
    Execute JavaScript    window.document.getElementById("field_ExportSubchapters").scrollIntoView(true)
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idQuestionsNameFormatEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Questions name format}')]
    Validate value (text)    //*[@id="idQuestionsNameFormatEditbox"]/table/tbody/tr/td/span/button    ${Questions name format}
    ####Select Export sections
    Execute JavaScript    window.document.getElementById("idExportChaptersEditbox").scrollIntoView(true)
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idExportChaptersEditbox"]/table/tbody/tr/td/span/button    //body/div[12]/ul/li[3]/label
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idExportChaptersEditbox"]/table/tbody/tr/td/span/button    //body/div[10]/ul/li[3]/label
    Validate value (text)    //*[@id="idExportChaptersEditbox"]/table/tbody/tr/td/span/button    ${Questions name format}
    #Select dropdown.AD    //*[@id="idExportSubchaptersEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Questions name format}')]
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idExportSubchaptersEditbox"]/table/tbody/tr/td/span/button    //body/div[13]/ul/li[1]/label
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idExportSubchaptersEditbox"]/table/tbody/tr/td/span/button    //body/div[10]/ul/li[1]/label
    Validate value (text)    //*[@id="idExportSubchaptersEditbox"]/table/tbody/tr/td/span/button    ${Questions name format}
    ####Select Additional information to export: Branches
    Set checkbox.AD    //input[@id='field_BranchID']    true
    Set checkbox.AD    //input[@id='field_ExportBranchAddress']    true
    Set checkbox.AD    //input[@id='field_ExportBranchProps']    true
    Set checkbox.AD    //input[@id='field_ExportBranchCustomFields']    true
    Set checkbox.AD    //input[@id='field_ExportClientCustomFields']    true
    ####Select \ Additional information to export: Shoppers
    Set checkbox.AD    //input[@id='field_CheckerID']    true
    Set checkbox.AD    //td[@id='idCheckerFullnameEditbox']/input[@id='field_CheckerFullname']    true
    Set checkbox.AD    //td[@id='idExportCheckerPropsEditbox']/input[@id='field_ExportCheckerProps']    None
    Set checkbox.AD    //td[@id='idExportCheckerCustomFieldsEditbox']/input[@id='field_ExportCheckerCustomFields']    true
    Set checkbox.AD    //input[@id='field_ExportCheckerUsername']    true
    Set checkbox.AD    //input[@id='field_ExportCheckerEmail']    true
    Set checkbox.AD    //input[@id='field_ExportCheckerBirth']    true
    Set checkbox.AD    //input[@id='field_ExportCheckerPhones']    true
    Set checkbox.AD    //input[@id='field_ExportCheckerAddress']    true
    ####Select \ Additional information to export: Other
    Set checkbox.AD    //input[@id='field_ClientAccountManager']    None
    Set checkbox.AD    //input[@id='field_CritStatus']    true
    Set checkbox.AD    //input[@id='field_ApprovalDate']    true
    Set checkbox.AD    //input[@id='field_ActialFillingTimes']    true
    Set checkbox.AD    //input[@id='field_ExportOrderDesc']    true
    Set checkbox.AD    //input[@id='field_ExpansesInfo']    None
    Set checkbox.AD    //input[@id='field_StagesInfo']    None
    Set checkbox.AD    //input[@id='field_ExportProjectName']    true
    Set checkbox.AD    //input[@id='field_ExportLabels']    true
    Set checkbox.AD    //input[@id='field_ExportHeaderLine']    true
    Set checkbox.AD    //input[@id='field_ExpansesInfo']    true
    Set checkbox.AD    //input[@id='field_ExportEachReviewOnce']    None
    Input text    //input[@id='field_ProfileName']    ${RF custom profile name}
    Validate value (value)    //input[@id='field_ProfileName']    ${RF custom profile name}
    Input text    //input[@id='field_DefaultTimeRange']    30
    Input text    //input[@id='field_SendExportToEmail']    robotmailbox01@gmail.com
    Input text    //input[@id='field_AutoExportTime']    ${HH:MM}
    Input text    //input[@id='field_ExpotSheet']    0
    Input text    //input[@id='field_MultiplechoiceSeperator']    ${separator}
    ################Select
    ####Select
    Input text    //input[@id='field_NonFilledSign']    NF
    Get ID from ad bar.AD    edit=    &page_var_
    #Click Save/Add/Delete/Cancel button.AD
    click element    //input[@id='save']
    Wait until page contains    Saved
    Go to2.AD    ${URL}/export-crits-3.php?page_var_divide_recordsPerPage=200&page_var_divide_curPage=1&page_var_filter_IsActive=1&page_var_filter_Clients=${client ID}
    Click link    default=${RF custom profile name}
    Wait until page contains element    //*[@id="idQuestionnairesEditbox"]/table/tbody/tr/td
    ################Select Q-ry
    Scroll Element Into View    //*[@id="idQuestionnairesEditbox"]/table/tbody/tr/td
    Click element    //*[@id="idQuestionnairesEditbox"]/table/tbody/tr/td
    Scroll Element Into View    xpath=//li[contains(.,'${quest-ry}')]
    #Wait Until Element Is Visible    //*[@id="ui-multiselect-field_Questionnaires-option-1447"]
    sleep    2
    Click element    xpath=//li[contains(.,'${quest-ry}')]
    Validate value (text)    //*[@id="idQuestionnairesEditbox"]/table    ${RobotQ-ry SHOPPERS}
    #Click Save/Add/Delete/Cancel button.AD
    click element    //input[@id='save']
    Wait until page contains    Saved

Search CE profile.AD
    ${i}=    set variable    1
    FOR    ${i}    IN RANGE    2
        Go to2.AD    ${URL}/export-crits-3.php?page_var_divide_recordsPerPage=500    #${URL}/export-crits-3.php?page_var_filter_IsActive=&page_var_filter_Clients=${client ID}
        Wait until page contains element    //*[@id="TableEdit_filtering"]/tbody/tr/td[2]/div/div/table/tbody/tr/td/span/button
        set global variable    ${RF custom profile name}
        ${is element visible?}    Run keyword and return status    Page should contain    ${RF custom profile name}
        Run keyword if    "${is element visible?}"=="False"    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
        Run keyword if    "${is element visible?}"=="True"    Click link    default=${RF custom profile name}
        Exit forloop if    "${is element visible?}"=="True"
    END

Perform custom export and download file
    [Arguments]    ${Update column settings}    ${Export all multiple choice answers}    ${start_date}    ${end_date}
    go to.AD    ${URL}/export-crits-3-reset-last-runtime.php?epID=${found ID}
    go to.AD    ${URL}/export-crits-3-do-export.php?epID=${found ID}
    Wait until page contains element    //input[@id='start_date']
    ${date minus 1 days}    Subtract Time From Date    ${Ttime}    1 days    result_format=%d.%m.%Y
    Set checkbox.AD    //input[@id='ucs']    ${Update column settings}
    Set checkbox.AD    //input[@id='eapa']    ${Export all multiple choice answers}
    log to console    start_date = "${date minus 1 days}"
    log to console    end_date = "${DD.MM.YY}"
    log to console    Open ${URL}/export-crits-3-do-export.php?epID=${found ID} and download file (date ranges: "${date minus 1 days}-${DD.MM.YY}")
    Input text    //input[@id='start_date']    ${start_date}
    Input text    //input[@id='end_date']    ${end_date}
    Click element    //form[@id='export_filters']/table/tbody/tr[4]/td/input[@id='do_export']
    ${Is export done?}    Run keyword and return status    Page should contain    Export done.
    Run keyword if    ${Is export done?}==False    return from keyword
    log to console    [Status] Export is done (+)
    sleep    1
    Wait until page contains element    //*[@id="export_results"]/div/p/a    100
    Click element    //*[@id="export_results"]/div/p/a
    ${download file link}    Get element attribute    //*[@id="export_results"]/div/p/a    href
    go to    ${download file link}
    log to console    ${download file link}
    log to console    ${global_downloadDir}
    ${files}=    List files in directory    ${global_downloadDir}
    log to console    List of downloaded files = "${files}"

Deactivate CF by ID.AD
    [Arguments]    ${Test Custom Field}    ${Show in registration?}    ${Mandatory?}    ${Allow shopper to edit?}    ${Active?}
    go to.AD    ${URL}${link}
    Log to console    go to ${URL}${link}
    Wait until page contains element    //button[@class='btn-input']
    ${СА name present?}=    Run Keyword And Return Status    Page should contain    ${Test Custom Field}
    Run Keyword If    '${СА name present?}'=='True'    Get ID    id="table_rows"    ${Test Custom Field}    1    2
    ###
    go to.AD    ${URL}/table-fields.php?edit=${found ID}
    Log to console    go to ${URL}/table-fields.php?edit=${found ID} and edit the custom field
    Wait until page contains element    //input[@id='field_FieldName']
    Set checkbox.AD    //input[@id='field_Mandatory']    None
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_ShowInRegistration']    None
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_IsActive']    None
    Input text    //input[@id='field_DisplayCondition']    1=2
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    log to console    "${Test Custom Field}" custom field (#${found ID}) has been deactivated
    Check errors on page [2]

Select unfinished review.SD
    go to.AD    ${URL}/c_unfinished-crits.php
    Page should contain    ${ReviewID}
    ${index}    set variable    1
    ${Rows} =    Get Element Count    //*[@id="table_rows"]/tbody/tr/td    #how many order rows do we have
    Log To Console    how many rows do we have? = ${Rows}
    FOR    ${rowindex}    IN RANGE    ${Rows}
        Log    ${rowindex}
        Set global variable    ${index}
        ${Act review ID}    get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[1]
        Run keyword if    "${Act review ID}"=="${ReviewID}"    click element    //*[@id="table_rows"]/tbody/tr[${index}]/td[2]/a
        Run keyword if    "${Act review ID}"=="${ReviewID}"    exit for loop
        ${index}    evaluate    ${index}+1
    END

Prepare download folder.AD
    log to console    Creating download folder...
    Set Global Variable    ${global_downloadDir}    ${CURDIR}\\Downloads
    ${chromeOptions}=    Evaluate    sys.modules['selenium.webdriver'].ChromeOptions()    sys, selenium.webdriver
    ${prefs} =    Create Dictionary    download.default_directory=${global_downloadDir}
    Call Method    ${chromeOptions}    add_experimental_option    prefs    ${prefs}
    Create Webdriver    Chrome    chrome_options=${chromeOptions}
    Maximize Browser Window
    log to console    Clearing the folder before downloadin ${global_downloadDir}
    Run Keyword And Ignore Error    Empty Directory    ${global_downloadDir}
    Run Keyword And Ignore Error    Empty Directory    C:\\Python27\\ROBOT_TESTS\\RobotTests2022\\ADtests\\Resources\\Downloads\\

Check REVIEW data.AD
    #######################################
    #####
    Should Be Equal As Strings    ${Dictionary}[Result]    46.401869158879
    Should Be Equal As Strings    ${Dictionary}[SetName]    ${RobotQ-ry SHOPPERS}
    Should Be Equal As Strings    ${Dictionary}[ClientName]    ${RobotTestClient}
    Should Be Equal As Strings    ${Dictionary}[ClientID]    ${client ID}
    Should Be Equal As Strings    ${Dictionary}[SetCode]    RFQRY-SHO-03
    Should Be Equal As Strings    ${Dictionary}[BranchName]    ${Short auto branch name 01}
    Should Be Equal As Strings    ${Dictionary}[BranchFullname]    ${Full auto branch name 01}
    Should Be Equal As Strings    ${Dictionary}[Q1: How old are you? [Type: Custom scale](Code)]    C:46-55(yellow)
    Should Be Equal As Strings    ${Dictionary}[Q1: How old are you? [Type: Custom scale](Answer)]    46-55(yellow)
    Should Be Equal As Strings    ${Dictionary}[Q1: How old are you? [Type: Custom scale](Grade)]    40.00
    Should Be Equal As Strings    ${Dictionary}[Q2: Pls select your favorite color [Type: Custom](Answer)]    green
    Should Be Equal As Strings    ${Dictionary}[Q3: Are you happy? [Type: Custom](Grade)]    50.00
    Should Be Equal As Strings    ${Dictionary}[Q3: Are you happy? [Type: Custom](Answer)]    YES
    Should Be Equal As Strings    ${Dictionary}[Bonus qn: Do you want a Bonus? [Multiple choice, average](Answer)]    Not now${separator}Yes
    Should Be Equal As Strings    ${Dictionary}[Bonus qn: Do you want a Bonus? [Multiple choice, average](Grade)]    10.00${separator}100.00
    Should Be Equal As Strings    ${Dictionary}[Q3: Are you happy? [Type: Custom](Text)]    2000
    Should Be Equal As Strings    ${Dictionary}[Q2: Pls select your favorite color [Type: Custom](Text)]    Additional info - ${DD.MM.YY} RF
    Should Be Equal As Strings    ${Dictionary}[Q2: Pls select your favorite color [Type: Custom](Grade)]    5.00

Edit Column Settings.AD
    [Arguments]    ${Column title}    ${expected status}    ${Column order}
    go to2.AD    ${URL}/export-crits-3-column-settings.php?page_var_filter_Export_Filter=&page_var_filter_ColumnName=&page_var_filter_ExportedName=&page_var_sorting_column=ColumnOrder&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1&epID=${found ID}&editingFields=yes&CurRowToEdit=Export
    log to console    Enable/disable column: "${Column title}". Please wait...
    Click link    default=${Column title}
    Wait until page contains element    //input[@id='field_ColumnOrder']
    Validate value (value)    //input[@id='field_ColumnName']    ${Column title}
    Set checkbox.AD    //input[@id='field_Export']    ${expected status}
    Input text    //input[@id='field_ColumnOrder']    ${Column order}
    sleep    1
    click element    save
    Wait until page contains    Saved
    log    ${Column title} is set to ${expected status}

Open file and check header: hidden columns.AD
    Log to console    ${global_downloadDir}\RF.CExport_checkhiddenheader.xls
    #Evaluate    os.rename("${global_downloadDir}\RFcustomexport.xls","${global_downloadDir}\NewExcelRobotTest.xls")
    #ExcelLibrary.Save Excel Current Directory    ${global_downloadDir}\NewExcelRobotTest.xls
    Open Excel    ${global_downloadDir}\RF.CExport_checkhiddenheader.xls
    ${Names}=    Get Sheet Names
    ${WorkSheetName}=    Get From List    ${Names}    0
    Log To Console    \nWorksheet name = "${WorkSheetName}"
    ${strColCount} =    Get Column Count    Worksheet
    Log    \nCols are => ${strColCount}
    ${strRowCount} =    Get Row Count    Worksheet
    Log    \nRows are=> ${strRowCount}
    # \ \ \ ${a1}= \ \ \ Read Excel Cell \ \ \ row_num=1 \ \ \ col_num=1
    # \ \ \ Should Be Equal As Strings \ \ \ ${a1} \ \ \ Hello
    ${CritID}=    Read Cell Data By Name    ${WorkSheetName}    A2
    ######
    Log To Console    \nOpening exported file...
    ${Names}=    Get Sheet Names
    ${WorkSheetName}=    Get From List    ${Names}    0
    Log To Console    \nWorksheet name = "${WorkSheetName}"
    ${strColCount} =    Get Column Count    ${WorkSheetName}
    Log To Console    \nCols total are => ${strColCount}
    ${strRowCount} =    Get Row Count    ${WorkSheetName}
    Log To Console    \nRows total are=> ${strRowCount}
    @{Count}    Get Column Values    ${WorkSheetName}    0    Include Empty Cells=False
    FOR    ${Var1}    IN    @{Count}
        Log    \n${Var1}
    END
    ${i}=    set variable    1
    ${strColCount}    Convert To Integer    ${strColCount}
    FOR    ${c}    IN RANGE    ${strColCount}
        ${a}=    Get Row Values    ${WorkSheetName}    0    Include Empty Cells=False
        ${Title}=    Read Cell Data By Name    ${WorkSheetName}    A1
        ${Value}=    Read Cell Data By Name    ${WorkSheetName}    A1
    #Append To List
        @{list}=    Create List    ${Title}    ${Value}
        Log    № ${i}
        Log    \n${list}
        Log    \n${a}
        ${i}    Evaluate    ${i}+1
    END
    Log to console    ----------------Header titles (All="${strColCount}")
    Set Test Variable    ${ROW_ID}    0
    @{File: Header values}=    Create List
    FOR    ${colIndex}    IN RANGE    ${strColCount}
        ${strTempColValue}    Read Cell Data By Coordinates    ${WorkSheetName}    ${colIndex}    ${ROW_ID}
        log to console    ${strTempColValue}
        append to list    ${File: Header values}    ${strTempColValue}
    END
    Log    1st list start: "${File: Header values}" list end.
    #List Should Not Contain Duplicates    ${File: Header values}
    ${Header default actual values}    Get Slice From List    ${File: Header values}    0    10
    Log    ${Header default actual values}
    ${Header default expected values}    Create List    CritID    \    \    SetName    SetCode    ClientName    ClientID    BranchName    BranchFullname    BranchCode
    List Should Contain Sub List    ${Header default actual values}    ${Header default expected values}
    # check q-n titles
    Log to console    Header values are correct, 2 of them are hidden - "Result" and "Finish Time"
    ${List of questions(Code)}    Create list    ${Q1 text}(Code)    ${Q2 text}(Code)    ${Q3 text}(Code)
    ${List of questions(Answer)}    Create list    ${Q1 text}(Answer)    ${Q2 text}(Answer)    ${Q3 text}(Answer)
    ${List of questions(Grade)}    Create list    ${Q1 text}(Grade)    ${Q2 text}(Grade)    ${Q3 text}(Grade)
    ${List of questions(Text)}    Create list    ${Q2 text}(Text)    ${Q3 text}(Text)
    List Should Contain Sub List    ${File: Header values}    ${List of questions(Code)}
    List Should Contain Sub List    ${File: Header values}    ${List of questions(Answer)}
    List Should Contain Sub List    ${File: Header values}    ${List of questions(Grade)}
    List Should Contain Sub List    ${File: Header values}    ${List of questions(Text)}
    Run Keyword And Ignore Error    Empty Directory    ${global_downloadDir}
    log to console    Disabled columns: "result" and "finish time" are not visible in exported file

Check file HEADER.AD
    [Arguments]    ${RF export file name}
    ${List of questions(Code)}    Create list    ${Q1 text}(Code)    ${Q2 text}(Code)    ${Q3 text}(Code)    ${Q4 text}(Code)
    ${List of questions(Answer)}    Create list    ${Q1 text}(Answer)    ${Q2 text}(Answer)    ${Q3 text}(Answer)    ${Q4 text}(Answer)
    ${List of questions(Grade)}    Create list    ${Q1 text}(Grade)    ${Q2 text}(Grade)    ${Q3 text}(Grade)    ${Q4 text}(Grade)
    ${List of questions(Text)}    Create list    ${Q2 text}(Text)    ${Q3 text}(Text)
    List Should Contain Sub List    ${Dictionary}    ${List of questions(Code)}
    List Should Contain Sub List    ${Dictionary}    ${List of questions(Answer)}
    List Should Contain Sub List    ${Dictionary}    ${List of questions(Grade)}
    List Should Contain Sub List    ${Dictionary}    ${List of questions(Text)}
    Dictionary Should Contain Key    ${Dictionary}    CritID    msg=CritID is not found
    Dictionary Should Contain Key    ${Dictionary}    FinishTime    msg=FinishTime is not found
    Dictionary Should Contain Key    ${Dictionary}    Result    msg=Result is not found
    Dictionary Should Contain Key    ${Dictionary}    SetName    msg=SetName is not found
    Dictionary Should Contain Key    ${Dictionary}    SetCode    msg=SetCode is not found
    Dictionary Should Contain Key    ${Dictionary}    ClientName    msg=ClientName is not found
    Dictionary Should Contain Key    ${Dictionary}    ClientID    msg=ClientID is not found
    Dictionary Should Contain Key    ${Dictionary}    BranchName    msg=BranchName is not found
    Dictionary Should Contain Key    ${Dictionary}    BranchFullname    msg=BranchFullname is not found
    Dictionary Should Contain Key    ${Dictionary}    BranchCode    msg=BranchCode is not found
    ###
    ${Dictionary1}    Convert To List    ${Dictionary}
    ${actual 1st column title}    Get Slice From List    ${Dictionary1}    0    1
    BuiltIn.Should Be Equal As Strings    ${actual 1st column title}    [u'CritID']
    List Should Not Contain Duplicates    ${Dictionary}
    Log to console    ${Dictionary1}
    List Should Not Contain Duplicates    ${Dictionary}

Select country/region/city.AD
    ${element present?}=    Run Keyword And Return Status    Page should contain element    //input[@id='field_CityName']
    Run Keyword If    '${element present?}'=='True'    Execute JavaScript    window.document.getElementById("field_CityName").scrollIntoView(true)
    Run Keyword If    '${element present?}'=='True'    Log to console    Selecting region and input city
    Run Keyword If    '${element present?}'=='True'    Input text    //input[@id='field_CityName']    Robot region 01
    Run Keyword If    '${element present?}'=='True'    Wait until page contains element    //body/ul/li
    sleep    1
    Run Keyword If    '${element present?}'=='True'    click element    //body/ul/li
    sleep    1
    ${actual value}    Get value    //input[@id='field_CityName']
    Run Keyword If    '${element present?}'=='True'    Should Contain    ${actual value}    Robot country 01
    Run Keyword If    '${element present?}'=='True'    Should Contain    ${actual value}    Robot region 01
    Run Keyword If    '${element present?}'=='True'    Should Contain    ${actual value}    Robot city 01
    Run Keyword If    '${element present?}'=='True'    log to console    Selected city = Robot region 01 -- Robot city 01
    #########
    #########
    Run Keyword If    '${element present?}'=='False'    Wait until page contains element    id=field_CityName_Cou_DIV
    Run Keyword If    '${element present?}'=='False'    Select dropdown.AD    id=field_CityName_Cou_DIV    xpath=//li[contains(.,'${Robot country 01}')]
    Run Keyword If    '${element present?}'=='False'    Validate value (text)    id=field_CityName_Cou_DIV    ${Robot country 01}
    Run Keyword If    '${element present?}'=='False'    log to console    Selected country = "${Robot country 01}"
    #
    Run Keyword If    '${element present?}'=='False'    Wait until page contains element    //*[@id="field_CityName_Reg_DIV"]/table/tbody/tr/td/div/table/tbody/tr/td/span/button    #id=field_CityName_Reg_DIV
    Run Keyword If    '${element present?}'=='False'    Select dropdown.AD    //*[@id="field_CityName_Reg_DIV"]/table/tbody/tr/td/div/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Robot region 01}')]
    Run Keyword If    '${element present?}'=='False'    Validate value (text)    //*[@id="field_CityName_Reg_DIV"]/table/tbody/tr/td/div/table/tbody/tr/td/span/button    ${Robot region 01}
    Run Keyword If    '${element present?}'=='False'    log to console    Selected region = "${Robot region 01}"
    #
    Run Keyword If    '${element present?}'=='False'    Wait until page contains element    //*[@id="field_CityName_DIV"]/table/tbody/tr/td/div/table/tbody/tr/td/span
    Run Keyword If    '${element present?}'=='False'    Select dropdown.AD    //*[@id="field_CityName_DIV"]/table/tbody/tr/td/div/table/tbody/tr/td/span    xpath=//li[contains(.,'${Robot city 01}')]
    Run Keyword If    '${element present?}'=='False'    Validate value (text)    id=field_CityName_DIV    ${Robot city 01}
    Run Keyword If    '${element present?}'=='False'    log to console    Selected city = "${Robot city 01}"

Enter CF[CLIENT+BRANCH] info.AD
    [Arguments]    ${Test Custom Field}    ${Test Custom Field value}
    ${a}=    Set variable    ${Test Custom Field}
    ${e}    Run Keyword and return status    Should contain    ${a}    [Branches]
    ${b}    Run Keyword and return status    Should contain    ${a}    [Clients]
    Run Keyword If    ${b}    go to    ${URL}/clients.php?edit=${client ID}
    Run Keyword If    ${e}    go to    ${URL}/branches.php?edit=${branch ID}&client=${client ID}
    Run Keyword If    ${b}    Log to console    ${URL}/clients.php?edit=${client ID}
    Run Keyword If    ${e}    Log to console    ${URL}/branches.php?edit=${branch ID}&client=${client ID}
    Wait until page contains    ${Test Custom Field}
    Log to console    Page does contains text: "${Test Custom Field}". Let`s add a value "${Test Custom Field value}" and save it
    Execute JavaScript    window.document.getElementById("field_${found ID}").scrollIntoView(true)
    Input text    id=field_${found ID}    ${Test Custom Field value}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    saved successfully
    Run Keyword If    ${b}    go to    ${URL}/clients.php?edit=${client ID}
    Run Keyword If    ${e}    go to    ${URL}/branches.php?edit=${branch ID}&client=${client ID}
    Wait until page contains    ${Test Custom Field}
    ${actual value}    Get value    id=field_${found ID}
    Should Be Equal    ${actual value}    ${Test Custom Field value}
    Log to console    Rechecked, saved properly "${Test Custom Field value}" to 'id=field_${found ID}" (+)

GMAIL: check export file email.AD
    Log to console    Expected email: "The export file you requested is ready and attached to this email"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=10
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    The export file you requested is ready and attached to this email
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        set global variable    ${payload}
        GMAIL: BRIEFING    # check email brief text
        #GMAIL: FOOTER (shoppers)    # check email footer text
        Should Contain    ${payload}    The export file you requested is ready and attached to this email
        Should Contain    ${payload}    RF-CustomExport(Baseofexport=Reviews).xlsx
        Should Contain    ${payload}    RF-CustomExport(Baseofexport=Reviews321321).xlsx
        Should Contain    ${payload}    RF-CustomExport(Baseofexport=Reviews321321).xlsx
    #${HTML}=    Open Link from Mail    ${LATEST}
    #Should Contain    ${HTML}    RF-CustomExport(Baseofexport=Reviews).xlsx
    END
    log to console    ${LATEST}
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    log    ${HTML}
    # Returns the content of a header field
    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    ${Parsed_Token}=    Split String    ${Paser_Body}
    ${Parsed_Token}=    Get From List    ${Parsed_Token}    11    #position in the list
    Mark All Emails As Read
    ${ALL_LINKS}    Get Links from Email    ${LATEST}
    Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

Validate value (value)
    [Arguments]    ${locator}    ${exp value}
    Wait until page contains element    ${locator}
    ${actual value}    Get value    ${locator}
    Should Be Equal    ${actual value}    ${exp value}
    Log to console    VALIDATION: "${exp value}" (+) (element= ${locator})

Edit shopper profile(CF).AD
    [Arguments]    ${Test Custom Field value}
    go to.AD    ${URL}/checkers.php?edit=${shopper found ID}
    Wait until page contains element    //*[@id="tabs"]/ul/li[1]/a
    Element Should Contain    //*[@id="tabs"]/ul/li[1]    Basic
    Element Should Contain    //*[@id="tabs"]/ul/li[2]    Address and location
    Element Should Contain    //*[@id="tabs"]/ul/li[3]    Contact details
    Element Should Contain    //*[@id="tabs"]/ul/li[4]    More info
    Element Should Contain    //*[@id="tabs"]/ul/li[5]    Settings
    Click element    //*[@id="tabs"]/ul/li[1]
    Input text    id=field_${found ID}    ${Test Custom Field value}
    Run keyword and ignore error    Validate value (value)    id=field_${found ID}    ${Test Custom Field value}
    Wait until page contains element    //*[@id="tabs"]/ul/li[2]
    Click element    //*[@id="tabs"]/ul/li[2]
    sleep    2
    Wait until page contains    Robot city 01    8
    sleep    1
    Wait until page contains element    //*[@id="tabs"]/ul/li[1]
    Click element    //*[@id="tabs"]/ul/li[1]
    sleep    2
    Wait until page contains    ShopperID
    sleep    2
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    go to.AD    ${URL}/checkers.php?edit=${shopper found ID}
    Click element    //*[@id="tabs"]/ul/li[1]
    ####VALIDATE VALUES - TAB 1
    Wait until page contains element    id=field_${found ID}
    Validate value (value)    id=field_${found ID}    ${Test Custom Field value}

Continue scorecard.SD
    [Arguments]    ${Add info1}    ${Add info2}    ${Free text}    ${Inter message}    ${Attach files?}    ${finish action}
    Log To Console    Continue the scorecard...
    go to.AD    ${URL}/c_v5-criticize.php?CritID=${ReviewID}
    Wait until page contains    ${Q1 TEXT}
    Run keyword if    "${Attach files?}"=="YES"    Attach files.SD
    Validate value (text)    //textarea[@id='obj${Q1 ID}-mi']    ***
    #    click element    //textarea[@id='obj${Q2 ID}-mi']
    #    sleep    2
    #    Input text    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    #    sleep    2
    #    Validate value (value)    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    #    //input[@id='obj${Q3 ID}-mi']    ${Add info2}
    Validate element attribute.AD    //input[@id='obj${Q1 ID}3']    checked    true
    Validate element attribute.AD    //input[@id='obj${Q2 ID}2']    checked    true
    Validate element attribute.AD    //input[@id='obj${Q3 ID}3']    checked    true
    Page should contain    ${Q2 TEXT}
    Page should contain    ${Q3 TEXT}
    Page should not contain    ${Q4 TEXT}
    Click element    //*[@id="continue"]
    Page should contain    ${Q4 TEXT}
    Validate element attribute.AD    //*[@id="obj${Q4 ID}"]/option[3]    selected    true
    Validate element attribute.AD    //*[@id="obj${Q4 ID}"]/option[4]    selected    true
    #END OF questions
    ${free text box visible?}    Run keyword and return status    page should contain element    //textarea[@id='CritFreeText']
    Run keyword if    "${free text box visible?}"=="True"    Input text    //textarea[@id='CritFreeText']    ${Free text}
    ${free text box visible?}    Run keyword and return status    page should contain element    //textarea[@id='message_to_operation']
    Run keyword if    "${free text box visible?}"=="True"    Input text    //textarea[@id='message_to_operation']    ${Inter message}
    Log to console    Entering the answers and click "Submit button"
    ${is element visible?}    Run keyword and return status    Page should contain    Are you sure you want to delete review data and restart?
    Run keyword if    ${is element visible?}==True    Click element    //*[@id="restartCrit"]
    Run keyword and ignore error    Click element    ${finish action}
    Run keyword and ignore error    Click element    //*[@id="continue"]
    reload page
    Wait until page contains    Thank you for filling this review.
    Check errors on page [-1]

Add client worker.AD
    [Arguments]    ${name}    ${active?}    ${code}
    go to.AD    ${URL}/client-workers.php?ClientID=${client ID}
    Wait until page contains element    //button[@class='btn-input']
    Log to console    Adding/editing worker
    Select dropdown.AD    //*[@id="TableEdit_filtering"]/tbody/tr/td[1]/div/div/table/tbody/tr/td/span/button    xpath=//li[contains(.,'(All)')]
    ${worker name visible?}=    Run Keyword and return status    Page should contain    ${name}
    Run Keyword If    ${worker name visible?}    click link    default=${name}
    Run Keyword If    "${worker name visible?}"=="False"    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr/td/table/tbody/tr/td/button
    Wait until page contains element    //input[@id='field_WorkerName']
    Input text    //input[@id='field_WorkerName']    ${name}
    Set checkbox.AD    //input[@id='field_IsActive']    ${active?}
    Input text    //input[@id='field_WorkerCode']    ${code}
    Input text    //input[@id='field_Task']    Task: to create and validate orders
    Input text    //textarea[@id='field_Comment']    Comment: internal worker
    ####
    Run Keyword and ignore error    Select dropdown.AD    //*[@id="idBranchNameEditbox"]/table/tbody/tr/td/span/button    //div[2]/ul/li[2]/label
    Run Keyword and ignore error    Select dropdown.AD    //*[@id="idBranchNameEditbox"]/table/tbody/tr/td/span/button    //body/div[4]/ul/li[1]/label/span
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully

Go to.AD
    [Arguments]    ${exp url}
    Go to    ${exp url}
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${a}    Run Keyword and return status    Should Be Equal    ${Pageurl}    ${exp url}
    Run Keyword If    "${a}"=="False"    Go to    ${exp url}
    Log to console    ${\n}--- Go to: "${exp url}"
    Check errors on page [-1]
    ${login again visible?}    Run keyword and return status    Page should contain    Login again?
    Run Keyword If    ${login again visible?}    Click link    default=Login again?
    Run Keyword If    ${login again visible?}    Wait Until Page Contains Element    ${id=login_email}
    Run Keyword If    ${login again visible?}    Input Text    ${id=login_email}    ${ManagerUsername}
    Run Keyword If    ${login again visible?}    Input Text    ${id=login_password}    ${ManagerPassword}
    Run Keyword If    ${login again visible?}    Click Element    ${id=submit_button}

Fill in the recover form.SD
    [Arguments]    ${Email*}    ${Birthday*}    ${Phone*}
    Go to.AD    ${URL}/c_login_reminder.php
    Log to console    Filling in next info: email = "${Email*}" | birthday = "${Birthday*}" | phone = "${Phone*}"
    Element text should be    //form/table/tbody/tr[1]/td[1]    Email*
    Element text should be    //form/table/tbody/tr[2]/td[1]    Birthdate*
    Element text should be    //form/table/tbody/tr[3]/td[1]    Phone*
    Element text should be    //a[@class='linkClass']    Login again
    Input text    email    ${Email*}
    Input text    phone    ${Phone*}
    Input text    birthdate    ${Birthday*}
    Click element    //*[@id="birthdate"]
    sleep    1
    Click element    //*[@id="ui-datepicker-div"]/div[2]/button[2]
    Run keyword and ignore error    Click element    //*[@id="ui-datepicker-div"]/div[2]/button[2]
    sleep    1
    Click element    id=submit

GMAIL: Alert with no attachments.SD
    [Arguments]    ${email subject}
    set global variable    ${email subject}
    Log to console    ${\n}--------------------------Open Mailbox ("${RFShopperEmail}")--------------------------
    ${timeout}    set variable    20
    Log to console    Expected email: "${email subject}"
    Open Mailbox    host=${host}    user=${RFShopperEmail}    password=${shopper email app password}
    Wait for expected email
    Log to console    Email is received. Index = "${LATEST}". Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]    #    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com    #    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    ${RFShopperEmail}" <${RFShopperEmail}>
    should contain    ${subject}    ${email subject}
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Log to console    content-type="${content-type}"
        Continue For Loop If    '${content-type}' == 'text/html'
        ${payload}=    Get Multipart Payload    decode=True
        log    ------------${payload}
    END
    log    ${LATEST}
    ###
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    log to console    Email content: ${HTML}
    Set global variable    ${HTML}
    Check default codes table    ${ReviewID}
    Should Contain    ${HTML}    This is an alert text
    Mark All Emails As Read
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Recover UserID.SD
    Log to console    Expected email: "Your UserID"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=100
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index = "${LATEST}". Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Your UserID
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        set global variable    ${payload}
        GMAIL: FOOTER (shoppers)    # check email footer text
        Should Contain    ${payload}    <body> Dear <b>Robot 02 [Full Name]</b><br/>
        Should Contain    ${payload}    This message is to let you know that we received your request to recover your user name.
        Should Contain    ${payload}    <br/> Your username is: <b>Robot 02 [Short Name]</b>
        Log to console    Email content is correct (+)
    #${HTML}=    Open Link from Mail    ${LATEST}    ${DD.MM.YY}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    log    ${LATEST}
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    log    ${HTML}
    # Returns the content of a header field
    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    ${Parsed_Token}=    Split String    ${Paser_Body}
    #${Parsed_Token}=    Get From List    ${Parsed_Token}    40    #position in the list
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: Recover password.SD
    Log to console    Expected email: "Recover password"
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-testing-system@checker-soft.com    timeout=100
    Log to console    Done. Waiting email from sender="info-testing@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index = "${LATEST}". Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    robotmailbox01@gmail.com" <robotmailbox01@gmail.com>
    should contain    ${subject}    Recover password
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        set global variable    ${payload}
        Should Contain    ${payload}    Hello ${UpdatedShopperName},
        Should Contain    ${payload}    Your password is:
        Log to console    ------------${payload}
        Log to console    Email content is correct (+)
    #${HTML}=    Open Link from Mail    ${LATEST}    ${DD.MM.YY}
    #Should Contain    ${HTML}    Your email address has been updated
    END
    log    ${LATEST}
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    log to console    ${HTML}
    # Returns the content of a header field
    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    ${Parsed_Token}=    Split String    ${Paser_Body}
    ${Parsed_Token}=    Get From List    ${Parsed_Token}    10    #position in the list
    Log to console    Recovered password = "${Parsed_Token}"
    ${Recovered Password}    Convert to string    ${Parsed_Token}
    Set global variable    ${Recovered Password}
    Mark All Emails As Read
    #${ALL_LINKS}    Get Links from Email    ${LATEST}
    #Log    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.
    Enter login and password.SD    ${RobotTestShopper 02}    ${Recovered Password}
    go to.AD    ${URL}/checkers.php?edit=y&auth_mode=2
    Wait until page contains element    //*[@id="HideRedundant"]
    Click element    //*[@id="HideRedundant"]
    Input text    //*[@id="field_Password"]    ${RobotTestShopper 02}
    Click element    //*[@id="save"]
    Wait until page contains    Please log in, in order to continue
    Enter login and password.SD    ${RobotTestShopper 02}    ${RobotTestShopper 02}
    Wait until page contains    Welcome, ${UpdatedShopperName}

GMAIL: Shopper alert.AD
    [Arguments]    ${Email subject}
    Log to console    Expected email: "Alert for specific email"
    Log to console    ${\n}--------------------------Open Mailbox ("${RFShopperEmail}")--------------------------
    Open Mailbox    host=${host}    user=${RFShopperEmail}    password=${shopper email app password}
    #Get Email Body    1
    ${LATEST} =    Wait For Email    sender=info-${URL1index}-system@checker-soft.com    timeout=20
    Log to console    Done. Waiting email from sender="info-${URL1index}-system@checker-soft.com"; timeout=10sec. Please wait....
    Log to console    Email is received. Index =${LATEST}. Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    ${RFShopperEmail}" <${RFShopperEmail}>
    should contain    ${subject}    ${Email subject}
    ###
    FOR    ${iii}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Continue For Loop If    "${content-type}"!="text/html"
        ${payload}=    Get Multipart Payload    decode=True
        set global variable    ${payload}
        GMAIL: FOOTER (users)    # check email footer text
        Log to console    ------------${payload}
        Should Contain    ${payload}    12312123 рекрапр
    END
    Should Contain    ${payload}    This is an alert text
    Should Contain    ${payload}    Name of the client - ${Dictionary}[Client name]
    Should Contain    ${payload}    Name of the questionnaire ${Dictionary}[Questionnaire name]
    Should Contain    ${payload}    ID: ${Finished review ID}
    Should Contain    ${payload}    EXTRA INFO
    Should Contain    ${payload}    City to which the branch is linked - Robot city 01
    Should Contain    ${payload}    ID of the questionnaire - ${Dictionary}[Questionnaire ID]
    Should Contain    ${payload}    Text code of the questionnaire - ${Dictionary}[Questionnaire Code]
    Should Contain    ${payload}    Purchase Invoice value -
    Should Contain    ${payload}    Description of the order with HTML tags -
    Should Contain    ${payload}    Name of the project -
    Should Contain    ${payload}    Email of the shopper -
    Should Contain    ${payload}    ID number of the project -
    Should Contain    ${payload}    Date of the order -
    Should Contain    ${payload}    Time of the order -
    Should Contain    ${payload}    Purchase description of the order -
    Should Contain    ${payload}    Phone of the shopper - +380670118780
    Should Contain    ${payload}    Order ID number -
    Should Contain    ${payload}    robotshopperemail@gmail.com,2-robotshopperemail@gmail.com
    Should Contain    ${payload}    ${Dictionary}[Mass order description]
    Should Contain    ${payload}    Status: Finished, awaiting approval
    Should Contain    ${payload}    Result:
    Should Contain    ${payload}    ${Final Result}
    Should Contain    ${payload}    Standard header text
    Should Contain    ${payload}    Click here to view the review.
    Should Contain    ${payload}    View entire message
    Should Contain    ${payload}    Standard header text
    Should Contain    ${payload}    Click here to view the review.
    Should Contain    ${payload}    Standard header 1text 34ger
    #    ${HTML}=    Open Link from Mail    ${LATEST}
    #    Should Contain    ${HTML}    Click here to view the review.
    log to console    ${LATEST}
    ###
    #    ${HTML} =    Get Email Body    ${LATEST}
    #    log to console    ${HTML}
    #    # Returns the content of a header field
    #    ${Paser_Body}=    Remove String Using Regexp    ${HTML}    (<.*?>)
    #    ${Parsed_Token}=    Split String    ${Paser_Body}
    #    #${Parsed_Token}=    Get From List    ${Parsed_Token}    40    #position in the list
    Mark All Emails As Read
    #    Delete All Emails
    #    ${ALL_LINKS}    Get Links from Email    ${LATEST}
    #    log to console    ${ALL_LINKS}
    #Go To    ${ALL_LINKS}[0]
    Close Mailbox
    Log to console    Alert: Email body+subject is corect (+)

Add QB q-n.AD
    [Arguments]    ${type}    ${display type}    ${code}    ${type of add info}    ${color}
    go to.AD    ${URL}/questions.php?subchapter=${sub section ID}
    Wait until page contains element    //button[@class='btn-input']
    FOR    ${i}    IN RANGE    2
        ${element visible?}    Run keyword and return status    Page should contain    RFQn: [${type} | ${display type}]
        Run keyword if    ${element visible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr/td/table/tbody/tr/td/button
        Run keyword if    ${element visible?}==True    Get ID    id="table_rows"    RFQn: [${type} | ${display type}]    1    2
        Run keyword if    ${element visible?}==True    Click link    default=${found ID}
        Run keyword if    ${element visible?}==True    Exitforloop
    END
    ${qn ID}    set variable    ${found ID}
    Set global variable    ${qn ID}
    Add/edit qn.AD    ${type}    ${display type}    ${code}    ${type of add info}    ${color}
    ${ab}=    Set variable    ${type}
    ${need answers?}    Run Keyword And Return Status    Should contain    ${ab}    Text-only
    #Types with no answer: quOrdered and Text-only
    Run keyword if    ${need answers?}==True    Exitforloop
    Add/edit qn answer.AD    Answer 1 (green)    AN1    5    07ca5a    (Not selected)
    Add/edit qn answer.AD    Answer 2 (red)    AN2    0    d21616    (Not selected)
    Add/edit qn answer.AD    Answer 3 (black)    AN3    3    000000    (Not selected)
    Log to console    (RFQn: ${type}) Qn has been created (+)

Add QD section.AD
    [Arguments]    ${section name}
    go to.AD    ${URL}/chapters.php?page_var_divide_recordsPerPage=10000
    FOR    ${i}    IN RANGE    2
        ${element visible?}    Run keyword and return status    Page should contain    ${section name}
        Run keyword if    ${element visible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
        Run keyword if    ${element visible?}==True    Get ID    id="table_rows"    ${section name}    1    2
        Run keyword if    ${element visible?}==True    go to.AD    ${URL}/chapters.php?&edit=${found ID}
        Run keyword if    ${element visible?}==True    exit for loop
    #    Input text    //input[@id='field_ChapterName']    ${section name}
    #    Input text    //input[@id='field_ChapterDescription']    ${section name} description
    #    Input text    //input[@id='field_TargetGrade']    50
    #    Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    #    Select color.AD    //*[@id="idChapterColorEditbox"]/table/tbody/tr/td/div/div[1]    14a128
    #    Input text    _ChaptersAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    ${section name} (in Robot language [RTL])
    #    Input text    _ChaptersAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    ${section name} (in Robot language [LTR])
    #    Validate value (value)    _ChaptersAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    ${section name} (in Robot language [RTL])
    #    Validate value (value)    _ChaptersAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    ${section name} (in Robot language [LTR])
    #    Click Save/Add/Delete/Cancel button.AD
    #    Wait until page contains    successfully
    #    Wait until page contains    ${section name}
    END
    Input text    //input[@id='field_ChapterName']    ${section name}
    Input text    //input[@id='field_ChapterDescription']    ${section name} description
    Input text    //input[@id='field_TargetGrade']    50
    Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    Select color.AD    //*[@id="idChapterColorEditbox"]/table/tbody/tr/td/div/div[1]    14a128
    Input text    _ChaptersAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    ${section name} (in Robot language [RTL])
    Input text    _ChaptersAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    ${section name} (in Robot language [LTR])
    Validate value (value)    _ChaptersAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    ${section name} (in Robot language [RTL])
    Validate value (value)    _ChaptersAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    ${section name} (in Robot language [LTR])
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    Wait until page contains    ${section name}
    ${section ID}    set variable    ${found ID}
    set global variable    ${section ID}
    log to console    Created "${section name}" ID=${section ID}

Add QB subsection.AD
    [Arguments]    ${Sub section name}    ${color}    ${grade}    ${Question type to create}
    go to.AD    ${URL}/subchapters.php?chapter=${section ID}
    Wait until page contains element    //button[@class='btn-input']
    FOR    ${i}    IN RANGE    2
        ${element visible?}    Run keyword and return status    Page should contain    ${Sub section name}
        Run keyword if    ${element visible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr/td/table/tbody/tr/td/button
        Run keyword if    ${element visible?}==True    Get ID    id="table_rows"    ${Sub section name}    1    2
        Run keyword if    ${element visible?}==True    Exitforloop
        Edit subsection.AD    ${Sub section name}    ${color}    ${grade}
    END
    ${sub section ID}    set variable    ${found ID}
    set global variable    ${sub section ID}
    Log to console    RF sub section ID=${sub section ID}
    go to.AD    ${URL}/subchapters.php?edit=${sub section ID}&chapter=${section ID}
    Edit subsection.AD    ${Sub section name}    ${color}    ${grade}
    ${code}=    Generate Random String    4    [NUMBERS]
    Add QB q-n.AD    ${Question type to create}    Radio buttons    qc:${code}    Free text    14a128
    ${code}=    Generate Random String    4    [NUMBERS]
    Add QB q-n.AD    ${Question type to create}    Slider    qc:${code}    Free text    e4e720
    ${code}=    Generate Random String    4    [NUMBERS]
    Add QB q-n.AD    ${Question type to create}    Drop-down    qc:${code}    Free text    20e7df
    ${code}=    Generate Random String    4    [NUMBERS]
    Add QB q-n.AD    ${Question type to create}    Basic selection (choose with CTRL)    qc:${code}    Free text    a620e7
    ${code}=    Generate Random String    4    [NUMBERS]
    Add QB q-n.AD    ${Question type to create}    Check boxes    qc:${code}    Free text    20e76d
    ${code}=    Generate Random String    4    [NUMBERS]
    Add QB q-n.AD    ${Question type to create}    Ranking check boxes    qc:${code}    Free text    435a4c

Delete QB q-n.AD
    go to.AD    ${URL}/questions.php?subchapter=${RF sub section ID}
    Wait until page contains element    //button[@class='btn-input']
    #
    FOR    ${i}    IN RANGE    100
        ${is element visible?}    Run keyword and return status    Page should contain element    //a[@class='firstcolLink']
        Run Keyword If    ${is element visible?}    Click element    //a[@class='firstcolLink']
        Run Keyword If    '${is element visible?}'=='False'    exitforloop
        Wait until page contains element    //input[@id='delete']
        Click element    //input[@id='delete']
        Wait until page contains element    //input[@id='sure_delete']
        Click element    //input[@id='sure_delete']
        log to console    deleted №${i}
    END

Edit subsection.AD
    [Arguments]    ${Sub section name}    ${color}    ${grade}
    Wait until page contains element    //input[@id='field_SubchapterName']
    Input text    //input[@id='field_SubchapterName']    ${Sub section name}
    Input text    //input[@id='field_SubchapterDescription']    Sub section description (${Sub section name})
    Input text    //input[@id='field_TargetGrade']    ${grade}
    Select color.AD    //*[@id="idSubchapterColorEditbox"]/table/tbody/tr/td/div    ${color}
    Input text    _SubchaptersAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    ${Sub section name} (in Robot language [RTL])
    Input text    _SubchaptersAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    ${Sub section name} (in Robot language [LTR])
    Validate value (value)    _SubchaptersAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    ${Sub section name} (in Robot language [RTL])
    Validate value (value)    _SubchaptersAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    ${Sub section name} (in Robot language [LTR])
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully

Add/edit qn.AD
    [Arguments]    ${type}    ${display type}    ${code}    ${type of add info}    ${color}
    Wait until page contains element    //input[@id='field_Question']
    Input text    //input[@id='field_Question']    RFQn: [${type} | ${display type}]
    Input text    //input[@id='field_QuestionDescription']    RF Qn description
    Select dropdown.AD    //*[@id="idQuestionTypeLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${type}')]
    sleep    1
    ${ab}=    Set variable    ${type}
    ${is element visible?}    Run Keyword And Return Status    Should contain    ${ab}    Custom scale
    Run Keyword If    ${is element visible?}    Select dropdown.AD    //*[@id="idScaleNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'AGE scale 01 [RF]')]
    Run Keyword If    '${type}' == 'Multiple choice, average' or '${type}' == 'Multiple choice, accumulating' or '${type}' == 'Multiple choice, according to highest score' or '${type}' == 'Multiple choice, according to lowest score'    Input text    //input[@id='field_MaxAnswersForMultiple']    2
    #
    Input text    //input[@id='field_qQuestionCode']    ${code}
    Set checkbox.AD    //input[@id='field_ExcludeFromGrade']    None
    Set checkbox.AD    //input[@id='field_DoNotDisplayInReport']    None
    Set checkbox.AD    //input[@id='field_DoNotDisplay']    None
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_ShowIrrelevant']    true
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_ShowCritical']    None
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_Mandatory']    None
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_qItalics']    true
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_qItalics']    true
    Run keyword and ignore error    Set checkbox.AD    //input[@id='field_qUnderline']    true
    Select dropdown.AD    //*[@id="idDisplayTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${display type}')]
    Select color.AD    //*[@id="idqColorEditbox"]/table/tbody/tr/td/div/div[1]/div    ${color}
    Select dropdown.AD    //*[@id="tr_MiType"]/td[2]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${type of add info}')]
    Run Keyword If    '${type of add info}'=='Free text'    Qbank. Set add info.AD    RFQn: [${type} | ${display type}]
    #
    Page should contain    Note: The next settings will only affect questions added to the questionnaires from now on. They have no effect on questions which were already added to questionnaires.
    Page should contain    Default settings for questionnaires
    Page should contain    Values relevant for 'free text' information type
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully

Add/edit qn answer.AD
    [Arguments]    ${name}    ${code}    ${value}    ${color}    ${icon}
    go to.AD    ${URL}/answers.php?question=${qn ID}
    FOR    ${i}    IN RANGE    2
        ${element visible?}    Run keyword and return status    Page should contain    ${name}
        Run keyword if    ${element visible?}==False    go to    ${URL}/answers.php?addnew=yup&question=${qn ID}
        Run keyword if    ${element visible?}==True    Get ID    id="table_rows"    ${name}    1    2
        Run keyword if    ${element visible?}==True    Exitforloop
        Edit qn answer.AD    ${name}    ${code}    ${value}    ${color}    ${icon}
    END
    ${answer ID}    set variable    ${found ID}
    log to console    answer ID=${answer ID}
    Set global variable    ${answer ID}
    go to.AD    ${URL}/answers.php?edit=${answer ID}&question=${qn ID}
    Edit qn answer.AD    ${name}    ${code}    ${value}    ${color}    ${icon}

Edit qn answer.AD
    [Arguments]    ${name}    ${code}    ${value}    ${color}    ${icon}
    Wait until page contains element    //input[@id='field_Answer']
    Input text    //input[@id='field_Answer']    ${name}
    Input text    //input[@id='field_AnswerValue']    ${value}
    Input text    //input[@id='field_AnswerCode']    ${code}
    Select color.AD    //*[@id="idaColorEditbox"]/table/tbody/tr/td/div    ${color}
    Select dropdown.AD    //*[@id="idIconLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${icon}')]
    Set checkbox.AD    //input[@id='field_aBold']    true
    Set checkbox.AD    //input[@id='field_aItalics']    true
    Set checkbox.AD    //input[@id='field_aUnderline']    true
    Input text    _CritAnswersAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    ${name} (in Robot language [RTL])
    Input text    _CritAnswersAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    ${name} (in Robot language [LTR])
    Validate value (value)    _CritAnswersAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    ${name} (in Robot language [RTL])
    Validate value (value)    _CritAnswersAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    ${name} (in Robot language [LTR])
    Click Save/Add/Delete/Cancel button.AD
    #Wait until page contains    successfully
    Log to console    Answer "${name}" created/updated properly

Go to2.AD
    [Arguments]    ${exp url}
    Go to    ${exp url}
    ${Pageurl} =    Execute Javascript    return window.location.href
    ${a}    Run Keyword and return status    Should be equal    ${Pageurl}    ${exp url}
    Run Keyword If    "${a}"=="False"    Go to    ${exp url}
    Log to console    ${\n}- Go to "${exp url}"
    Check errors on page [2]
    ${login again visible?}    Run keyword and return status    Page should contain    Login again?
    Run Keyword If    ${login again visible?}    Click link    default=Login again?
    Run Keyword If    ${login again visible?}    Wait Until Page Contains Element    ${id=login_email}
    Run Keyword If    ${login again visible?}    Input Text    ${id=login_email}    ${ManagerUsername}
    Run Keyword If    ${login again visible?}    Input Text    ${id=login_password}    ${ManagerPassword}
    Run Keyword If    ${login again visible?}    Click Element    ${id=submit_button}

Set Branch phone ID
    [Arguments]    ${id}
    ${Branch phone ID}=    Set variable    ${id}
    Set global variable    ${Branch phone ID}
    ###

Set Order end time ID
    [Arguments]    ${id}
    ${Order end time ID}    Set variable    ${id}
    Set global variable    ${Order end time ID}
    ###

Set Type of client ID
    [Arguments]    ${id}
    ${Type of client ID}    Set variable    ${id}
    Set global variable    ${Type of client ID}
    ###

Set Zip code ID
    [Arguments]    ${id}
    ${Zip code ID}    Set variable    ${id}
    Set global variable    ${Zip code ID}
    ###

Set Purchase ID
    [Arguments]    ${id}
    ${Purchase ID}    Set variable    ${id}
    Set global variable    ${Purchase ID}
    ###

Set Short branch name ID
    [Arguments]    ${id}
    ${Short branch name ID}    Set variable    ${id}
    Set global variable    ${Short branch name ID}
    ###

Set Branch opening hours ID
    [Arguments]    ${id}
    ${Branch opening hours ID}    Set variable    ${id}
    Set global variable    ${Branch opening hours ID}
    ###

Set Branch address fields ID
    [Arguments]    ${id}
    ${Branch address fields ID}    Set variable    ${id}
    Set global variable    ${Branch address fields ID}
    ###

Search/create Sample.AD
    ${i}=    set variable    1
    FOR    ${i}    IN RANGE    2
        go to.AD    ${URL}/samples.php?page_var_divide_recordsPerPage=600    #${URL}/export-crits-3.php?page_var_filter_IsActive=&page_var_filter_Clients=${client ID}
        Wait until page contains element    //input[@id='update']
        ${is element visible?}    Run keyword and return status    Page should contain    ${RF sample name}
        Run keyword if    "${is element visible?}"=="False"    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
        Run keyword if    "${is element visible?}"=="True"    Click link    default=${RF sample name}
        Exit forloop if    "${is element visible?}"=="True"
    END
    Execute JavaScript    window.document.getElementById("field_SampleName").scrollIntoView(true)
    input text    //input[@id='field_SampleName']    ${RF sample name}
    Set checkbox.AD    //input[@id='field_IsActive']    true
    input text    //input[@id='field_CleanupOldData']    30
    #Select dropdown.AD    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    Validate value (text)    //*[@id="idClientNameEditbox"]/table/tbody/tr/td/span/button    ${RobotTestClient}
    Get ID from ad bar.AD    &edit=    &page_var_sorting_column
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully
    Log to console    "${RF sample name}" has been added/updated
    Log to console    Sample ID = "${ReviewID}"

Add record(ID).AD
    [Arguments]    ${name}    ${page URL}    ${date}
    ${i}=    set variable    0
    FOR    ${i}    IN RANGE    2
        go to.AD    ${URL}${page URL}
        Wait until page contains element    //button[@class='btn-input']
        ${element visible?}    Run keyword and return status    Page should contain    ${name}
        Run keyword if    ${element visible?}==False    click element    //button[@class='btn-input']
        Run keyword if    ${element visible?}==True    Get ID    id="table_rows"    ${name}    1    2
        Run keyword if    ${element visible?}==True    click link    default=${found ID}
        Run keyword if    ${element visible?}==True    Exitforloop
    END
    Execute JavaScript    window.document.getElementById("field_Date").scrollIntoView(true)
    input text    //input[@id='field_Date']    ${date}
    input text    //input[@id='field_Name']    ${name}
    Get ID from ad bar.AD    &edit=    &page_var_sorting_column
    Validate value (value)    //input[@id='field_Date']    ${date}
    Validate value (value)    //input[@id='field_Name']    ${name}
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully

Search/add Survey.AD
    [Arguments]    ${RF survey name}    ${RF q-ry name}
    [Tags]    (FIX?)
    ${i}=    set variable    1
    FOR    ${i}    IN RANGE    2
        go to.AD    ${URL}/surveys.php?SurveyName&page_var_sorting_order=up&page_var_filter_IsActive=1&page_var_filter_ClientLink=${client ID}&page_var_filter_SetName
        Wait until page contains    Survey
        ${is element visible?}    Run keyword and return status    Page should contain    ${RF survey name}
        Run keyword if    "${is element visible?}"=="False"    Click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
        Run keyword if    "${is element visible?}"=="True"    Click link    default=${RF survey name}
        Run keyword if    "${is element visible?}"=="True"    Log to console    ${RF survey name} is found! Editing a survey settings. Please wait...
        Exit forloop if    "${is element visible?}"=="True"
    END
    Wait until page contains    Survey
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idClientLinkEditbox"]/table/tbody/tr/td/span/button/span[2]    xpath=//li[contains(.,'${RobotTestClient}')]
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idBranchLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'RF Branch 02 [Short name]')]
    Select dropdown.AD    //*[@id="idSetNameEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RF q-ry name}')]
    Run keyword and ignore error    Select dropdown.AD    //*[@id="idSampleNameEditbox"]/table/tbody/tr/td/div/table/tbody/tr/td/span/button    xpath=//li[contains(.,'RF SAMPLE 01')]
    input text    //input[@id='field_ExpectedAvgSurveysPerHour']    100
    input text    //input[@id='field_ExpectedAvgSurveysDuration']    100
    input text    //input[@id='field_TargetQuota']    1000
    input text    //input[@id='field_TargetHours']    100
    Set checkbox.AD    //input[@id='field_RunOnSunday']    true
    Set checkbox.AD    //input[@id='field_RunOnMonday']    true
    Set checkbox.AD    //input[@id='field_RunOnTuesday']    true
    Set checkbox.AD    //input[@id='field_RunOnWednesday']    true
    Set checkbox.AD    //input[@id='field_RunOnThursday']    true
    Set checkbox.AD    //input[@id='field_RunOnFriday']    true
    Set checkbox.AD    //input[@id='field_RunOnSaturday']    true
    Set checkbox.AD    //input[@id='field_SendAlsoSMS']    None
    Select dropdown.AD    //*[@id="idAllowDialerEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'manual')]
    input text    //input[@id='field_SMSSurveyValidityDuration']    1
    input text    //input[@id='field_SurveyName']    ${RF survey name}
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_117_label"]    ${Note for surveyors} for ${RF survey name}${RF REVN DT}
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_137_label"]    ${Note for surveyors} for ${RF survey name}${RF REVN DT}
    Run Keyword If    ${preprod?}    Enter editor text.AD    //*[@id="cke_61_label"]    ${Note for surveyors} for ${RF survey name}${RF REVN DT}
    Run Keyword If    ${demo?}    Enter editor text.AD    //*[@id="cke_72_label"]    ${Note for surveyors} for ${RF survey name}${RF REVN DT}
    Page should contain    ${Note for surveyors}
    Get ID from ad bar.AD    &edit=    &page_var_sorting_column
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    successfully
    Log to console    "${RF survey name}" has been added/updated
    go to.AD    ${URL}/surveys.php?SurveyName&page_var_sorting_order=up&page_var_filter_IsActive=1&page_var_filter_ClientLink=${client ID}&page_var_filter_SetName
    Click link    default=${RF survey name}
    Wait Until Page Contains    ${RF survey name}
    Wait Until Page Contains    Edit Survey
    Validate value (value)    //input[@id='field_SurveyName']    ${RF survey name}
    Validate value (text)    //*[@id="idClientLinkEditbox"]/table/tbody/tr/td/span/button/span[2]    ${RobotTestClient}
    #    Validate value (text)    //*[@id="idBranchLinkEditbox"]/table/tbody/tr/td/span/button    RF Branch 02 [Short name]
    Validate value (text)    //*[@id="idSetNameEditbox"]/table/tbody/tr/td/span/button    ${RF q-ry name}
    Execute JavaScript    window.document.getElementById("idSampleNameTedit").scrollIntoView(true)
    #Page should contain    RF SAMPLE 01
    #    Page should contain    Sample cannot be changed because the survey has started
    Validate value (value)    //input[@id='field_ExpectedAvgSurveysPerHour']    100.000000
    Validate value (value)    //input[@id='field_ExpectedAvgSurveysDuration']    100
    Validate value (value)    //input[@id='field_TargetQuota']    1000
    Validate value (value)    //input[@id='field_TargetHours']    100
    Validate value (value)    //input[@id='field_SMSSurveyValidityDuration']    1
    Get ID from ad bar.AD    &edit=    &page_var_sorting_column

Validate style.AD
    [Arguments]    ${element}    ${expected color}
    wait until page contains element    ${element}
    ${actual color}    Get element attribute    ${element}    style
    Should be equal    ${actual color}    ${expected color}
    Log to console    Style validation (element="${element}", style: "${expected color}") (+)

Set visit report colors.AD
    go to.AD    ${URL}/client-report-settings.php?ClientID=${found ID}
    Log to console    -------
    Set checkbox.AD    //input[@id='hidecolorcode_RptGTitleColor']    None
    Set checkbox.AD    //input[@id='hidecolorcode_RptGGradient1']    None
    Set checkbox.AD    //input[@id='hidecolorcode_RptGGradient2']    None
    Set checkbox.AD    //input[@id='hidecolorcode_RptGSubTitleColor']    None
    Set checkbox.AD    //input[@id='hidecolorcode_RptGTextColor']    None
    ##
    Select color.AD    //*[@id="idRptGTitleColorEditbox"]/table[1]/tbody/tr/td/div    1243bd
    Select color.AD    //*[@id="idRptGSubTitleColorEditbox"]/table[1]/tbody/tr/td/div/div[1]/div    1b1010
    Select color.AD    //*[@id="idRptGGradient1Editbox"]/table[1]/tbody/tr/td/div/div[1]/div    7ae268
    Select color.AD    //*[@id="idRptGGradient2Editbox"]/table[1]/tbody/tr/td/div/div[1]/div    bec42a
    Select color.AD    //*[@id="idRptGTextColorEditbox"]/table[1]/tbody/tr/td/div/div[1]/div    000000
    click element    //input[@id='save']
    ##
    # \ \ \ go to.AD \ \ \ ${URL}/client-report-settings.php?ClientID=${found ID}
    # \ \ \ Validate style.AD \ \ \ //*[@id="idRptGTitleColorEditbox"]/table[1]/tbody/tr/td/div \ \ \ background-color: rgb(18, 67, 189);
    # \ \ \ Validate style.AD \ \ \ //*[@id="idRptGSubTitleColorEditbox"]/table[1]/tbody/tr/td/div/div[1]/div \ \ \ background-color: rgb(27, 16, 16);
    # \ \ \ Validate style.AD \ \ \ //*[@id="idRptGGradient1Editbox"]/table[1]/tbody/tr/td/div/div[1]/div \ \ \ background-color: rgb(122, 226, 104);
    # \ \ \ Validate style.AD \ \ \ //*[@id="idRptGGradient2Editbox"]/table[1]/tbody/tr/td/div/div[1]/div \ \ \ background-color: rgb(190, 196, 42);
    # \ \ \ Validate style.AD \ \ \ //*[@id="idRptGTextColorEditbox"]/table[1]/tbody/tr/td/div/div[1]/div \ \ \ background-color: rgb(0, 0, 0);

Excel: process file.AD
    [Arguments]    ${File to process}    ${WorkSheetName}    ${put here row id which you want to process}
    ${files}=    List files in directory    ${global_downloadDir}
    log to console    List of downloaded files = "${files}"
    Wait Until Created    ${File to process}    10
    File Should Exist    ${File to process}
    OpenPyxlLibrary.Open Excel    ${File to process}    # data from this file will be processed
    Log to console    Opening file: "${File to process}"
    ${Names}=    OpenPyxlLibrary.Get Sheet Names
    ${WorkSheetName}=    Get From List    ${Names}    0
    Log To Console    \nWorksheet name = "${WorkSheetName}"
    ${strColCount} =    OpenPyxlLibrary.Get Column Count    ${WorkSheetName}
    Log To Console    \nCols are => ${strColCount}
    ${strRowCount} =    OpenPyxlLibrary.Get Row Count    ${WorkSheetName}
    Log To Console    \nRows are=> ${strRowCount}
    Set Test Variable    ${ROW_ID1}    1
    Set Test Variable    ${ROW_ID0}    ${put here row id which you want to process}
    FOR    ${colIndex}    IN RANGE    ${strColCount}
        ${strTempTitleValue}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName}    1    ${ROW_ID1}
        ${strTempColValue}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName}    ${ROW_ID0}    ${ROW_ID1}
        ${ROW_ID1}    Evaluate    ${ROW_ID1}+1
        log    ${colIndex}
        Set To Dictionary    ${Dictionary}    ${strTempTitleValue}    ${strTempColValue}
    END
    Log to console    FILE DATA: "${Dictionary}"

Compare REVIEW (full report and code pages) and CE file.AD
    go to.AD    ${URL}/show-entire-crit-by-qcode.php?CritID=${Dictionary}[CritID]&_pv_sorting_column=QuestionOrder&_pv_sorting_order=up
    # Check default page titles
    Element text should be    //span[@class='critInfoItemTitle'][1]    Questionnaire name
    Element text should be    //span[@class='critInfoItemTitle'][2]    Finish time
    Element text should be    //span[@class='critInfoItemTitle'][3]    Result
    Element text should be    //span[@class='critInfoItemTitle'][4]    Client name
    Element text should be    //span[@class='critInfoItemTitle'][5]    Shopper name
    Element text should be    //span[@class='critInfoItemTitle'][6]    Short branch name
    Element text should be    //span[@class='critInfoItemTitle'][7]    Status
    Element text should be    //span[@class='critInfoItemTitle'][8]    Review number
    Element text should be    //span[@class='critInfoItemTitle'][9]    Mass order description
    # Check report values
    Element text should be    //span[@class='CritInfoItem'][8]    ${Dictionary}[CritID]
    Element text should be    //span[@class='CritInfoItem'][1]    ${Dictionary}[SetName]
    Element text should be    //span[@class='CritInfoItem'][4]    ${Dictionary}[ClientName]
    Element text should be    //span[@class='CritInfoItem'][7]    ${Dictionary}[CritStatus]
    ## Check finish time
    ${Value}    Convert Date    ${Dictionary}[FinishTime]    date_format=%Y-%m-%d %H:%M:%S
    ${ValueFinal}    Convert Date    ${Value}    result_format=%d.%m.%Y %H:%M
    Log to console    ${ValueFinal}
    ####
    Element Should Contain    //span[@class='CritInfoItem'][2]    ${ValueFinal}
    ${Var 1}    Get text    //span[@class='CritInfoItem'][9]
    Should contain    ${\n}${Dictionary}[Description]    ${Var 1}
    Element text should be    //span[@class='CritInfoItem'][5]    ${Dictionary}[Shopper Fullname]
    Element text should be    //span[@class='CritInfoItem'][6]    ${Dictionary}[BranchName]
    Element text should be    //span[@class='CritInfoItem'][7]    ${Dictionary}[CritStatus]
    ${Var 1}    Get text    //*[@id="FiltersArea"]/span[6]/a
    #${Var 2}    Convert To Number    ${Var 1}    -2
    ${var}    set variable    ${Dictionary}[Result]
    ${var}    Evaluate    "%.2f" % ${var}
    Should contain    ${var}    ${Var 1}
    Should be equal    ${ClientID}    ${Dictionary}[ClientID]
    #    Validate value (text)    //div[@id='FiltersArea']/span[@class='CritInfoItem'][6]    ${Dictionary}[BranchName]
    #    Validate value (text)    //div[@id='FiltersArea']/span[@class='CritInfoItem'][5]    ${Dictionary}[Shopper Fullname]
    ###
    Validate value (text)    //*[@id="table_rows"]/tbody/tr[1]/td[3]    ${Q1 text}
    Validate value (text)    //*[@id="table_rows"]/tbody/tr[1]/td[4]    ${Dictionary}[Q1: How old are you? [Type: Custom scale](Answer)]
    ${Var 1}    Get text    //*[@id="table_rows"]/tbody/tr[1]/td[5]
    Should contain    ${Var 1}    ${Dictionary}[Q1: How old are you? [Type: Custom scale](Grade)]
    ##
    Validate value (text)    //*[@id="table_rows"]/tbody/tr[2]/td[3]    ${Q2 text}
    Validate value (text)    //*[@id="table_rows"]/tbody/tr[2]/td[4]    ${Dictionary}[Q2: Pls select your favorite color [Type: Custom](Answer)]
    ${Var 1}    Get text    //*[@id="table_rows"]/tbody/tr[2]/td[5]
    Should contain    ${Var 1}    ${Dictionary}[Q2: Pls select your favorite color [Type: Custom](Grade)]
    Validate value (text)    //*[@id="table_rows"]/tbody/tr[2]/td[6]    ${Dictionary}[Q2: Pls select your favorite color [Type: Custom](Text)]
    Validate value (text)    //*[@id="table_rows"]/tbody/tr[3]/td[3]    ${Q3 text}
    Validate value (text)    //*[@id="table_rows"]/tbody/tr[4]/td[3]    ${Q4 text}
    ##
    # SetCode, attached files, free text?
    go to.AD    ${URL}/show-entire-crit.php?CritID=${Dictionary}[CritID]&EnableEdit=1
    # Check default page titles
    Element text should be    //span[@class='critInfoItemTitle'][1]    Questionnaire name
    Element text should be    //span[@class='critInfoItemTitle'][2]    Finish time
    Element text should be    //span[@class='critInfoItemTitle'][3]    Result
    Element text should be    //span[@class='critInfoItemTitle'][4]    Worker name
    Element text should be    //span[@class='critInfoItemTitle'][5]    Client name
    Element text should be    //span[@class='critInfoItemTitle'][6]    Shopper name
    Element text should be    //span[@class='critInfoItemTitle'][7]    Short branch name
    Element text should be    //span[@class='critInfoItemTitle'][8]    Status
    Element text should be    //span[@class='critInfoItemTitle'][9]    Review number
    wait until page contains    Full review report:
    ${Var 1}    Get text    //span[@class='CritInfoItem'][3]/a
    ${var}    set variable    ${Dictionary}[Result]
    ${var}    Evaluate    "%.2f" % ${var}
    Should contain    ${var}    ${Var 1}
    #${Var 1}    Get text    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/center/p/span[2]/a
    #Should contain    ${Dictionary}[Result]    ${Var 1}
    Element text should be    //span[@class='CritInfoItem'][3]/a    ${var}
    Element text should be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][9]    ${Dictionary}[CritID]
    Element text should be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][1]    ${Dictionary}[SetName]
    Element text should be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][5]/a    ${Dictionary}[ClientName]
    Element text should be    //div[@id='FiltersArea']/span[@class='CritInfoItem'][7]/a    ${Dictionary}[BranchName]
    ${Var 1}    Get text    //div[@id='FiltersArea']/span[@class='CritInfoItem'][6]/a
    Should contain    ${Var 1}    ${Dictionary}[Shopper Fullname]

Add attachment type name.AD
    [Arguments]    ${AttachmentTypeName}    ${MaxSize}    ${MaxPicWidth}    ${MaxPicHeight}    ${ExtentionsAllowed}    ${HiddenInReports}    ${SystemType}
    go to.AD    ${URL}/attachment-types.php?page_var_divide_recordsPerPage=500
    Wait Until Page Contains element    //button[@class='btn-input']
    ${IsElementVisible}=    Run Keyword And Return Status    Page should contain    ${AttachmentTypeName}
    Run Keyword If    ${IsElementVisible}    Click link    default=${AttachmentTypeName}
    Run Keyword If    ${IsElementVisible}==False    Click button    //button[@class='btn-input']
    Wait Until Page Contains element    //input[@id='field_AttachmentTypeName']
    Input text    //input[@id='field_AttachmentTypeName']    ${AttachmentTypeName}
    Input text    //input[@id='field_MaxSize']    ${MaxSize}
    Run keyword and ignore error    Input text    //input[@id='field_MaxPicWidth']    ${MaxPicWidth}
    Run keyword and ignore error    Input text    //input[@id='field_MaxPicHeight']    ${MaxPicHeight}
    Input text    //textarea[@id='field_ExtentionsAllowed']    ${ExtentionsAllowed}
    Set checkbox.AD    //input[@id='field_HiddenInReports']    ${HiddenInReports}
    Select dropdown.AD    //*[@id="idSystemTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${SystemType}')]
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Page Contains    Attachment type '${AttachmentTypeName}'
    Wait Until Page Contains    successfully
    log to console    Attachment type '${AttachmentTypeName}' added/saved successfully
    go to    ${URL}/attachment-types.php?page_var_divide_recordsPerPage=500
    Wait Until Page Contains    ${AttachmentTypeName}
    Click link    default=${AttachmentTypeName}
    Validate value (value)    //input[@id='field_AttachmentTypeName']    ${AttachmentTypeName}
    Validate value (value)    //input[@id='field_MaxSize']    ${MaxSize}
    Validate value (value)    //textarea[@id='field_ExtentionsAllowed']    ${ExtentionsAllowed}

Search user file.AD
    [Arguments]    ${link}    ${Object name}    ${Type}
    go to.AD    ${URL}${link}
    Wait until page contains element    //button[@class='btn-input']
    FOR    ${i}    IN RANGE    2
        ${ItemIsVisible?}    Run keyword and return status    Page should contain    ${Object name}
        Run Keyword If    ${ItemIsVisible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
        Run Keyword If    ${ItemIsVisible?}    Get ID    id="table_rows"    ${Object name}    1    2
        Run Keyword If    ${ItemIsVisible?}    click link    default=${found ID}
        Wait until page contains element    //input[@id='field_Name']
        Input text    //input[@id='field_Name']    ${Object name}
        Select dropdown.AD    //*[@id="idEntityTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Type}')]
        Run Keyword If    '${Type}'=='File'    Choose File    //tbody/tr[4]/td[2]/input[1]    ${CURDIR}\\Extra files\\IMAGES\\RF 12.png
        Run Keyword If    '${Type}'=='Directory'    Choose File    //tbody/tr[4]/td[2]/input[1]    ${CURDIR}\\Extra files\\IMAGES\\RF Logo2021.png
        Page should contain    Max size: 51200k, Allowed file types: .gif,.jpg,.jpeg,.png,.bmp,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.pdf,.pps,.ppsx,.zip,.rar
        #    Element Should Be Visible    //img[contains(@src, "spacer.gif")]
        Click Save/Add/Delete/Cancel button.AD
        Wait until page contains    successfully
        Log to console    Item '${Object name}' added/edited successfully
        Run Keyword If    ${ItemIsVisible?}    Exit for loop
    END
    go to.AD    ${URL}${link}
    Wait until page contains    ${Object name}
    click link    default=${found ID}
    Wait until page contains element    //input[@id='field_Name']
    Validate value (value)    //input[@id='field_Name']    ${Object name}
    Run Keyword If    '${Type}'=='File'    Page should contain    -RF12.png
    Run Keyword If    '${Type}'=='File'    Page should contain    user_file-
    Run Keyword If    '${Type}'=='Directory'    Page should contain    -RFLogo2021.png

Search shopper file.AD
    [Arguments]    ${link}    ${Object name}    ${Type}
    go to.AD    ${URL}${link}
    Wait until page contains element    //button[@class='btn-input']
    FOR    ${i}    IN RANGE    2
        ${ItemIsVisible?}    Run keyword and return status    Page should contain    ${Object name}
        Run Keyword If    ${ItemIsVisible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
        Run Keyword If    ${ItemIsVisible?}    click link    default=${Object name}
        Wait until page contains element    //input[@id='field_Name']
        Input text    //input[@id='field_Name']    ${Object name}
        Select dropdown.AD    //*[@id="idEntityTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${Type}')]
        Run Keyword If    '${Type}'=='File'    Choose File    //tbody/tr[6]/td[2]/input[1]    ${CURDIR}\\Extra files\\IMAGES\\RF 12.png
        Run Keyword If    '${Type}'=='Directory'    Choose File    //tbody/tr[6]/td[2]/input[1]    ${CURDIR}\\Extra files\\IMAGES\\RF Logo2021.png
        Page should contain    Max size: 8000k, Allowed file types: .gif,.jpg,.jpeg,.png,.bmp,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.pdf,.pps,.ppsx,.zip,.rar
        #    Element Should Be Visible    //img[contains(@src, "spacer.gif")]
        Run Keyword If    ${check env?}    Enter editor text.AD    //*[@id="cke_57_label"]    For RF shoppers!!! ${RF REVN DT}
        Run Keyword If    '${check env?}'=='False'    Enter editor text.AD    //*[@id="cke_51_label"]    For RF shoppers!!! ${RF REVN DT}
        Select dropdown.AD    //*[@id="idSetLinkEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'RF Questionnaire [Shoppers]')]
        Input text    //input[@id='field_ReleaseDate']    10-03-2021
        Input text    //input[@id='field_ExpiryDate']    10-03-2028
        Click Save/Add/Delete/Cancel button.AD
        Wait until page contains    successfully
        Log to console    Item '${Object name}' added/edited successfully
        Run Keyword If    ${ItemIsVisible?}    Exit for loop
    END
    go to.AD    ${URL}${link}
    Wait until page contains    ${Object name}
    click link    default=${Object name}
    Wait until page contains element    //input[@id='field_Name']
    Validate value (value)    //input[@id='field_Name']    ${Object name}
    Run Keyword If    '${Type}'=='File'    Page should contain    -RF12.png
    Run Keyword If    '${Type}'=='File'    Page should contain    chk_file_lib-
    Run Keyword If    '${Type}'=='Directory'    Page should contain    -RFLogo2021.png
    ${found ID}    get text    //td[@id='idcflIDEditbox']
    set global variable    ${found ID}

Add quick link.AD
    [Arguments]    ${name}    ${link}    ${expected text}    ${type}    ${order}
    go to.AD    ${URL}/user-quick-links.php?UserID=${found ID}
    ${is element visible?}    Run keyword and return status    Page should contain    ${name}
    Run Keyword If    ${is element visible?}    Click link    default=${name}
    Run Keyword If    "${is element visible?}"=="False"    go to.AD    ${URL}/user-quick-links.php?addnew=yup&UserID=${found ID}
    Wait until page contains element    //input[@id='field_Name']
    Input text    //input[@id='field_Name']    ${name}
    Input text    //textarea[@id='field_Link']    ${link}
    Input text    //input[@id='field_Order']    ${order}
    Input text    //input[@id='field_Category']    cat: ${name}
    Select dropdown.AD    //*[@id="idTypeEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${type}')]
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    uccessfully
    go to.AD    ${URL}/user-quick-links.php?UserID=${found ID}
    Page should contain    ${name}
    go to.AD    ${URL}/main-menu.php
    Run keyword and ignore error    Page should contain    cat: ${name}
    Page should contain    ${name}
    Click button    default=${name}
    Page should contain    ${expected text}
    Log to console    Added quick link: name="${name}" (redirecting to ${link})

GET alt lang ID.AD
    [Arguments]    ${name}
    go to.AD    ${URL}/alt-langs.php?page_var_filter_IsActive=&page_var_sorting_column=AltLangName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1
    Click link    default=${name}
    Wait Until Page Contains element    //*[@id="field_AltLangName"]
    Validate value (value)    //*[@id="field_AltLangName"]    ${name}
    Checkbox should be selected    //*[@id="field_IsActive"]
    Get ID from ad bar.AD    &edit=    &page_var_sorting
    ${AltLangID}=    set variable    ${found ID}
    Set global variable    ${AltLangID}
    Log to console    created alt lang "${name}"; id= ${AltLangID}
    Set To Dictionary    ${Dictionary}    ${name}=${found ID}
    Log    "${name}" ID = "${Dictionary}[${name}]"
    LOG TO CONSOLE    ${Dictionary}

Check footer on all pages.AD
    # Main menu
    Check footer info.AD    ${URL}/main-menu.php    YES    YES
    Check footer info.AD    ${URL}/clients.php    YES    YES
    Check footer info.AD    ${URL}/menu-manage.php    YES    YES
    Check footer info.AD    ${URL}/menu-questions.php    YES    YES
    Check footer info.AD    ${URL}/menu-training.php    YES    YES
    Check footer info.AD    ${URL}/menu-operation.php    YES    YES
    Check footer info.AD    ${URL}/menu-reports.php    YES    YES
    Check footer info.AD    ${URL}/menu-import.php    YES    YES
    Check footer info.AD    ${URL}/support-tickets.php    YES    YES
    Check footer info.AD    ${URL}/menu-settings.php    YES    YES
    # Management
    Check footer info.AD    ${URL}/index.php?Controller=CallCenterDashboard&Action=DisplayReport    NO    NO    #-1 on page
    Check footer info.AD    ${URL}/user-main-menu-options.php    YES    YES
    Check footer info.AD    ${URL}/panelists.php    YES    YES
    Check footer info.AD    ${URL}/client-actions.php    YES    YES
    Check footer info.AD    ${URL}/report-client-actions.php    YES    YES
    Check footer info.AD    ${URL}/survey-blacklists.php    YES    YES
    #    Check footer info.AD    ${URL}/p_register-new-panelist.php?addnew=1    NO    NO
    #    Check footer info.AD    ${URL}/p_register-new-panelist.php?Agree90=1&FullLegalName_fullname=dd&emailOnLegal=dd&iAgree=Please+wait&addnew=1    NO    NO
    Check footer info.AD    ${URL}/phone-survey-management.php    YES    YES
    Check footer info.AD    ${URL}/samples.php    YES    YES
    Check footer info.AD    ${URL}/phone-survey-management-summary.php    YES    YES
    Check footer info.AD    ${URL}/surveys.php    YES    YES
    Check footer info.AD    ${URL}/users.php    YES    YES
    Check footer info.AD    ${URL}/messages.php    YES    YES
    Check footer info.AD    ${URL}/checkers.php    YES    YES
    Check footer info.AD    ${URL}/client-task-types.php    YES    YES
    #Check footer info.AD    ${URL}/help-text-subst-codes.php    YES    YES    # notice in page text
    #
    Check footer info.AD    ${URL}/question-settings-for-reports.php    YES    YES
    Check footer info.AD    ${URL}/set-type-characteristics.php    YES    YES
    Check footer info.AD    ${URL}/sets.php    YES    YES
    Check footer info.AD    ${URL}/question-lookup.php    YES    YES
    Check footer info.AD    ${URL}/custom-scales.php    YES    YES
    Check footer info.AD    ${URL}/bankq-print.php    YES    YES
    Check footer info.AD    ${URL}/chapters.php    YES    YES
    # CheckerTificate
    Check footer info.AD    ${URL}/cert_map.php    YES    YES
    Check footer info.AD    ${URL}/certificates.php    YES    YES
    Check footer info.AD    ${URL}/report-certifications.php    YES    YES
    # Operation
    Check footer info.AD    ${URL}/reviews-edit.php    YES    YES
    Check footer info.AD    ${URL}/operation-panel.php    YES    YES
    Check footer info.AD    ${URL}/order-send-to-suitable.php    YES    YES
    Check footer info.AD    ${URL}/items-assignment-manual.php    YES    YES
    Check footer info.AD    ${URL}/shahar_bridge.php?name=mass_order    YES    YES
    Check footer info.AD    ${URL}/criticisms-purge-attached-files.php    YES    YES
    Check footer info.AD    ${URL}/crit-do-order.php    YES    YES
    Check footer info.AD    ${URL}/crits-handling.php    YES    YES
    Check footer info.AD    ${URL}/checkers-assignation.php    YES    YES
    Check footer info.AD    ${URL}/criticisms-purge-binary-data.php    YES    YES
    Check footer info.AD    ${URL}/crits-remove-data.php    YES    YES
    Check footer info.AD    ${URL}/criticisms-cancellation.php    YES    YES
    Check footer info.AD    ${URL}/panel-surveys.php    YES    YES
    Check footer info.AD    ${URL}/internet-surveys.php    YES    YES
    Check footer info.AD    ${URL}/field-surveys-activity-map.php    YES    YES
    Check footer info.AD    ${URL}/field-surveys.php    YES    YES
    Check footer info.AD    ${URL}/users-files.php    YES    YES
    Check footer info.AD    ${URL}/checkers-files-settings.php    YES    YES
    Check footer info.AD    ${URL}/crit-show-by-id.php    YES    YES
    Check footer info.AD    ${URL}/mass-answer-recode.php    YES    YES
    Check footer info.AD    ${URL}/perform-crit-as-checker.php    YES    YES
    Check footer info.AD    ${URL}/check-condition.php    YES    YES
    Check footer info.AD    ${URL}/mass-sms.php    YES    YES
    Check footer info.AD    ${URL}/checkers-assignments-list.php    YES    YES
    #Check footer info.AD    ${URL}/shopper_availablity_report.php    YES    YES    #page long upload
    Check footer info.AD    ${URL}/mass-orders-status-control.php    YES    YES
    Check footer info.AD    ${URL}/checkers-orders-by-shift.php    YES    YES
    Check footer info.AD    ${URL}/mass-orders-status.php    YES    YES
    Check footer info.AD    ${URL}/orders-management.php    YES    YES
    Check footer info.AD    ${URL}/crit-orders-handle.php    YES    YES
    Check footer info.AD    ${URL}/orders-assignment-manual.php    YES    YES
    Check footer info.AD    ${URL}/survey-handleinprogress.php    YES    YES
    Check footer info.AD    ${URL}/checkers-assignation.php    YES    YES
    Check footer info.AD    ${URL}/checkers-assignments-list.php    YES    YES
    # Import
    Check footer info.AD    ${URL}/import-branches.php    YES    YES
    Check footer info.AD    ${URL}/import-checkers.php    YES    YES
    Check footer info.AD    ${URL}/import-products.php    YES    YES
    Check footer info.AD    ${URL}/import-zipcodes.php    YES    YES
    Check footer info.AD    ${URL}/import-workers.php    YES    YES
    Check footer info.AD    ${URL}/import-cities.php    YES    YES
    Check footer info.AD    ${URL}/import-users.php    YES    YES
    Check footer info.AD    ${URL}/import-branch-contacts.php    YES    YES
    #Check footer info.AD    ${URL}/import-orders-mass.php    YES    YES
    Check footer info.AD    ${URL}/import-orders-multiple.php    YES    YES
    Check footer info.AD    ${URL}/import-profiles.php    YES    YES
    #Check footer info.AD    ${URL}/import-filelist.php    YES    YES    # error on testing
    Check footer info.AD    ${URL}/auto-import-filelist.php    YES    YES
    Check footer info.AD    ${URL}/import-upload.php    YES    YES
    #Check footer info.AD    ${URL}/import-branch-codes.php    YES    YES    #error on preprod
    Check footer info.AD    ${URL}/import-action.php    YES    YES
    Check footer info.AD    ${URL}/auto-import-profile.php    YES    YES
    Check footer info.AD    ${URL}/import-template.php?type=branches    YES    YES
    # Support tickets
    Check footer info.AD    ${URL}/support-tickets.php    YES    YES
    # Settings
    Check footer info.AD    ${URL}/company-display.php    YES    YES
    Check footer info.AD    ${URL}/company-email.php    YES    YES
    Check footer info.AD    ${URL}/icons-settings.php    YES    YES
    Check footer info.AD    ${URL}/company-css-images.php    YES    YES
    Check footer info.AD    ${URL}/company-info.php    YES    YES
    Check footer info.AD    ${URL}/company-email-accounts.php    YES    YES
    Check footer info.AD    ${URL}/company-css-editor.php    YES    YES
    Check footer info.AD    ${URL}/privacy-management.php    YES    YES
    Check footer info.AD    ${URL}/company-images.php    YES    YES
    Check footer info.AD    ${URL}/company_default_footers.php    YES    YES
    #Check footer info.AD    ${URL}/company-css-editor-popup.php    YES    YES    # empty white page all systems
    Check footer info.AD    ${URL}/required-agreements.php    YES    YES
    Check footer info.AD    ${URL}/menu-settings.php    YES    YES
    Check footer info.AD    ${URL}/countries.php    YES    YES
    Check footer info.AD    ${URL}/region-cities.php    YES    YES
    Check footer info.AD    ${URL}/regions.php    YES    YES
    Check footer info.AD    ${URL}/country-regions.php    YES    YES
    Check footer info.AD    ${URL}/cities.php    YES    YES
    #Check footer info.AD    ${URL}/settings-whatsappaccounts.php    YES    YES    # error on page all systems
    Check footer info.AD    ${URL}/company-operation.php    YES    YES
    Check footer info.AD    ${URL}/settings-jobboard.php    YES    YES
    Check footer info.AD    ${URL}/company-user-automatic-notifications.php    YES    YES
    Check footer info.AD    ${URL}/panelist-props.php    YES    YES
    Check footer info.AD    ${URL}/company-agreements.php    YES    YES
    Check footer info.AD    ${URL}/company-operation-messages.php    YES    YES
    Check footer info.AD    ${URL}/company_shopper_reg.php    YES    YES
    Check footer info.AD    ${URL}/company-checker-disp.php    YES    YES
    Check footer info.AD    ${URL}/company-panel-settings.php    YES    YES
    #Check footer info.AD    ${URL}/index.php?Controller=CallCenterShifts&Action=ListShifts&Args[dt][pageLength]=25&Args[dt][displayStart]=0&Args[dt][order][0][0]=1&Args[dt][order][0][1]=desc    YES    YES
    Check footer info.AD    ${URL}/company-assignments.php    YES    YES
    Check footer info.AD    ${URL}/company-checker-automatic-notifications.php    YES    YES
    Check footer info.AD    ${URL}/checker-props.php    YES    YES
    Check footer info.AD    ${URL}/qa-questions.php    YES    YES
    Check footer info.AD    ${URL}/user-role-types.php    YES    YES
    Check footer info.AD    ${URL}/currencies.php    YES    YES
    Check footer info.AD    ${URL}/settings-creditcards.php    YES    YES
    Check footer info.AD    ${URL}/settings-bank-names.php    YES    YES
    Check footer info.AD    ${URL}/stage-types.php    YES    YES
    Check footer info.AD    ${URL}/cash-flow-types.php    YES    YES
    Check footer info.AD    ${URL}/settings-creditcard-types.php    YES    YES
    Check footer info.AD    ${URL}/settings-holidays.php    YES    YES
    Check footer info.AD    ${URL}/alt-langs.php    YES    YES
    Check footer info.AD    ${URL}/client-cash-flow-types.php    YES    YES
    Check footer info.AD    ${URL}/company-panel-trns-types.php    YES    YES
    Check footer info.AD    ${URL}/settings-special-days.php    YES    YES
    Check footer info.AD    ${URL}/table-fields.php    YES    YES
    Check footer info.AD    ${URL}/index.php?Controller=BlockedIPs&Action=List&Args[dt][pageLength]=25&Args[dt][displayStart]=0&Args[dt][order][0][0]=1&Args[dt][order][0][1]=desc    YES    YES
    Check footer info.AD    ${URL}/attachment-types.php    YES    YES
    Check footer info.AD    ${URL}/index.php?Controller=IPWhiteList&Action=List&Args[dt][pageLength]=25&Args[dt][displayStart]=0&Args[dt][order][0][0]=1&Args[dt][order][0][1]=desc    YES    YES
    Check footer info.AD    ${URL}/sb-api.php    YES    YES
    # Reports > Client reports
    Check footer info.AD    ${URL}/report-property.php    YES    YES
    Check footer info.AD    ${URL}/report-question-comparison.php    YES    YES
    #Check footer info.AD    ${URL}/report-performance-concentr.php    YES    YES    #-1 on demo
    Check footer info.AD    ${URL}/report-browser.php    YES    YES
    Check footer info.AD    ${URL}/report-deviancy.php    YES    YES
    Check footer info.AD    ${URL}/report-perf-level.php    YES    YES
    Check footer info.AD    ${URL}/report-perf-level-by-prop.php    YES    YES
    Check footer info.AD    ${URL}/report-combined-create.php    YES    YES
    Check footer info.AD    ${URL}/report-property-benchmark.php    YES    YES
    Check footer info.AD    ${URL}/report-subchapter-comparison.php    YES    YES
    Check footer info.AD    ${URL}/report-results-breakdown.php    YES    YES
    Check footer info.AD    ${URL}/report-grade-by-question.php    YES    YES
    Check footer info.AD    ${URL}/report-kpi.php    YES    YES
    Check footer info.AD    ${URL}/report-perf-level-2.php    YES    YES
    Check footer info.AD    ${URL}/report-perf-levels-by-datecycle.php    YES    YES
    Check footer info.AD    ${URL}/report-answer-percentage.php    YES    YES
    Check footer info.AD    ${URL}/report-network-status.php    YES    YES
    Check footer info.AD    ${URL}/report-prop-xref.php    YES    YES
    Check footer info.AD    ${URL}/report-investigator.php    YES    YES
    Check footer info.AD    ${URL}/report-question-by-question.php    YES    YES
    Check footer info.AD    ${URL}/crit-show-by-id-anls.php    YES    YES
    Check footer info.AD    ${URL}/report-question-perflevel-gauge.php    YES    YES
    Check footer info.AD    ${URL}/report-question-groups.php    YES    YES
    Check footer info.AD    ${URL}/report-survey-stats.php    YES    YES
    # Reports > Product reports
    #Check footer info.AD    ${URL}/report-pos-analysis.php    YES    YES    -1 demo
    Check footer info.AD    ${URL}/report-product-question.php    YES    YES
    # Reports > Shoppers reports
    Check footer info.AD    ${URL}/report-operation-performence.php    YES    YES
    Check footer info.AD    ${URL}/report-perf-status.php    YES    YES
    Check footer info.AD    ${URL}/report-refusals.php    YES    YES
    Check footer info.AD    ${URL}/report-acqusitions-for-client.php    YES    YES
    Check footer info.AD    ${URL}/report-surveyors-performance.php    YES    YES
    Check footer info.AD    ${URL}/report-crit-modifications.php    YES    YES
    Check footer info.AD    ${URL}/report-branches-sets-asgn-objctvs.php    YES    YES
    Check footer info.AD    ${URL}/report-cash-flow.php    YES    YES
    Check footer info.AD    ${URL}/report-summary-for-client.php    YES    YES
    Check footer info.AD    ${URL}/bank-payroll.php    YES    YES
    # Reports > Operation reports
    Check footer info.AD    ${URL}/report-branches.php    YES    YES
    #    ${URL}/report-email.php    YES    YES    # demo - empty page
    Check footer info.AD    ${URL}/report-checker-pics.php    YES    YES
    Check footer info.AD    ${URL}/report-logins.php    YES    YES
    Check footer info.AD    ${URL}/report-client-activity-concentration.php    YES    YES    # footer is missing
    Check footer info.AD    ${URL}/report-sms.php    YES    YES
    Check footer info.AD    ${URL}/report-calls.php    YES    YES
    Check footer info.AD    ${URL}/report-branch-properties.php    YES    YES
    Check footer info.AD    ${URL}/report-users-refund.php    YES    YES
    Check footer info.AD    ${URL}/report-whatsapp.php    YES    YES
    Check footer info.AD    ${URL}/report-checker-props.php    YES    YES
    Check footer info.AD    ${URL}/report-burned_checkers.php    YES    YES
    Check footer info.AD    ${URL}/report-client-profitability.php    YES    YES    # footer is missing
    # Reports > Surveys
    Check footer info.AD    ${URL}/report-survey-breakdown.php    YES    YES
    #Check footer info.AD    ${URL}/export-crits-3.php    YES    YES    -1
    Check footer info.AD    ${URL}/report-surveyors-status.php    YES    YES
    #Check footer info.AD    ${URL}/export-crits2.php    YES    YES    -1
    # Reports > General
    Check footer info.AD    ${URL}/reports-tabs.php    YES    YES
    Check footer info.AD    ${URL}/report-client-actions-summary.php    YES    YES
    Check footer info.AD    ${URL}/reports-list.php    YES    YES
    Check footer info.AD    ${URL}/report-client-actions.php    YES    YES
    Check footer info.AD    ${URL}/client-reviews-status-management.php    YES    YES
    # Reports > General
    Log to console    General settings are visible on admin main pages    YES    YES
    Check footer info.AD    ${URL}/c_login.php    NO    YES
    Check footer info.AD    ${URL}/c_register-new-checker.php?addnew=1    NO    YES
    Check footer info.AD    ${URL}/recover-password.php?w=ch2    NO    YES
    Check footer info.AD    ${URL}/c_login_reminder.php    NO    YES
    Check footer info.AD    ${URL}/c_login.php    NO    YES
    Log to console    General settings are visible on shopper login screen
    ####

Set Display settings.AD
    [Arguments]    ${expected records on page}    ${Allow adding values}
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Select dropdown.AD    //*[@id="idCitySelectionStyleEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${expected records on page}')]
    Select dropdown.AD    //*[@id="idCitySelectionAllowOtherEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Do not allow adding items')]
    Click Save/Add/Delete/Cancel button.AD
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Validate value (text)    //*[@id="idCitySelectionStyleEditbox"]/table/tbody/tr/td/span/button    ${expected records on page}
    Validate value (text)    //*[@id="idCitySelectionAllowOtherEditbox"]/table/tbody/tr/td/span/button    ${Allow adding values}

Validate background-color.AD
    [Arguments]    ${element}    ${expected color}
    wait until page contains element    ${element}
    ${actual color}    Get element attribute    ${element}    background-color
    Should be equal    ${actual color}    ${expected color}
    Log to console    Background-color validation (element="${element}", style: "${expected color}") (+)

Add Questionnaire type characteristics.AD
    [Arguments]    ${name}    ${TimeExtent}    ${MaxCritsPerDay}
    go to.AD    ${URL}/set-type-characteristics.php?page_var_divide_recordsPerPage=5000
    Check if sorting is visible.AD    id="table_rows"
    ${element visible?}    Run keyword and return status    Page should contain    ${name}
    Run keyword if    ${element visible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Run keyword if    ${element visible?}==True    click link    default=${name}
    Wait until page contains element    //input[@id='field_CharName']
    Input text    //input[@id='field_CharName']    ${name}
    Input text    //input[@id='field_CharDescription']    ${name} ${DD.MM.YY}
    Input text    //input[@id='field_TimeExtent']    ${TimeExtent}
    Input text    //input[@id='field_MaxCritsPerDay']    ${MaxCritsPerDay}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    successfully
    Wait until page contains    ${name}
    Check if sorting is visible.AD    id="table_rows"
    go to.AD    ${URL}/set-type-characteristics.php?page_var_divide_recordsPerPage=5000
    Wait until page contains element    //button[@class='btn-input']
    ${element visible?}    Run keyword and return status    Page should contain    ${name}
    Run keyword if    ${element visible?}==False    click element    //button[@class='btn-input']
    Run keyword if    ${element visible?}==True    click link    default=${name}
    Wait until page contains    ${name} ${DD.MM.YY}
    Validate value (value)    //input[@id='field_CharName']    ${name}
    Validate value (value)    //input[@id='field_CharDescription']    ${name} ${DD.MM.YY}
    Validate value (value)    //input[@id='field_TimeExtent']    ${TimeExtent}
    Validate value (value)    //input[@id='field_MaxCritsPerDay']    ${MaxCritsPerDay}
    Log to console    "${name}" created/updated

Compare SHOPPER and CE file.AD
    go to.AD    ${URL}/checkers.php?edit=${Dictionary}[Shopper ID]
    wait until page contains element    //input[@id='field_Fullname']
    Validate value (value)    //input[@id='field_Username']    ${Dictionary}[Shopper Username]
    Validate value (value)    //input[@id='field_${Dictionary}[RFCF01.Number [Shoppers]]']    ${Dictionary}[RFCF01.Number [Shoppers]]
    Validate value (value)    //input[@id='field_${Dictionary}[RFCF02.Text line [Shoppers]]']    ${Dictionary}[RFCF02.Text line [Shoppers]]
    Validate value (value)    //textarea[@id='field_${Dictionary}[RFCF03.Text block [Shoppers]]']    ${Dictionary}[RFCF03.Text block [Shoppers]]
    Validate value (value)    //td[@id='id${Dictionary}[RFCF06.Phone [Shoppers]]Editbox']/input    ${Dictionary}[RFCF06.Phone [Shoppers]]
    Run keyword if    '${Dictionary}[RFCF07.Checkbox [Shoppers]]'=='1'    Checkbox should be selected    //input[@id='field_${Dictionary}[RFCF07.Checkbox [Shoppers]]']
    Run keyword if    '${Dictionary}[RFCF07.Checkbox [Shoppers]]'=='0'    Checkbox should not be selected    //input[@id='field_${Dictionary}[RFCF07.Checkbox [Shoppers]]']
    ###
    ${var}    Get value    //input[@id='field_${Dictionary}[RFCF04.Date [Shoppers]]']
    ${Variable}    set variable    ${Dictionary}[RFCF04.Date [Shoppers]]
    ${var1}    Convert Date    ${Variable}    date_format=%Y-%m-%d
    ${var2}    Convert Date    ${var1}    result_format=%d-%m-%Y
    Should be equal    ${var}    ${var2}
    #
    ${Variable}    set variable    ${Dictionary}[RFCF05.Time [Shoppers]]
    ${var1}    Convert Date    ${Variable}    date_format=%H:%M:%S
    ${var2}    Convert Date    ${var1}    result_format=%H:%M
    Validate value (value)    //input[@id='field_${Dictionary}[RFCF05.Time [Shoppers]]']    ${var2}
    ##
    Click element    //*[@id="tabs"]/ul/li[3]
    wait until page contains element    //input[@id='field_Phone2']
    Validate value (value)    //input[@id='field_Phone']    ${Dictionary}[Shopper Phone]
    Validate value (value)    //input[@id='field_Phone2']    ${Dictionary}[Shopper Phone2]
    Validate value (value)    //input[@id='field_Phone3']    ${Dictionary}[Shopper Phone3]
    ${act email}    Get value    //input[@id='field_Email_Primary']
    Should Contain    ${Dictionary}[Shopper Email]    ${act email}
    Click element    //*[@id="tabs"]/ul/li[2]
    Validate value (value)    //input[@id='field_Address']    ${Dictionary}[Shopper Address]
    Validate value (value)    //input[@id='field_Zipcode']    ${Dictionary}[Shopper Zipcode]
    #
    Click element    //*[@id="tabs"]/ul/li[4]
    ${d}    Get value    //input[@id='field_BirthDated']
    ${m}    Get value    //input[@id='field_BirthDatem']
    ${y}    Get value    //input[@id='field_BirthDatey']
    Should be equal    ${Dictionary}[Shopper BirthDate]    ${y}-${m}-${d}
    # RFCF08.Fileupload [Shoppers] - not works

Compare CLIENT and CE file.AD
    go to.AD    ${URL}/clients.php?_&edit=${Dictionary}[ClientID]
    Wait until page contains    Client name
    #
    Validate value (value)    //input[@id='field_clientname']    ${Dictionary}[ClientName]
    Validate value (value)    //input[@id='field_${Dictionary}[RFCF01.Number [Clients]]']    ${Dictionary}[RFCF01.Number [Clients]]
    Validate value (value)    //input[@id='field_${Dictionary}[RFCF02.Text line [Clients]]']    ${Dictionary}[RFCF02.Text line [Clients]]
    Validate value (value)    //textarea[@id='field_${Dictionary}[RFCF03.Text block [Clients]]']    ${Dictionary}[RFCF03.Text block [Clients]]
    ###
    ${var}    Get value    //input[@id='field_${Dictionary}[RFCF04.Date [Clients]]']
    ${Variable}    set variable    ${Dictionary}[RFCF04.Date [Clients]]
    ${var1}    Convert Date    ${Variable}    date_format=%Y-%m-%d
    ${var2}    Convert Date    ${var1}    result_format=%d-%m-%Y
    Should be equal    ${var}    ${var2}
    #
    ${Variable}    set variable    ${Dictionary}[RFCF05.Time [Clients]]
    ${var1}    Convert Date    ${Variable}    date_format=%H:%M:%S
    ${var2}    Convert Date    ${var1}    result_format=%H:%M
    Validate value (value)    //input[@id='field_${Dictionary}[RFCF05.Time [Clients]]']    ${var2}
    Validate value (value)    //td[@id='id${Dictionary}[RFCF06.Phone [Clients]]Editbox']/input    ${Dictionary}[RFCF06.Phone [Clients]]
    Run keyword if    '${Dictionary}[RFCF07.Checkbox [Clients]]'=='1'    Checkbox should be selected    //input[@id='field_${Dictionary}[RFCF07.Checkbox [Clients]]']
    Run keyword if    '${Dictionary}[RFCF07.Checkbox [Clients]]'=='0'    Checkbox should not be selected    //input[@id='field_${Dictionary}[RFCF07.Checkbox [Clients]]']
    #Validate value (value)    ${Dictionary}[RFCF08.Fileupload [Clients]]    Import Fileupload CF - does not work

Compare BRANCH and CE file.AD
    go to.AD    ${URL}/branches.php?edit=${Dictionary}[BranchID]&client=${Dictionary}[ClientID]
    wait until page contains element    //input[@id='field_BranchCode']
    Validate value (value)    //input[@id='field_BranchCode']    ${Dictionary}[BranchCode]
    Validate value (value)    //input[@id='field_BranchFullname']    ${Dictionary}[BranchFullname]
    Validate value (value)    //input[@id='field_branchName']    ${Dictionary}[BranchName]
    Validate value (value)    //input[@id='field_address']    ${Dictionary}[Address]
    Validate value (value)    //input[@id='field_HouseNumber']    ${Dictionary}[HouseNumber]
    Validate value (value)    //input[@id='field_${Dictionary}[RFCF01.Number [Branches]]']    ${Dictionary}[RFCF01.Number [Branches]]
    Validate value (value)    //input[@id='field_${Dictionary}[RFCF02.Text line [Branches]]']    ${Dictionary}[RFCF02.Text line [Branches]]
    ###
    ${var}    Get value    //input[@id='field_${Dictionary}[RFCF04.Date [Branches]]']
    ${Variable}    set variable    ${Dictionary}[RFCF04.Date [Branches]]
    ${var1}    Convert Date    ${Variable}    date_format=%Y-%m-%d
    ${var2}    Convert Date    ${var1}    result_format=%d-%m-%Y
    Should be equal    ${var}    ${var2}
    #
    ${Variable}    set variable    ${Dictionary}[RFCF05.Time [Branches]]
    ${var1}    Convert Date    ${Variable}    date_format=%H:%M:%S
    ${var2}    Convert Date    ${var1}    result_format=%H:%M
    #
    Validate value (value)    //textarea[@id='field_${Dictionary}[RFCF03.Text block [Branches]]']    ${Dictionary}[RFCF03.Text block [Branches]]
    Validate value (value)    //input[@id='field_${Dictionary}[RFCF05.Time [Branches]]']    ${var2}
    Validate value (value)    //td[@id='id${Dictionary}[RFCF06.Phone [Branches]]Editbox']/input    ${Dictionary}[RFCF06.Phone [Branches]]
    #//input[@id='field_747'] # ${Dictionary}[] # Bug here: file can not be uploaded for branch CF
    Validate value (value)    //input[@id='field_CityName']    ${Dictionary}[RegionName] -- ${Dictionary}[CityName]
    ###
    Run keyword if    '${Dictionary}[RFCF07.Checkbox [Branches]]'=='1'    Checkbox should be selected    //input[@id='field_${Dictionary}[RFCF07.Checkbox [Branches]]']
    Run keyword if    '${Dictionary}[RFCF07.Checkbox [Branches]]'=='0'    Checkbox should not be selected    //input[@id='field_${Dictionary}[RFCF07.Checkbox [Branches]]']

Validate value (number)
    [Arguments]    ${locator}    ${exp value}
    Wait until page contains element    ${locator}
    ${actual value}    Get text    ${locator}
    Should Be True    ${actual value}    ${exp value}
    Log to console    VALIDATION: ${locator}="${exp value}" (+)

Set "City selection style".AD
    [Arguments]    ${exp result}
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //input[@id='field_RecordsPerPage']
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Select dropdown.AD    //*[@id="idCitySelectionStyleEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${exp result}')]
    Validate value (text)    //*[@id="idCitySelectionStyleEditbox"]/table/tbody/tr/td/span/button    ${exp result}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Display settings saved successfully
    ###
    Log to console    Checking if setting is saved properly...
    go to.AD    ${URL}/company-display.php
    Wait until page contains element    //*[@id="idTimeFormatEditbox"]/table/tbody/tr/td/span/button
    Validate value (text)    //*[@id="idCitySelectionStyleEditbox"]/table/tbody/tr/td/span/button    ${exp result}

Check Authorized surveyors.AD
    [Arguments]    ${link}    ${RobotTestShopper}
    go to.AD    ${URL}${link}
    log to console    Validating authorized assessors...
    Wait until page contains    Survey name
    Wait until page contains    Unauthorized surveyors
    Wait until page contains    Authorized surveyors
    Wait until page contains    Back to surveys
    @{elements}    Get List Items    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr/td[3]/select
    #iterate for each row
    FOR    ${element}    IN    @{elements}
        Log to console    Authorized assessor --> "${element}"
        Log    '${element}' vs '${UpdatedShopperName} (${RobotTestShopper 02})'
        Return from keyword if    '${element}'=='${UpdatedShopperName} (${RobotTestShopper 02})'
    END
    log to console    Granting the access for "${RobotTestShopper}" assessor...
    Click element    //*[contains(text(), '${UpdatedShopperName} (${RobotTestShopper 02})')]    #//form[1]/table/tbody/tr/td[1]
    Log to console    "RobotTestShopper 02" has no access to this q-ry
    Check errors on page [-1]
    sleep    1
    Scroll Element Into View    //*[contains(text(), '${UpdatedShopperName} (${RobotTestShopper 02})')]
    select from list by label    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr/td[1]/select    ${UpdatedShopperName} (${RobotTestShopper 02})
    sleep    1
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr/td[2]/input[2]
    Click Save/Add/Delete/Cancel button.AD
    Wait Until Element Is Enabled    //input[@id='save']    20
    Check errors on page [-1]
    Log to console    Access for "${RobotTestShopper}" has been granted

Edit text messages. AD
    [Tags]    Critical
    go to    ${URL}/messages.php
    log to console    Open ${URL}/messages.php
    Wait Until Element is Visible    //*[@id="save"]
    Wait until page contains    Here you can set the messages which will be shown on the main menu of the clients and the
    #
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_573_label"]    ${CLIENT MSG}
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_599_label"]    ${SHOPPER MSG}${RF REVN DT}
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_7858_label"]    ${ROLE MSG}${RF REVN DT}
    #
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_561_label"]    ${CLIENT MSG}
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_635_label"]    ${SHOPPER MSG}${RF REVN DT}
    Run keyword and ignore error    Enter editor text.AD    //*[@id="cke_7821_label"]    ${ROLE MSG}${RF REVN DT}
    #    #
    Run Keyword If    ${preprod?}    Enter editor text.AD    //*[@id="cke_85_label"]    ${CLIENT MSG}
    Run Keyword If    ${preprod?}    Enter editor text.AD    //*[@id="cke_142_label"]    ${SHOPPER MSG}${RF REVN DT}
    Run Keyword If    ${preprod?}    Enter editor text.AD    //*[@id="cke_1957_label"]    ${ROLE MSG}${RF REVN DT}
    #
    Run Keyword If    ${demo?}    Enter editor text.AD    //*[@id="cke_96_label"]    ${CLIENT MSG}
    Run Keyword If    ${demo?}    Enter editor text.AD    //*[@id="cke_153_label"]    ${SHOPPER MSG}${RF REVN DT}
    Run Keyword If    ${demo?}    Enter editor text.AD    //*[@id="cke_2463_label"]    ${ROLE MSG}${RF REVN DT}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Messages saved!    50
    log to console    Message(s) was(were) updated and saved
    go to    ${URL}/messages.php
    Wait until page contains    Here you can set the messages which will be shown on the main menu of the clients and the    30
    ####Check results
    Page should contain    Here you can set the messages which will be shown on the main menu of the clients and the
    Page should contain    Maximum 10000 characters
    Page should contain    Message to clients:
    Page should contain    Message to Analysts
    #Page should contain    ${DD.MM.YY}

Get element IDs.AD
    [Arguments]    ${link}    ${Keyword}
    go to.AD    ${URL}${link}
    Wait until page contains element    //input[@id='filter_2']
    Get ID    id="table_rows"    ${Keyword}    1    3
    Set To Dictionary    ${Dictionary}    ${Keyword}=${found ID}
    Log    "${Keyword}" ID = "${Dictionary}[${Keyword}]"

GET CF IDS.AD
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF01.Number [Branches]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF02.Text line [Branches]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF03.Text block [Branches]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF04.Date [Branches]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF05.Time [Branches]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF06.Phone [Branches]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF07.Checkbox [Branches]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF08.Fileupload [Branches]
    #
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF01.Number [Users]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF02.Text line [Users]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF03.Text block [Users]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF04.Date [Users]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF05.Time [Users]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF06.Phone [Users]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF07.Checkbox [Users]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF08.Fileupload [Users]
    #
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF01.Number [Clients]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF02.Text line [Clients]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF03.Text block [Clients]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF04.Date [Clients]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF05.Time [Clients]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF06.Phone [Clients]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF07.Checkbox [Clients]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF08.Fileupload [Clients]
    #
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF01.Number [Shoppers]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF02.Text line [Shoppers]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF03.Text block [Shoppers]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF04.Date [Shoppers]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF05.Time [Shoppers]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF06.Phone [Shoppers]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF07.Checkbox [Shoppers]
    Get element IDs.AD    /table-fields.php?page_var_filter_TableLink=&page_var_sorting_column=FieldName&page_var_sorting_order=up&page_var_divide_recordsPerPage=500&page_var_divide_curPage=1    RFCF08.Fileupload [Shoppers]

Close Browser.AD
    Log to console    ------------------------------------------TEST END------------------------------------------
    Close all browsers

Enable required columns.AD
    Log to console    ${\n}===TEARDOWN===
    @{urls}=    String.Split String    ${TestURLs}    ,
    SeleniumLibrary.Open Browser    ${urls[0]}    browser=${BROWSER}
    Run keyword if    "${Max brows win?}"=="YES"    Maximize Browser Window
    FOR    ${URL}    IN    @{urls}
        Set global variable    ${URL}
        SET UP
        Login as a Manager    ${ManagerUsername}    ${ManagerPassword}
        ${RF custom profile name}    set variable    RF.CustomExport
        set global variable    ${RF custom profile name}
        ${RF export file name}    set variable    RF.CExport_without_2_header_columns[${URLIndex}]
        set global variable    ${RF export file name}
        Search CE profile.AD
        Get ID from ad bar.AD    &edit=    &page_var_filter_IsActive
        Edit Column Settings.AD    Result    true    1
        Edit Column Settings.AD    FinishTime    true    2
    END
    Close all browsers

Get CF ID dict.AD
    [Arguments]    ${index}
    FOR    ${Keyword}    IN    @{List of all CF}
        ${CF actual name}    get text    //*[@id="table_rows"]/tbody/tr[${index}]/td[3]
        Log to console    ${index}. Actual custom field "${CF actual name}"
        СА search.AD    ${Keyword}    ${CF actual name}
        Log to console    ---
    END

СА search.AD
    [Arguments]    ${Keyword}    ${CF actual name}
    Log to console    Expected field: "${Keyword}"
    Run Keyword If    '${CF actual name}'=='${Keyword}'    Get ID    id="table_rows"    ${Keyword}    1    3
    Run Keyword If    '${CF actual name}'=='${Keyword}'    Set To Dictionary    ${Dictionary}    ${Keyword}=${found ID}
    Run Keyword If    '${CF actual name}'=='${Keyword}'    Log    FOUND (+): "${Keyword}" ID = "${Dictionary}[${Keyword}]"
    Run Keyword If    '${CF actual name}'=='${Keyword}'    Exit for loop

[Qry] Add qry object.AD
    [Arguments]    ${type}    ${name}    ${code}    ${display condition}    ${text content}
    Go to2.AD    ${URL}/setedit-frameset.php?SetID=${found ID}
    Wait until page contains    ${Robot q-ry}
    select frame    objects
    ${is element visible}    Run keyword and return status    Page should contain    ${code}
    Set global variable    ${is element visible}
    Run keyword if    ${is element visible}    Open Qn page.AD    ${code}
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Unconditional jump'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=7
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Text'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=2
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Picture'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=3
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Worker input'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=9
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Branch selection'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=10
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Finish time input'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=12
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Sample field input'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=11
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Page Break'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=1
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Countdown Timer'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=32
    Run keyword if    '${is element visible}'=='False' and '${type}'=='Question group'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&NewObjectType=6
    Run keyword if    '${type}'=='Change condition'    Set Change condition.AD    Q1
    Run keyword if    '${type}'=='Change condition'    Return from keyword    #--------------------------------------------------------
    #
    ${is element visible}    Run keyword and return status    Element should be visible    ObjectDisplayCondition
    Run keyword if    ${is element visible}==False    Click link    default=General
    #
    sleep    2
    Wait until page contains element    id=ObjectDisplayCondition    5
    Input text    ObjectDisplayCondition    ${display condition}
    Input text    ObjectCode    ${code}
    Validate value (value)    ObjectDisplayCondition    ${display condition}
    Validate value (value)    ObjectCode    ${code}
    #
    Run keyword if    "${type}"=="Worker input"    Input text    //*[@id="WorkerInputCaption"]    ${text content}
    Run keyword if    "${type}"=="Worker input"    Validate value (value)    //*[@id="WorkerInputCaption"]    ${text content}
    Run keyword if    "${type}"=="Worker input"    Set checkbox.AD    //*[@id="WorkerInputMandatory"]    None
    #
    Run keyword if    "${type}"=="Branch selection"    Input text    BranchInputCaption    ${text content}
    Run keyword if    "${type}"=="Branch selection"    Validate value (value)    BranchInputCaption    ${text content}
    Run keyword if    "${type}"=="Branch selection"    Set checkbox.AD    BranchInputMandatory    true
    #
    Run keyword if    "${type}"=="Finish time input"    Input text    FinishTimeInputCaption    ${text content}
    Run keyword if    "${type}"=="Finish time input"    Validate value (value)    FinishTimeInputCaption    ${text content}
    Run keyword if    "${type}"=="Finish time input"    Set checkbox.AD    FinishTimeInputMandatory    true
    #
    Run keyword if    "${type}"=="Sample field input"    Input text    SampleFieldInputCaption    ${text content}
    Run keyword if    "${type}"=="Sample field input"    Validate value (value)    SampleFieldInputCaption    ${text content}
    Run keyword if    "${type}"=="Sample field input"    Input text    //*[@id="SampleFieldName"]    Client
    Run keyword if    "${type}"=="Sample field input"    Validate value (value)    //*[@id="SampleFieldName"]    Client
    Run keyword if    "${type}"=="Sample field input"    Set checkbox.AD    SampleFieldInputMandatory    true
    Run keyword if    "${type}"=="Unconditional jump"    Set checkbox.AD    ujDestDataLink    21: Sample field input: RF Sample field input (Mandatory)
    Run keyword if    "${type}"=="Picture"    Select from list by label    PictureAlign    Center
    Run keyword if    "${type}"=="Picture"    Choose File    //table/tbody/tr/td/form/p[1]/input[1]    ${text content}
    #
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Run keyword if    '${type}'=='Text'    Input text    id=TxtSize    10
    Run keyword if    '${type}'=='Text'    Select from list by label    id=TxtAlign    Center
    Run keyword if    '${type}'=='Text'    Select from list by label    TxtFont    Tahoma
    Run keyword if    '${type}'=='Text' and ${testing?}    Enter editor text.AD    //*[@id="cke_97_label"]    ${text content}
    Run keyword if    '${type}'=='Text' and ${preprod?}    Enter editor text.AD    //*[@id="cke_57_label"]    ${text content}
    Run keyword if    '${type}'=='Text' and ${preprod?} and '${code}'=='c:Text01'    Enter editor text.AD    //*[@id="cke_334_label"]    ${text content} (in Robot language [RTL])
    Run keyword if    '${type}'=='Text' and ${preprod?} and '${code}'=='c:Text01'    Enter editor text.AD    //*[@id="cke_389_label"]    ${text content} (in Robot language [LTR])
    Run keyword if    '${code}'=='c:Text01' and ${testing?}    Enter editor text.AD    //*[@id="cke_403_label"]    ${text content} (in Robot language [RTL])
    Run keyword if    '${code}'=='c:Text01' and ${testing?}    Enter editor text.AD    //*[@id="cke_525_label"]    ${text content} (in Robot language [LTR])
    sleep    1
    Run keyword if    '${code}'=='c:Text02'    Set checkbox.AD    //label[@id='checkbox_UseInTOC']/input[@id='UseInTOC']    true
    Run keyword if    '${type}'=='Countdown Timer'    Input text    Duration    1440
    #
    Run keyword if    '${type}'=='Question group'    Input text    //*[@id="GroupName"]    ${name}
    Run keyword if    '${type}'=='Question group'    Input text    _v5SetQuestGroupsAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    ${name} (in Robot language [RTL])
    Run keyword if    '${type}'=='Question group'    Input text    _v5SetQuestGroupsAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    ${name} (in Robot language [LTR])
    Run keyword if    '${type}'=='Question group'    Select dropdown.AD    gQuestionsOrientation    //*[@id="gQuestionsOrientation"]/option[2]
    Run keyword if    '${type}'=='Question group'    Input text    title1code    c:2021
    Run keyword if    '${type}'=='Question group'    Input text    title1displaycondition    $[12,Q13,2]$=1
    Run keyword if    '${type}'=='Question group'    Input text    title1text    2021
    Run keyword if    '${type}'=='Question group'    Input text    1_v5SetQuestGroupTitlesAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    2021 (in Robot language [RTL])
    Run keyword if    '${type}'=='Question group'    Input text    1_v5SetQuestGroupTitlesAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    2021 (in Robot language [LTR])
    #
    Run keyword if    '${type}'=='Question group'    Input text    title2code    c:2022
    Run keyword if    '${type}'=='Question group'    Input text    title2displaycondition    1=1
    Run keyword if    '${type}'=='Question group'    Input text    title2text    2022
    Run keyword if    '${type}'=='Question group'    Input text    2_v5SetQuestGroupTitlesAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    2022 (in Robot language [RTL])
    Run keyword if    '${type}'=='Question group'    Input text    2_v5SetQuestGroupTitlesAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    2022 (in Robot language [LTR])
    Run keyword if    '${type}'=='Question group'    Click element    //*[@id="lo_meshane"]/option[${text content}]
    sleep    1
    Run keyword if    '${type}'=='Question group'    Click element    moveButton
    Run keyword if    '${type}'=='Question group'    Click element    //*[@id="lo_meshane"]/option[${text content}]
    Run keyword if    '${type}'=='Question group'    Click element    moveButton
    sleep    1
    Click button    id=go
    sleep    1
    Go to2.AD    ${URL}/setedit-frameset.php?SetID=${found ID}
    select frame    objects
    Wait until page contains    ${Robot q-ry}
    Wait until page contains    ${code}
    Run keyword if    "${type}"=="Worker input" or "${type}"=="Finish time input" or "${type}"=="Sample field input"    Wait until page contains    ${text content}
    Run keyword if    "${type}"=="Finish time input"    Wait until page contains    ${text content}
    Run keyword if    "${type}"=="Sample field input"    Wait until page contains    ${text content}
    Log to console    (+++) Qry object "${text content}" has been added/updated (code: ${code})

[Qry] Import qn.AD
    [Arguments]    ${import_file}
    Go to2.AD    ${URL}/setedit-import.php?SetID=${found ID}
    Choose File    //*[@id="Checker_Upload_Form"]/table/tbody/tr[2]/td[2]/input    ${CURDIR}\\Extra files\\Questionnaires\\${import_file}
    Check errors on page [2]
    Wait until page contains element    id=upload
    Click element    id=import
    Click element    id=upload
    Wait until page contains    Validation completed
    Log to console    No problems found. Starting import process...
    log to console    Q-ry has been imported properly
    Check errors on page [2]

[Qry] Edit QN.AD
    [Arguments]    ${qn code}    ${display type}    ${display condition}
    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${qn code}
    ${act Name}    Get value    //input[@id='SepQuestionName']
    #
    ${is element visible}    Run keyword and return status    Element should be visible    ObjectDisplayCondition
    Run keyword if    ${is element visible}==False    Click link    default=General
    #
    sleep    1
    ${act code}    Get value    //input[@id='ObjectCode']
    ${length} =    Get Length    ${display condition}
    Run keyword if    ${length}>2    Wait until page contains element    id=ObjectDisplayCondition    5
    Run keyword if    ${length}>2    Input text    ObjectDisplayCondition    ${display condition}
    Run keyword if    ${length}>2    Validate value (value)    ObjectDisplayCondition    ${display condition}
    Click link    default=General
    sleep    1
    ###############################
    ###############################
    Click link    default=Answers / translations
    sleep    1
    #
    #
    Input text    _v5SetQuestionsAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    Qn ${act Name} (in Robot language [LTR])
    Input text    _v5SetQuestionsAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    Qn ${act Name} (in Robot language [RTL])
    Input text    _v5SetQuestionDescAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    Qn description ${act Name} (in Robot language [LTR])
    Input text    _v5SetQuestionDescAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    Qn description ${act Name} (in Robot language [RTL])
    Validate value (value)    _v5SetQuestionDescAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    Qn description ${act Name} (in Robot language [LTR])
    Validate value (value)    _v5SetQuestionDescAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    Qn description ${act Name} (in Robot language [RTL])
    Validate value (value)    _v5SetQuestionsAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    Qn ${act Name} (in Robot language [LTR])
    Validate value (value)    _v5SetQuestionsAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    Qn ${act Name} (in Robot language [RTL])
    #
    ${ans code}    Get value    ans1text
    Input text    1_v5SetSepAnswersAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    ${ans code} (in Robot language [LTR])
    Input text    1_v5SetSepAnswersAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    ${ans code} (in Robot language [RTL])
    sleep    1
    Validate value (value)    1_v5SetSepAnswersAltLang_AltLangID_${Dictionary}[Robot language [LTR]]    ${ans code} (in Robot language [LTR])
    Validate value (value)    1_v5SetSepAnswersAltLang_AltLangID_${Dictionary}[Robot language [RTL]]    ${ans code} (in Robot language [RTL])
    #
    Click link    default=Answers / translations
    sleep    1
    Click link    default=Advanced
    sleep    1
    Run keyword and ignore error    Select from list by label    //select[@id='DisplayType']    ${display type}
    Run keyword and ignore error    Select from list by label    //select[@id='DisplayOrientation']    Horizontal
    Run keyword if    "${display type}"=="Radio buttons"    Validate value (value)    //select[@id='DisplayType']    0
    Run keyword and ignore error    Validate value (value)    //select[@id='DisplayOrientation']    1
    Click button    id=go
    Log to console    (+++) Done! Qn: "${act Name}" has been edited (${display type} + and alt translation)

GET qns.AD
    [Arguments]    ${Check qn group IDs}
    Go to2.AD    ${URL}/setedit-frameset.php?SetID=${found ID}
    Wait until page contains    ${Robot q-ry}
    select frame    objects
    ${index}    Set Variable    1
    ${elements}=    Get Element Count    //*[@id="object_list"]/tbody/tr
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${elements}
        ${rowindex}=    Evaluate    ${rowindex}+1
        ${QN CODE}    Get Text    //*[@id="object_list"]/tbody/tr[${rowindex}]/td[10]
        ${QN ID}    Get Text    //*[@id="object_list"]/tbody/tr[${rowindex}]/td[3]
        Log to console    № ${rowindex}. QN CODE=${QN CODE}; QN ID=${QN ID}
        Set To Dictionary    ${Dictionary}    ${QN CODE}=${QN ID}
    END
    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q1]
    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q12]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q2]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q3]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q4]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q5]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q7]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q9]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q10]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q11]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[Q13]
    Run keyword if    '${Check qn group IDs}'=='1'    Qry.Get answ ID.AD
    Run keyword if    '${Check qn group IDs}'=='1'    Get qn group ID.AD

Open Qn page.AD
    [Arguments]    ${exp code}
    Wait until page contains    ${Robot q-ry}
    select frame    objects
    ${index}    Set Variable    1
    ${elements}=    Get Element Count    //*[@id="object_list"]/tbody/tr
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${elements}
        ${rowindex}=    Evaluate    ${rowindex}+1
        ${act QN CODE}    Get Text    //*[@id="object_list"]/tbody/tr[${rowindex}]/td[10]
        ${act QN ID}    Get Text    //*[@id="object_list"]/tbody/tr[${rowindex}]/td[3]
        Run keyword if    "${act QN CODE}"=="${exp code}"    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&&DataID=${act QN ID}
        Run keyword if    "${act QN CODE}"=="${exp code}"    Return from keyword
        Log to console    № ${rowindex}. QN CODE=${act QN CODE}
    END

Qbank. Set add info.AD
    [Arguments]    ${qn name}
    Set checkbox.AD    //input[@id='field_MiMandatory']    None
    Input text    //input[@id='field_MiDescription']    "RF Qn" description of additional information
    # ALT languages
    Input text    _CritQuestionsAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    RFQn: ${qn name} (in Robot language [RTL])
    Input text    _CritQuestionsAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    RFQn: ${qn name} (in Robot language [LTR])
    Input text    _CritQuestionDescAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    RFQn description (in Robot language [RTL])
    Input text    _CritQuestionDescAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    RFQn description (in Robot language [LTR])
    Run keyword and ignore error    Input text    _CritQuestionAdditionalInfoDescriptionAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    RFQn description of additional information (in Robot language [RTL])
    Run keyword and ignore error    Input text    _CritQuestionAdditionalInfoDescriptionAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    RFQn description of additional information (in Robot language [LTR])
    Validate value (value)    _CritQuestionsAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    RFQn: ${qn name} (in Robot language [RTL])
    Validate value (value)    _CritQuestionsAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    RFQn: ${qn name} (in Robot language [LTR])
    Validate value (value)    _CritQuestionDescAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    RFQn description (in Robot language [RTL])
    Validate value (value)    _CritQuestionDescAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    RFQn description (in Robot language [LTR])
    Validate value (value)    _CritQuestionAdditionalInfoDescriptionAltLangs_AltLangID_${Dictionary}[Robot language [RTL]]    RFQn description of additional information (in Robot language [RTL])
    Validate value (value)    _CritQuestionAdditionalInfoDescriptionAltLangs_AltLangID_${Dictionary}[Robot language [LTR]]    RFQn description of additional information (in Robot language [LTR])
    Input text    //input[@id='field_MiFreeTextMinlength']    1
    Input text    //input[@id='field_MiFreeTextMaxlength']    100
    Input text    //input[@id='field_MiFreeTextRows']    3
    Input text    //input[@id='field_MiFreeTextCols']    150

IMPORT_Update excel file (custom scale)
    [Arguments]    ${exp value}
    OpenPyxlLibrary.Open Excel    C:\\Python27\\ROBOT_TESTS\\RobotTests2022\\ADtests\\Resources\\Extra files\\Questionnaires\\RF QRY [GLOBAL].xlsx
    ${Names}=    OpenPyxlLibrary.Get Sheet Names
    ${WorkSheetName}    Get From List    ${Names}    0
    Log To Console    \nWorksheet name = "${WorkSheetName}"
    ${CUSTOM SCALE ID}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName}    7    17
    ${exp value int}    Convert To Integer    ${exp value}
    #Write Data By Coordinates    ${WorkSheetName}    7    17    ${${exp value int}}
    #Put Number To Cell    ${WorkSheetName}    7    17    ${exp value int}
    #    Log To Console    BEFORE UPDATE: CUSTOM SCALE ID = "${CUSTOM SCALE ID}"
    #    ${CUSTOM SCALE ID}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName}    7    17
    #    Should be equal    ${CUSTOM SCALE ID}    ${exp value int}
    #    Log    EXPECTED: "${exp value}"
    #    Log To Console    UPDATED! CUSTOM SCALE ID = "${CUSTOM SCALE ID}"
    #    OpenPyxlLibrary.Save Excel    C:\\Python27\\ROBOT_TESTS\\RobotTests2022\\ADtests\\Resources\\Extra files\\Questionnaires\\RF QRY [GLOBAL].xlsx
    #    OpenPyxlLibrary.Open Excel    C:\\Python27\\ROBOT_TESTS\\RobotTests2022\\ADtests\\Resources\\Extra files\\Questionnaires\\RF QRY [GLOBAL].xlsx
    #    ${CUSTOM SCALE ID}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName}    7    17
    #    Should be equal    ${CUSTOM SCALE ID}    ${exp value int}
    #    Log    EXPECTED: "${exp value}"
    Write Data By Coordinates    ${WorkSheetName}    7    18    0
    ${CUSTOM SCALE ID}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName}    7    18
    Should be equal    ${CUSTOM SCALE ID}    0
    OpenPyxlLibrary.Save Excel    C:\\Python27\\ROBOT_TESTS\\RobotTests2022\\ADtests\\Resources\\Extra files\\Questionnaires\\RF QRY [GLOBAL].xlsx

Search CScale.AD
    [Arguments]    ${scale name}
    go to.AD    ${URL}/custom-scales.php
    Check if sorting is visible.AD    id="table_rows"
    Input text    //input[@id='page_var_filter_ScaleName']    ${scale name}
    click element    //input[@id='update']
    Wait until page contains element    //button[@class='btn-input']
    ${element visible?}    Run keyword and return status    Page should contain    ${scale name}
    Run keyword if    ${element visible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Run keyword if    ${element visible?}==True    Get ID    id="table_rows"    ${scale name}    1    2
    Run keyword if    ${element visible?}==True    go to    ${URL}/custom-scales.php?edit=${found ID}
    ${Scale ID}    Set variable    ${found ID}
    set global variable    ${Scale ID}
    log to console    Scale ID="${Scale ID}"

Set text for code text table [qns]
    ${TEXT CODE TABLE Qns CODES}    set variable    <h3><span style="font-size:10px"><strong>Questions</strong></span></h3><table border="1" cellpadding="1" cellspacing="1" style="width:500px">    <tbody><tr>    <td>Text Code Formula</td>    <td>Description</td>    <td style="text-align:center">Actual Result</td>    </tr><tr>    <td>[1,question_object_id]</td>    <td>Selected answer text</td>    <td>Q1 You have selected: "$[1,${Dictionary}[Q1]]$"</td>    </tr><tr>    <td>[2,question_object_id]</td>    <td>Entered &quot;Free text&quot;</td>    <td>Q3 Free text is: "$[2,${Dictionary}[Q3]]$"</td>    </tr><tr>    <td>[3,question_object_id]</td>
    ...    <td>Numeric value that represents date or time entered in the user-entered input (more information)</td>    <td>Q9 Date of entered input is: "$[3,${Dictionary}[Q9]]$"</td>    </tr><tr>    <td>[4,condition,value_in_case_true,value_in_case_false]</td>    <td>Returns different values based on checked condition</td><td>    Q1 Is the selected answer is "SHOW"? $[4,$[11,Q1]$=2,YES,NO]$    </td></tr></tr></tr>    <tr>    <td>[11,question_code]</td>    <td>The answer code of the question whose code is specified</td>    <td>Q1 Your answer code is: "$[11,Q1]$"</td>    </tr>    <tr>    <td>[12,question_code,answer_code]</td>    <td>Checks if the specified answer was selected by the reviewer as one of the answers of the specified question.<br />    Returns 1 if true, 0 otherwise</td>
    ...    <td>Q1 Is your ID answer equal to 2? "$[12,Q1,2]$"</td>    </tr>    <tr>    <td>[16,question_code]</td>    <td>Returns all selected answers separated by comma</td>    <td>Q9 All selected answers are: "$[16,Q9]$"</td>    </tr>    <tr>    <td>[13,question_code]</td>    <td>This code returns the user-entered input (more information) for the question with the specified question code</td>    <td>Q4 You entered the next free text: "$[13,Q4]$"</td>    </tr>    <tr>    <td>[1300,question_code]</td>    <td>This code returns 1 if the user-entered input (more information) for the question with the specified question code was filled, 0 otherwise.</td>    <td>Q3 Is free text entered? "$[1300,Q3]$"</td></tr>
    ...    <td>[15,Question_ID,Answer_ID]</td>    <td>Checks if the specified answer ID was selected by the reviewer as one of the answers of the specified question ID.<br />    Returns 1 if true, 0 otherwise.</td>    <td>Q1 Is your answer "[SHOW]"? "$[15,${Dictionary}[Q1],${Dictionary}[SHOW]]$"</td>    </tr>    <tr>    <td>[234,section_id]</td>    <td>This code is replaced with the score of the chosen section for this review.</td>    <td>The score of the chosen section: "$[234,${Section ID}]$"</td>    </tr>    <tr>    <td>[235,sub_section_id]</td>    <td>This code is replaced with the score of the chosen sub-section for this review.</td>    <td>The score of the chosen sub-section for this review: "$[235,${Sub section ID}]$"</td>    </tr>    <tr>
    ...    <td>[250,section_id]</td>    <td>This code is replaced with the weight of the chosen section for this review.</td>    <td>The weight of the chosen section "$[250,${Section ID}]$"</td>    </tr>    <tr>    <td>[251,sub_section_id]</td>    <td>This code is replaced with the weight of the chosen sub-section for this review.</td>    <td>The weight of the chosen sub-section for this review: "$[251,${Sub section ID}]$"</td>    </tr>    <tr>    <td>[252,question_id,sub_section_id]</td>    <td>This code is replaced with the weight of the chosen question in the sub-section specified for this review.</td>    <td>Weight of the chosen question: "$[252,${Dictionary}[Q2],${Sub section ID}]$"</td>    </tr>    <tr>    <td>[260,question_id,sub_section_id]</td>
    ...    <td>This code is replaced with the grade of the chosen question specified for this review.</td>    <td>Grade of the chosen question specified for this review: "$[260,${Dictionary}[Q2],${Sub section ID}]$"</td>    </tr>    </tbody>    </table>    <p>&nbsp;</p>
    Log    ${1}
    Set global variable    ${TEXT CODE TABLE Qns CODES}
    #
    ${TEXT CODE TABLE Branches, Clients, Users and Shoppers CODES}    set variable    <h3><span style="font-size:10px"><strong>Branches, Clients, Users, and Shoppers</strong></span></h3><table border="1" cellpadding="1" cellspacing="1" style="width:500px"><tbody><tr><td><span style="font-size:10px">Formula</span></td><td><span style="font-size:10px">Description</span></td><td><span style="font-size:10px">Actual result</span></td></tr><tr><td><span style="font-size:10px">[101,client_property_id]</span></td><td><span style="font-size:10px">This code is replaced with the property content identifier, according to the branch defined in the current survey. You may use this code as a display condition, in order to display certain objects only if a branch has a specific property defined.</span></td><td><span style="font-size:10px">$[101,${Dictionary}[Manager]]$</span></td></tr><tr><td><span style="font-size:10px">[102,PropID]</span></td><td><span style="font-size:10px">This code returns the content of the branch characteristic.</span></td><td><span style="font-size:10px">$[102,${Dictionary}[Manager]]$</span></td></tr><tr><td><span style="font-size:10px">[103,PropID]</span></td><td><span style="font-size:10px">This code returns the ID of the shopper characteristic value.</span></td><td><span style="font-size:10px">$[103,${Dictionary}[Autotest property [RF]]]$</span></td></tr><tr><td><span style="font-size:10px">[104,PropID,PropValueID]</span></td><td><span style="font-size:10px">Checks if the specified characteristic value ID was chosen for the shopper as one of it&#39;s characteristics.&nbsp;Useful for multiple-choice characteristics.</span></td><td><span style="font-size:10px">$[104,${Dictionary}[Autotest property [RF]],${Dictionary}[Autotest-YES]]$</span></td></tr>    <tr><td><span style="font-size:10px">[105,PropID,PropValueID]&nbsp;</span></td>    <td><span style="font-size:10px">Checks if the specified characteristic value ID was chosen for the branch as one of it&#39;s characteristics.&nbsp;Useful for multiple-choice characteristics.</span></td><td><span style="font-size:10px">value ID = $[105,${Property ID},${Property option ID}]$</span></td></tr><tr><td><span style="font-size:10px">[200]</span></td><td><span style="font-size:10px">This code is replaced with the full branch name.</span></td><td><span style="font-size:10px">$[200]$</span></td></tr><tr><td><span style="font-size:10px">[201]</span></td><td><span style="font-size:10px">This code is replaced with the short branch name.</span></td><td><span style="font-size:10px">$[201]$</span></td>    </tr><tr><td><span style="font-size:10px">[202]</span></td><td><span style="font-size:10px">This code is replaced with the reviewer name.</span></td><td><span style="font-size:10px">$[202]$</span></td></tr><tr><td><span style="font-size:10px">[203]</span></td>    <td><span style="font-size:10px">This code is replaced with the review ID number.</span></td><td><span style="font-size:10px">$[203]$</span></td></tr><tr><td><span style="font-size:10px">[2031]</span></td><td><span style="font-size:10px">This code is replaced with the review status.</span></td><td><span style="font-size:10px">$[2031]$</span></td>    </tr><tr><td><span style="font-size:10px">[204]</span></td><td><span style="font-size:10px">This code is replaced with the reviewer code.</span></td><td><span style="font-size:10px">$[204]$</span></td></tr><tr><td><span style="font-size:10px">[205]</span></td>    <td><span style="font-size:10px">This code is replaced with the branch code.</span></td><td><span style="font-size:10px">$[205]$</span></td></tr><tr><td><span style="font-size:10px">[400]</span></td><td><span style="font-size:10px">This code is replaced with the worker&#39;s name from the review.</span></td><td><span style="font-size:10px">$[400]$</span></td></tr><tr><td><span style="font-size:10px">[206]</span></td>    <td><span style="font-size:10px">This code is replaced with survey group code.</span></td>    <td><span style="font-size:10px">$[206]$</span></td></tr><tr><td><span style="font-size:10px">[207]</span></td><td><span style="font-size:10px">This code is replaced with survey result (if the survey was completed)<br />Rounded result</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr><tr><td><span style="font-size:10px">[221]</span></td><td><span style="font-size:10px">This code is replaced with survey result (if the survey was completed)<br />Not rounded result</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr><tr><td><span style="font-size:10px">[208]</span></td>    <td><span style="font-size:10px">This code is replaced with the branch phone number</span></td><td><span style="font-size:10px">$[208]$</span></td></tr><tr><td><span style="font-size:10px">[210]</span></td><td><span style="font-size:10px">This code is replaced with the password of the shopper</span></td><td><span style="font-size:10px">$[210]$</span></td>    </tr><tr><td><span style="font-size:10px">[212]</span></td><td><span style="font-size:10px">This code is replaced with the user name of the shopper</span></td>    <td><span style="font-size:10px">$[212]$</span></td></tr><tr><td><span style="font-size:10px">[211]</span></td><td><span style="font-size:10px">This code is replaced with the user name of the user -&nbsp;<strong>not a shopper, but a user</strong></span></td>    <td><span style="font-size:10px">$[211]$</span></td></tr><tr><td><span style="font-size:10px">[2120]</span><br />&nbsp;</td><td><span style="font-size:10px">When a message is sent to a shopper, this code is replaced with recipient&#39;s user name</span></td>    <td><span style="font-size:10px">$[2120]$</span></td></tr><tr><td><span style="font-size:10px">[2115]</span><br />    &nbsp;</td><td><span style="font-size:10px">When message is sent to a branch contact, this code is replaced with the recipient&#39;s contact name</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr><tr><td><span style="font-size:10px">[2110]</span></td><td><span style="font-size:10px">When message is sent to a user, this code is replaced with recipient&#39;s user name</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr><tr><td><span style="font-size:10px">[626,CustomFieldID]</span></td><td><span style="font-size:10px">This code returns the textual value that is in the Users custom field.</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr>
    ...    <tr><td><span style="font-size:10px">[213]</span></td><td><span style="font-size:10px">This code is replaced with the name of the client</span></td><td><span style="font-size:10px">$[213]$</span></td></tr><tr><td><span style="font-size:10px">[214]</span></td><td><span style="font-size:10px">This code is replaced with the address of the branch</span></td><td><span style="font-size:10px">$[214]$</span></td></tr><tr><td><span style="font-size:10px">[215]</span></td><td><span style="font-size:10px">This code is replaced with the city to which the branch is linked</span></td><td><span style="font-size:10px">$[215]$</span></td></tr><tr><td><span style="font-size:10px">[217]</span></td>    <td><span style="font-size:10px">This code is replaced with the opening hours of the branch</span></td><td><span style="font-size:10px">$[217]$</span></td></tr><tr>    <td><span style="font-size:10px">[218]</span></td><td><span style="font-size:10px">This code is replaced with the name of the questionnaire</span></td><td><span style="font-size:10px">$[218]$</span></td></tr><tr><td><span style="font-size:10px">[2180]</span></td>    <td><span style="font-size:10px">This code is replaced with the ID of the questionnaire</span></td><td><span style="font-size:10px">$[2180]$</span></td>    </tr><tr><td><span style="font-size:10px">[2181]</span></td><td><span style="font-size:10px">This code is replaced with the text code of the questionnaire</span></td><td><span style="font-size:10px">$[2181]$</span></td></tr><tr><td><span style="font-size:10px">[219]</span></td><td><span style="font-size:10px">This code is replaced with the name of the current review client label</span></td><td><span style="font-size:10px">$[219]$</span></td></tr><tr><td><span style="font-size:10px">[2191]</span></td>    <td><span style="font-size:10px">This code is replaced with the name of the next review client label it&#39;s going to be automatically changed to</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr><tr><td><span style="font-size:10px">[2192]</span></td><td><span style="font-size:10px">This code is replaced with the date on which it&#39;s going to be changed automatically to the next client label</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr><tr><td><span style="font-size:10px">[2193]</span></td><td><span style="font-size:10px">This code is replaced with the number of days remaining to be changed automatically to the next client label</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr><tr><td><span style="font-size:10px">[220]</span></td><td><span style="font-size:10px">This code is replaced with the code of the current language</span></td><td><span style="font-size:10px">$[220]$</span></td></tr><tr><td><span style="font-size:10px">[222]</span></td><td><span style="font-size:10px">This code is replaced with the Email of the shopper</span></td><td><span style="font-size:10px">$[222]$</span></td></tr><tr><td><span style="font-size:10px">[225]</span></td><td><span style="font-size:10px">This code is replaced with the ID number of the project</span></td><td><span style="font-size:10px">$[225]$</span></td></tr><tr><td><span style="font-size:10px">[226]</span></td><td><span style="font-size:10px">This code is replaced with the name of the project</span></td><td><span style="font-size:10px">$[226]$</span></td></tr><tr><td><span style="font-size:10px">[240]</span></td><td><span style="font-size:10px">This code is replaced with the Purchase Invoice number</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr><tr><td><span style="font-size:10px">[241]</span></td><td><span style="font-size:10px">This code is replaced with the Purchase Invoice value</span></td><td><span style="font-size:10px">NOT ACTUAL</span></td></tr><tr><td><span style="font-size:10px">[242]</span></td><td><span style="font-size:10px">This code is replaced with the Order Briefing</span></td><td><span style="font-size:10px">Order Briefing: $[242]$</span></td></tr></tbody></table><p>&nbsp;</p>
    Set global variable    ${TEXT CODE TABLE Branches, Clients, Users and Shoppers CODES}
    #
    ${TEXT CODE TABLE Samples CODES}    set variable    <h3><strong>Samples</strong></h3><table border="1" cellpadding="1" cellspacing="1" style="width:500px"><tbody><tr><td style="text-align:center"><strong>Text Code Formula</strong></td><td style="text-align:center"><strong>Description</strong></td>    <td><strong>Actual Result</strong></td></tr><tr><td><span style="font-size:10px">[500,sample_field_name]</span></td><td><span style="font-size:10px">In telephonic survey mode, returns the value of the specified sample field which is associated with the current survey.</span></td><td><span style="font-size:10px">$[500,sample_field_name]$</span></td></tr><tr><td><span style="font-size:10px">[305,CustomFieldID]</span></td><td><span style="font-size:10px">This code returns the textual value that is in the Order custom field.</span></td><td><span style="font-size:10px">$[305,CustomFieldID]$</span></td></tr><tr><td><span style="font-size:10px">[306,CustomFieldID]</span></td><td><span style="font-size:10px">This code returns the textual value that is in the Branch custom field.</span><br />&nbsp;</td><td><span style="font-size:10px">$[306,CustomFieldID]$</span></td></tr>    <tr><td><span style="font-size:10px">[501,sample_field_name,days_to_count]</span></td><td><span style="font-size:10px">In telephonic survey mode, returns the number of completed surveys to the specific value for the field.<br />Example:<br />sample_field_name: city<br />days_to_count: 14<br />The result will be the number of completed surveys for the same city name as the current record in the last 14 days</span></td><td><span style="font-size:10px">$[501,sample_field_name,days_to_count]$</span></td></tr><tr><td><span style="font-size:10px">[510]</span></td><td><span style="font-size:10px">$[510]$<br />This code is replaced with the link that is defined for the Email survey invitation</span></td><td><span style="font-size:10px">$[510]$</span></td></tr><tr><td><span style="font-size:10px">[600,ProductID]</span></td><td><span style="font-size:10px">For POS reviews, will return the total items counted for the specified Product ID</span></td><td><span style="font-size:10px">$[600,ProductID]$</span></td></tr></tbody></table><p><br />&nbsp;</p>
    Set global variable    ${TEXT CODE TABLE Samples CODES}
    ${TEXT CODE TABLE Qn Groups CODES}    set variable    <table border="1" cellpadding="1" cellspacing="1" style="width:500px">    <tbody><tr><td style="text-align:center"><strong>Text Code Formula</strong></td>    <td style="text-align:center"><strong>Description</strong></td><td style="text-align:center"><strong>Actual result</strong></td></tr><tr><td>[1,question_object_id]</td><td>This code is replaced with the chosen answer text for this question. question_object_id is a numeric identification code of this question. It can be determined by showing the question details in survey group editing mode. In the window which will be opened, you will be able to see &quot;Object identifier&quot; and the aforementioned code.</td><td>[c:QGroup01] $[1,${Dictionary}[c:QGroup01];${Dictionary}[c:QGroup01];${Dictionary}[Q5]]$<br />&nbsp;</td>    </tr><tr><td>[2,question_object_id]<br />&nbsp;</td><td>This code returns the user-entered input (more information) for the question with the specified object-id</td>    <td>[c:QGroup01] $[2,${Dictionary}[c:QGroup01];${Dictionary}[c:QGroup01];${Dictionary}[Q5]]$<br />&nbsp;</td></tr><tr>    <td>[3,question_object_id]</td><td>This code returns a numeric value that represents date or time entered in the user-entered input (more information) for the question with the specified object-id</td><td>$[3,${Dictionary}[c:QGroup01];${Dictionary}[c:QGroup01];${Dictionary}[Q5]]$<br />    &nbsp;</td></tr><tr><td>[11,question_code]</td><td>This code returns the answer code of the question whose code is specified.</td><td>$[11,c:QGroup01;${Dictionary}[c:QGroup01];${Dictionary}[Q5]]$<br />&nbsp;</td>    </tr><tr><td>[12,question_code,answer_code]</td>    <td>Checks if the specified answer was selected by the reviewer as one of the answers of the specified question.<br />Returns 1 if true, 0 otherwise.<br />    Useful for multiple choice questions.</td><td>$[12,c:QGroup01;${Dictionary}[c:QGroup01];${Dictionary}[Q5]]$<br />    &nbsp;</td>    </tr><tr><td>[13,question_code]</td><td>This code returns the user-entered input (more information) for the question with the specified question code.</td><td>$[13,c:QGroup01;${Dictionary}[c:QGroup01];${Dictionary}[Q5]]$</td></tr></tbody></table>    <p>&nbsp;</p>
    Set global variable    ${TEXT CODE TABLE Qn Groups CODES}

Set Change condition.AD
    [Arguments]    ${QN code}
    Go to2.AD    ${URL}/setedit-change-condition.php?SetID=${found ID}
    Wait until page contains    Change condition
    Select dropdown.AD    //*[@id="cctyp1"]    //*[@id="cctyp1"]/option[2]
    Input text    //*[@id="condition_1"]    $[11,${QN code}]$=2
    Input text    //input[@id='ansCode_1']    100
    #Validate value (text)    //*[@id="cctyp1"]    Final grade
    Validate value (value)    //*[@id="condition_1"]    $[11,${QN code}]$=2
    Validate value (value)    //input[@id='ansCode_1']    100
    sleep    1
    Click element    //*[@id="condition_1"]
    #
    Wait until page contains element    //*[@id="cctyp2"]
    Select dropdown.AD    //*[@id="cctyp2"]    //*[@id="cctyp2"]/option[2]
    Input text    //*[@id="condition_2"]    $[11,${QN code}]$=1
    Input text    //input[@id='ansCode_2']    0
    #Validate value (text)    //*[@id="cctyp1"]    Final grade
    Validate value (value)    //*[@id="condition_2"]    $[11,${QN code}]$=1
    Validate value (value)    //input[@id='ansCode_2']    0
    Sleep    2
    Set focus to element    save
    Double Click Element    save
    Sleep    3
    Go to2.AD    ${URL}/setedit-change-condition.php?SetID=${found ID}
    #Validate value (text)    //*[@id="cctyp1"]    Final grade
    Validate value (value)    //*[@id="condition_1"]    $[11,${QN code}]$=2
    Validate value (value)    //input[@id='ansCode_1']    100
    Validate value (value)    //*[@id="condition_2"]    $[11,${QN code}]$=1
    Validate value (value)    //input[@id='ansCode_2']    0

Get BR property ID. AD
    [Arguments]    ${exp branch property name}
    go to.AD    ${URL}/client-props.php?client=${Client ID}
    Set global variable    ${exp branch property name}
    Wait until page contains element    //table[@id='big_tedit_wrapping_table']/tbody/tr/td/table/tbody/tr/td/button[@class='btn-input']
    ${Rows} =    Get Element Count    //*[@id="table_rows"]/tbody/tr    #how many (columns) do we have
    Log to console    Rows in total: ${Rows}, searching "${exp branch property name}", pls wait....
    FOR    ${rowindex}    IN RANGE    ${Rows}
        ${rowindex}    Evaluate    ${rowindex}+1
        ${Property name}    Get text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[2]
        ${Property ID}    Get text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[1]
        Log to console    № ${rowindex}. ID: ${Property ID}. Name= "${Property name}";
        Run keyword if    '${Property name}'=='${exp branch property name}'    Exit for loop
    END    #
    Set To Dictionary    ${Dictionary}    ${Property name}=${Property ID}
    log to console    Prop "${exp branch property name}" ID: ${Dictionary}[${exp branch property name}]
    go to.AD    ${URL}/client-prop-values.php?prop=${Property ID}
    Wait until page contains    Client name:
    ${Property option name}    Get text    //*[@id="table_rows"]/tbody/tr[1]/td[2]
    ${Property option ID}    Get text    //*[@id="table_rows"]/tbody/tr[1]/td[1]
    Set To Dictionary    ${Dictionary}    ${Property option name}=${Property option ID}
    log to console    Prop option "${Property option name}" ID: ${Dictionary}[${Property option name}]
    log    ${Dictionary}
    Set global variable    ${Property ID}
    Set global variable    ${Property option ID}
    ${Branch property text codes}    Set variable    <p style="text-align:center">******</p><table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px"><tbody><tr><td style="background-color:#00a6dd; text-align:center">BRANCH PROPERTY</td></tr><tr><td>Property option ID: $[101,${Dictionary}[${Property name}]]$</td></tr><tr><td>Property Name: $[102,${Dictionary}[${Property name}]]$</td></tr><tr><td>If specified BR property was chosen for the branch as one of its characteristics?: $[105,${Dictionary}[${Property name}],${Dictionary}[${Property option name}]]$</td></tr><tr></tbody></table>
    Set global variable    ${Branch property text codes}
    Set global variable    ${Property option name}

Get section ID. AD
    [Arguments]    ${exp section name}
    go to.AD    ${URL}/chapters.php?page_var_filter_ClientName=${Client ID}
    set global variable    ${exp section name}
    Wait until page contains element    //table[@id='big_tedit_wrapping_table']/tbody/tr/td/table/tbody/tr/td/button[@class='btn-input']
    ${Rows} =    Get Element Count    //*[@id="table_rows"]/tbody/tr    #how many (columns) do we have
    Log to console    Rows in total: ${Rows}, searching "${exp section name}", pls wait....
    FOR    ${rowindex}    IN RANGE    ${Rows}
        ${rowindex}    Evaluate    ${rowindex}+1
        ${Section name}    Get text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[2]
        ${Section ID}    Get text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[1]
        ${Section target}    Get text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[5]
        Log to console    № ${rowindex}. Section name= "${Section name}"; Section ID = "${Section ID}"; \ Section target = "${Section target}"
        Run keyword if    '${Section name}'=='${exp section name}'    Exit for loop
    END    #
    Set To Dictionary    ${Dictionary}    ${Section name}=${Section ID}
    Set To Dictionary    ${Dictionary}    ${Section name} target=${Section target}
    Log    ${Dictionary}
    Log to console    Section: "${exp section name}" = ${Dictionary}[${exp section name}]
    ###
    go to.AD    ${URL}/subchapters.php?chapter=${Dictionary}[${exp section name}]
    Wait until page contains    Section name:
    ${Sub section name}    get text    //*[@id="table_rows"]/tbody/tr[1]/td[2]
    ${Sub section ID}    Get text    //*[@id="table_rows"]/tbody/tr[1]/td[1]
    ${Sub section target}    Get text    //*[@id="table_rows"]/tbody/tr[1]/td[5]
    Set global variable    ${Section name}
    Set global variable    ${Section ID}
    Set global variable    ${Sub section name}
    Set global variable    ${Sub section ID}
    Set To Dictionary    ${Dictionary}    ${Sub section name}=${Sub section ID}
    Set To Dictionary    ${Dictionary}    ${Sub section name} target=${Sub section target}
    Log to console    Sub section: "${Sub section name}" = ${Dictionary}[${Sub section name}]
    Log    ${Dictionary}
    ${Section text codes}    Set variable    <p style="text-align:center">******</p> <table align="center" border="1" cellpadding="1" cellspacing="1" style="width:500px"><tbody><tr><td style="background-color:#00a6dd; text-align:center">(SUB)SECTIONS DETAILS</td></tr><tr><td>Score of the chosen section for this review:&nbsp;$[234,${Dictionary}[${exp section name}]~2]$</td></tr><tr><td>Score of the chosen sub-section for this review: $[235,${Dictionary}[${Sub section name}]]$</td></tr><tr><td>Weight of the chosen section for this review: $[250,${Dictionary}[${exp section name}]]$</td></tr><tr></tbody></table>
    Set global variable    ${Section text codes}

Qry.Get answ ID.AD
    ${Qn name}    get value    SepQuestionName
    ${Qn code}    get text    //input[@id='ObjectCode']
    Click link    default=Answers / translations
    sleep    2
    ###
    ${answer index}    Set variable    1
    FOR    ${i}    IN RANGE    20
        ${i}    Evaluate    ${i}+1
        ${answer index}    Evaluate    ${answer index}+1
        ${is ans visible?}    Run keyword and return status    Element should be visible    //*[@id="ans${i}text"]
        Run keyword if    ${is ans visible?}==False    exit forloop
        Execute JavaScript    window.document.getElementById("ans${i}text").scrollIntoView(true)
        ${Qn answer text}    get value    //*[@id="ans${i}text"]
        ${Qn answer ID full}    get text    //*[@id="answersTable"]/tbody/tr[${answer index}]/td[1]
        ${Qn answer code}    get value    //input[@id='ans${i}code']
        ${Qn answer value}    get value    //input[@id='ans${i}value']
        ${Qn answer ID}    Get Substring    ${Qn answer ID full}    2    -2
        ${Qn answer ID}    Fetch from right    ${Qn answer ID}    (
        Set to dictionary    ${Dictionary}    ${Qn name} code=${Qn code}
        Set to dictionary    ${Dictionary}    ${Qn answer code} answer ID=${Qn answer ID}
        Set to dictionary    ${Dictionary}    ${Qn name} answer code=${Qn answer code}
        Set to dictionary    ${Dictionary}    ${Qn name} answer value=${Qn answer value}
        Set to dictionary    ${Dictionary}    ${Qn answer text}=${Qn answer ID}
    END
    Log to console    ${Dictionary}

Get qn group ID.AD
    Go to2.AD    ${URL}/setedit-object-popup.php?SetID=${found ID}&DataID=${Dictionary}[c:QGroup01]
    ${Qn answer 1 text}    get value    //*[@id="title1text"]
    ${Qn answer 2 text}    get value    //*[@id="title2text"]
    ${Qn answer 1}    get text    //*[@id="table_group_titles"]/tbody/tr[2]/td[1]
    ${Qn answer 2}    get text    //*[@id="table_group_titles"]/tbody/tr[3]/td[1]
    #
    ${Qn answer 1 ID}    Get Substring    ${Qn answer 1}    3
    ${Qn answer 2 ID}    Get Substring    ${Qn answer 2}    3
    Set to dictionary    ${Dictionary}    ${Qn answer 1 text}=${Qn answer 1 ID}
    Set to dictionary    ${Dictionary}    ${Qn answer 2 text}=${Qn answer 2 ID}

Check default qry elements.SD
    #    Wait until page contains element    //input[@id='Uploadfiles']
    Page should contain element    //select[@id='AltLangID']
    Page should contain    Checker Software Systems LTD
    Page should contain element    //span[@id='cntdwn']

Fill in review as a shopper(GLOBAL).SD
    [Arguments]    ${finish action}
    Check default qry elements.SD
    Get ID from ad bar.AD    CritID=    &cc
    Page should not contain element    //*[@id='opl-obj${Dictionary}[Q2]']/h3
    Page should contain    Hello,
    #    Page should contain    "Robot 02 [Full Name]"
    Page should contain    Qry Name: ${Robot q-ry}
    Page should contain    Client Name:
    Page should contain    Full branch name:
    Page should contain    ${RobotTestClient}
    Page should contain    We're conducting research on the different question types Checker Soft has to offer. This will help us make improvements to the existing tool and prioritize new features. The survey should only take a few minutes, and your responses are completely anonymous. You can only take the survey once, but you can edit your responses until the survey is closed. Questions marked with an asterisk (*) are required. If you have any questions about the survey, please email us:
    Page should contain    We really appreciate your input!
    Page should contain    checker-soft@email.com
    Element Should Be Visible    //img[contains(@src, "RFchecker.gif")]
    Element Should Not Be Visible    //span[@id='obj${Dictionary}[Q1]-placeholder']
    Click element    //input[@id='continue']
    Check default qry elements.SD
    Page should contain    Q1
    Element Should Be Visible    //*[@id='opl-obj${Dictionary}[Q1]']/h3
    Element Should Be Visible    //body/canvas    #timer
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q2]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q3]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q4]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q5]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q6]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q7]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q8]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q9]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q10]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q11]']/h3
    Element Should Not Be Visible    //*[@id='opl-obj${Dictionary}[Q12]']/h3
    #
    Element Should Not Be Visible    //*[@id="opl-obj${Dictionary}[c:WorInp]"]/h3
    Element Should Not Be Visible    //div[@id='opl-obj${Dictionary}[c:BranSelec]']/h3
    Element Should Not Be Visible    //div[@id='opl-obj${Dictionary}[c:FinisTime]']/h3
    Element Should Not Be Visible    //div[@id='opl-obj-${Dictionary}[c:SamField]']/h3
    #
    Element Should Be Visible    //*[@id='opl-obj${Dictionary}[Q1]']/h3
    Element text should be    //*[@id='opl-obj${Dictionary}[Q1]']/h3    Q1. Show text codes? *
    Element text should be    //*[@id="opl-obj${Dictionary}[Q1]"]/p[2]    You can only select 1 choice(s) below
    Element should contain    //*[@id="opl-obj${Dictionary}[Q1]"]/p[1]    Question description Q1 (Qtype: Custom [DType: Check boxes
    Click element    //*[@id="obj${Dictionary}[Q1]_${Dictionary}[SHOW]"]
    #Validate element attribute.AD    //*[@id="obj${Dictionary}[Q1]_${Dictionary}[SHOW]"]    class    checkboxAnswers checkboxAnswersChecked
    sleep    1
    Element text should be    //*[@id='opl-obj${Dictionary}[Q2]']/h3    Q2. What is your age? *
    Element text should be    //*[@id="opl-obj${Dictionary}[Q2]"]/p    Question description Q2 (Qtype: CustomScale [DType: RadioButtons]) SELECT "Code5+" to see Q3
    Element text should be    //*[@id="opl-obj${Dictionary}[Q2]"]/ul/li[5]/label    56+(blue)
    Mouse over    //*[@id="opl-obj${Dictionary}[Q2]"]/ul/li[4]/label
    Click element    //*[@id="opl-obj${Dictionary}[Q2]"]/ul/li[4]/label
    #Validate element attribute.AD    //input[@id='obj${Dictionary}[Q2]2']    checked    true
    Select dropdown.AD    //*[@id="JumpToTOC"]    //*[@id="JumpToTOC"]/option[2]
    Click element    //input[@id='continue']
    Handle alerts and extra pop up
    Page should contain    Text Code Formula
    Page should contain    This Is the End and THANK YOU!
    Click element    //input[@id='goBack']
    sleep    1
    Mouse over    //*[@id="JumpToTOC"]
    #
    Mouse over    //*[@id="opl-obj${Dictionary}[Q2]"]/ul/li[5]/label
    Click element    //*[@id="opl-obj${Dictionary}[Q2]"]/ul/li[5]/label
    Wait until element is visible    //*[@id='opl-obj${Dictionary}[Q3]']/h3
    Element should contain    //*[@id='opl-obj${Dictionary}[Q3]']/h3    Q3. Select the corporate color of your brand (if exists) ( Pls write 'CHECKER' to see QN #4) *
    Input text    //textarea[@id='obj${Dictionary}[Q3]-mi']    CHECKER
    sleep    1
    Element should contain    //*[@id="opl-obj${Dictionary}[Q3]"]/p    Question description Q3
    Element should contain    //p[@id='charNum_obj${Dictionary}[Q3]']    13 characters left. Minimum 3 characters
    Click element    //*[@id="opl-obj${Dictionary}[Q3]"]/select
    sleep    1
    Click element    //*[@id="obj${Dictionary}[Q3]_${Dictionary}[I want select branch, worker, finish time and sam field!]"]
    Validate value (value)    //*[@id="opl-obj${Dictionary}[Q3]"]/select    ${Dictionary}[I want select branch, worker, finish time and sam field!]
    sleep    1
    Wait until element is visible    //*[@id="opl-obj${Dictionary}[c:WorInp]"]/button
    Element should contain    //*[@id="opl-obj${Dictionary}[c:WorInp]"]/h3    RF Worker input (Optional)
    Element should contain    //div[@id='opl-obj${Dictionary}[c:BranSelec]']/h3    RF Branch selection (Mandatory) *
    Element should contain    //div[@id='opl-obj${Dictionary}[c:FinisTime]']/h3    RF Finish time input (Mandatory) *
    Element should contain    //div[@id='opl-obj-${Dictionary}[c:SamField]']/h3    RF Sample field input (Mandatory) *
    #
    Wait until element is visible    //div[@id='opl-obj${Dictionary}[Q4]']/h3
    Element should contain    //div[@id='opl-obj${Dictionary}[Q4]']/p    Question description Q4
    Element should contain    //div[@id='opl-obj${Dictionary}[Q4]']/h3    Q4. Are you familiar with any Mystery Shopping Providers & CX/VoC Researchers? Select YES to see Q7 and enter '22' to see Q9 *
    Element should contain    //div[@id='opl-obj${Dictionary}[Q4]']/div[@class='opl-mi']/p    Numeric value between 1 and 50
    sleep    1
    Click element    //*[@id="opl-obj${Dictionary}[c:BranSelec]"]/div[3]/button    #############
    sleep    1
    Run keyword and ignore error    Click element    //*[@id="ui-multiselect-3-option-2"]
    Run keyword and ignore error    Click element    //div[10]/ul/li[4]/label/span
    #
    Run keyword and ignore error    Click element    //body/div[8]/div/div/input
    Run keyword and ignore error    Click element    //body/div[8]/ul/li[4]
    sleep    1
    Select dropdown.AD    //*[@id="opl-obj${Dictionary}[Q4]"]/select    //*[@id="opl-obj${Dictionary}[Q4]"]/select/option[3]
    Validate value (value)    //*[@id="opl-obj${Dictionary}[Q4]"]/select    ${Dictionary}[YES!]
    sleep    1
    #Validate value (value)    //*[@id="branchselection_TD"]/table    RF Branch 03 [Short name]
    sleep    1
    Wait until element is visible    //div[@id='opl-obj${Dictionary}[Q7]']/h3
    Element should contain    //div[@id='opl-obj${Dictionary}[Q7]']/p    Question description Q7
    Element should contain    //div[@id='opl-obj${Dictionary}[Q7]']/h3    Q7. Are you interested in Checker Solution -> The Professional Platform For Mystery Shopping Providers & CX/VoC Researchers? SELECT 'YES' to see Q8 *
    Click element    id=obj${Dictionary}[Q7]_${Dictionary}[YES]
    #Validate element attribute.AD    //input[@id='obj${Dictionary}[Q7]2']    checked    true
    sleep    1
    Wait until element is visible    //div[@id='opl-obj${Dictionary}[Q8]']/h3
    Element should contain    //div[@id='opl-obj${Dictionary}[Q8]']/p    Question description Q8 ([Type: Text Only])
    Element should contain    //div[@id='opl-obj${Dictionary}[Q8]']/h3    Attach file (optional)
    Element should contain    //div[@id='opl-obj${Dictionary}[Q8]']/p[@class='opl-file-upload']    Select files
    Click element    //div[@id='opl-obj${Dictionary}[Q8]']/p[@class='opl-file-upload']
    Select frame    //*[@id="opl-obj${Dictionary}[Q8]"]/iframe
    Choose file    //*[@id="fileupload"]/div[1]/label/input    ${CURDIR}\\Extra files\\IMAGES\\UsersIcon.png
    Click element    //*[@id="fileupload"]/div[1]/button[1]/span[2]
    Wait until page contains    File uploaded successfully
    Wait until page contains    UsersIcon.png
    sleep    1
    Unselect frame
    #
    Input text    //*[@id="obj${Dictionary}[Q4]-mi"]    22
    Validate value (value)    //*[@id="obj${Dictionary}[Q4]-mi"]    22
    Click element    //textarea[@id='obj${Dictionary}[Q3]-mi']
    sleep    1
    Wait until element is visible    //*[@id='opl-obj${Dictionary}[Q9]']/h3
    Element should contain    //*[@id='opl-obj${Dictionary}[Q9]']/h3    Q9. How familiar are you with
    Element should contain    //*[@id='opl-obj${Dictionary}[Q9]']/p    Question description Q9
    Element should contain    //*[@id='opl-obj${Dictionary}[Q9]']/p[@class='opl-info']    You can only select 2 choice(s) below
    Click element    //*[@id="opl-obj${Dictionary}[Q9]"]/button
    Wait until element is visible    //*[@id="ui-multiselect-obj${Dictionary}[Q9]_${Dictionary}[Extremely familiar]"]
    Click element    //*[@id="ui-multiselect-obj${Dictionary}[Q9]_${Dictionary}[Extremely familiar]"]
    #Validate element attribute.AD    //input[@id='ui-multiselect-obj${Dictionary}[Q9]-option-0']    aria-selected    true
    Click element    //*[@id="ui-multiselect-obj${Dictionary}[Q9]_${Dictionary}[Very familiar]"]
    #Validate element attribute.AD    //input[@id='ui-multiselect-obj${Dictionary}[Q9]-option-4']    aria-selected    true
    Click element    //*[@id="opl-obj${Dictionary}[Q9]"]/button
    sleep    1
    Input text    //input[@id='obj${Dictionary}[Q9]-mi']    ${DD-MM-YY}
    Click element    //input[@id='obj${Dictionary}[Q9]-mi']
    Validate value (value)    //input[@id='obj${Dictionary}[Q9]-mi']    ${DD-MM-YY}
    Click element    //input[@id='continue']
    #
    Wait until element is visible    //*[@id='opl-obj${Dictionary}[Q10]']/h3
    Element should contain    //*[@id='opl-obj${Dictionary}[Q10]']/h3    Q10. How likely is it that you would recommend our brand to a friend or colleague? Select 'Yes' to see Q11 *
    Element should contain    //*[@id='opl-obj${Dictionary}[Q10]']/p    Question description Q10
    Element should contain    //*[@id='opl-obj${Dictionary}[Q10]']/p[@class='opl-info']    You can only select 2 choice(s) below
    sleep    2
    Mouse down    //input[@id='obj${Dictionary}[Q10]_${Dictionary}[Yes+]']
    Click element    //input[@id='obj${Dictionary}[Q10]_${Dictionary}[Yes+]']
    #Validate element attribute.AD    checkbox_obj${Dictionary}[Q10]_${Dictionary}[Yes+]    class    checkboxAnswers checkboxAnswersChecked
    sleep    1
    Input text    //input[@id='obj${Dictionary}[Q10]-mi']    15:04:05
    Validate value (value)    //input[@id='obj${Dictionary}[Q10]-mi']    15:04:05
    Run keyword and ignore error    Click element    //*[@id="ui-datepicker-div"]/div[3]/button[2]
    sleep    2
    #
    Wait until element is visible    //*[@id='opl-obj${Dictionary}[Q11]']/h3
    Element should contain    //*[@id='opl-obj${Dictionary}[Q11]']/h3    Q11. When did you first hear about our brand? (select 'In the last 6 months, In the last 3 years' to see BONUS Q12) *
    Element should contain    //*[@id='opl-obj${Dictionary}[Q11]']/p    Question description Q11
    Element should contain    //*[@id='opl-obj${Dictionary}[Q11]']/p[@class='opl-info']    You can only select 2 choice(s) below
    Click element    obj${Dictionary}[Q11]_${Dictionary}[In the last 6 months]
    sleep    1
    Click element    //*[@id="obj${Dictionary}[Q11]_${Dictionary}[In the last 3 years]"]
    sleep    1
    Input text    //input[@id='obj${Dictionary}[Q11]-mi']    5
    Validate value (value)    //input[@id='obj${Dictionary}[Q11]-mi']    5
    #
    sleep    1
    Wait until element is visible    //*[@id='opl-obj${Dictionary}[Q12]']/h3
    Element should contain    //*[@id='opl-obj${Dictionary}[Q12]']/h3    Q12. Please rate our brand (select '10' to see Q13) *
    Element should contain    //*[@id='opl-obj${Dictionary}[Q12]']/p    Question description Q12
    Element should contain    //*[@id='opl-obj${Dictionary}[Q12]']/div[@class='opl-mi']/p    Numeric value between 10 and 50
    Click element    //*[@id="opl-obj${Dictionary}[Q12]"]/select
    Click element    //*[@id="obj${Dictionary}[Q12]_${Dictionary}[10]"]
    Validate value (value)    //*[@id="opl-obj${Dictionary}[Q12]"]/select    ${Dictionary}[10]
    sleep    1
    #
    Input text    //input[@id='obj${Dictionary}[Q12]-mi']    33
    sleep    1
    Validate value (value)    //input[@id='obj${Dictionary}[Q12]-mi']    33
    Click element    //*[@id="opl-obj${Dictionary}[Q12]"]/select
    sleep    2
    Wait until element is visible    //*[@id='opl-obj${Dictionary}[Q13]']/h3
    Element should contain    //*[@id='opl-obj${Dictionary}[Q13]']/h3    Q13. Would you like to join our email list? (Please enter your email if yes below, or 'robotmailbox01@gmail.com' to see qn group) *
    Element should contain    //*[@id='opl-obj${Dictionary}[Q13]']/p    Question description Q13
    sleep    1
    Click element    //*[@id="opl-obj${Dictionary}[Q13]"]/select
    Wait until element is visible    //*[@id="obj${Dictionary}[Q13]_${Dictionary}[YES]"]
    Click element    //*[@id="obj${Dictionary}[Q13]_${Dictionary}[YES]"]
    Element Should Not Be Visible    //*[@id="obj${Dictionary}[Q13]-placeholder"]/p/table/tbody/tr[3]    #2021
    sleep    1
    Input text    //*[@id="obj${Dictionary}[Q13]-mi"]    robotmailbox@gmail.com
    Validate value (value)    //*[@id="obj${Dictionary}[Q13]-mi"]    robotmailbox@gmail.com
    #    Click element    //span[@id='obj${Dictionary}[Q12]-placeholder']/select
    #    sleep    2
    #    Page should contain    2022
    #    sleep    2
    #    Click element    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2022]']/td[6]/input
    #    sleep    2
    #    Click element    //*[@id="obj${Dictionary}[Q13]-placeholder"]/select
    #    sleep    2
    #    Click element    //*[@id="obj${Dictionary}[Q13]-placeholder"]/select/option[3]
    #    Validate value (value)    //*[@id="obj${Dictionary}[Q13]-placeholder"]/select    ${Dictionary}[YeS]
    #    sleep    2
    #    Click element    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2022]']/td[8]/input
    #    #
    #    Click element    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2021]']/td[6]/input
    #    sleep    2
    #    Click element    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2021]']/td[8]/input
    #    sleep    2
    #    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    #    Wait until page contains    RF QGroup 01
    #    Wait until page contains    c:QGroup01
    #    Validate element attribute.AD    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2022]']/td[6]/input    checked    true
    #    Validate element attribute.AD    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2022]']/td[8]/input    checked    true
    #    Validate element attribute.AD    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2021]']/td[6]/input    checked    true
    #    Validate element attribute.AD    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2021]']/td[8]/input    checked    true
    #    Wait until page contains    *Are you interested in The Professional Platform For Mystery Shopping Providers & CX/VoC Researchers?
    #    Select dropdown.AD    //*[@id="opl-obj${Dictionary}[c:WorInp]"]/button    //*[@id="ui-multiselect-1-option-1"]
    #    Validate value (text)    //*[@id="opl-obj${Dictionary}[c:WorInp]"]/button    RF Worker 01 [Active]
    Input text    //*[@id="opl-obj-${Dictionary}[c:SamField]"]/input    ${RobotTestClient}
    Validate value (value)    //*[@id="opl-obj-${Dictionary}[c:SamField]"]/input    ${RobotTestClient}
    #    Validate element attribute.AD    //select[@id='obj${Dictionary}[Q11]']/option[2]    selected    true
    #    Validate element attribute.AD    //select[@id='obj${Dictionary}[Q11]']/option[3]    selected    true
    click element    obj${Dictionary}[c:FinisTime]
    sleep    2
    click element    1
    click element    //*[@id="ui-datepicker-div"]/div[3]/button[2]
    sleep    1
    #Click element    //*[@id="obj${Dictionary}[c:QGroup01]-placeholder"]/p/table/tbody/tr[4]/td[4]/input
    Click element    //input[@id='continue']
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    sleep    1
    Handle alerts and extra pop up
    Check default qry elements.SD
    Wait until page contains    $[1,question_object_id]
    Page should contain    Q1 You have selected: "SHOW"
    Page should contain    Q3 Free text is: "CHECKER"
    Page should contain    Q9 Date of entered input is: "
    Page should contain    RF Questionnaire [GLOBAL]
    Page should contain    Q1 Your answer code is: "2"
    Page should contain    Q1 Is your ID answer equal to 2? "1"
    Page should contain    Q9 All selected answers are: "(Extremely familiar,Very familiar)"
    Page should contain    Q1 Is the selected answer is "SHOW"? YES
    Page should contain    Q1 Is your ID answer equal to 2? "1"
    Page should contain    Q4 You entered the next free text: "22"
    Page should contain    Q3 Is free text entered? "1"
    Page should contain    en_AU
    Page should contain    In progress
    Page should contain    Grade of the chosen question specified for this review: "50.00"
    Page should contain    Manager 1
    #Page should contain    RF Worker 01 [Active]
    Page should contain    RF Branch 01 [Short name]
    Page should contain    RF Branch 01 [Full name]
    Page should contain    Robot 02 [Full Name]
    Page should contain    RFCheckerCode_02
    Page should contain    RFBrCode-01
    Page should contain    RFQRY-CER-04
    Page should contain    +74564456454
    Page should contain    Please use forgot my password to retrive your password
    Page should contain    Robot 02 [Short Name]
    Page should contain    ${RobotTestClient}
    Page should contain    Zelena street 45A, 44 345
    Page should contain    Robot city 01
    Page should contain    07:00 - 18:00
    Page should contain    ${found ID}
    Page should contain    RFQRY-CER-04
    Page should contain    robotmailbox01@gmail.com,robotmailbox02@gmail.com
    Page should contain    What Is a Content Brief?
    Page should contain    +380670118780
    Page should contain    This Is the End and THANK YOU!
    Page should contain    ${RF Project}
    Page should contain    ${Project ID}
    #timer
    ${output}    Get text    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[9]/td[3]/span
    Should Match Regexp    ${output}    ^\\d{10}$    # ^\\d{10}$ - Six numbers and nothing more    # \\d{6} - Output contains six numbers
    ${output}    Get text    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[10]/td[3]
    Should Match Regexp    ${output}    ^\\d{10}$
    ${output}    Get text    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[13]/td[3]
    Should Match Regexp    ${output}    ^\\d{10}$
    ${output}    Get text    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[14]/td[3]
    Should Match Regexp    ${output}    ^\\d{10}$
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[8]/td[3]    0
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[16]/td[3]    ${found order ID}
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[7]/td[3]/span    ${test order description}
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[2]/td[3]/span/p    ${test order description}
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[6]/td[3]    4.00
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[3]/td[3]    ${DD.MM.YY}
    Element should contain    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[11]/td[3]/span    ${DD.MM.YY}
    Element should contain    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[4]/td[3]/span    ${order start_time}:00 - ${order end_time}:00
    Element should contain    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[12]/td[3]/span    ${DD.MM.YY}
    Element text should be    //*[@id="obj${Dictionary}[c:Text03]-placeholder"]/div/table/tbody/tr[3]/td[3]    Manager 1
    Element text should be    //*[@id="obj${Dictionary}[c:Text03]-placeholder"]/div/table/tbody/tr[4]/td[3]    Autotest-YES
    Element text should be    //*[@id="obj${Dictionary}[c:Text03]-placeholder"]/div/table/tbody/tr[2]/td[3]    ${Dictionary}[Manager 1]
    Element text should be    //*[@id="obj${Dictionary}[c:Text03]-placeholder"]/div/table/tbody/tr[10]/td[3]    ${ReviewID}
    Page should contain element    //canvas
    #
    ${random string}=    Generate Random String    8    [NUMBERS]
    Run keyword and ignore error    Input text    //*[@id="purchase_PurchaseInvoiceNumber"]    RF-${random string}
    Run keyword and ignore error    Input text    //*[@id="purchase_PurchasePayment"]    2
    click element    ${finish action}
    Run keyword and ignore error    Click element    //*[@id="continueAfterAttachments"]

Get Shopper property ID. AD
    [Arguments]    ${Property name}
    go to.AD    ${URL}/checker-props.php?page_var_divide_recordsPerPage=500&page_var_divide_curPage=1
    Log to console    Go to ${URL}/checker-props.php and search "${Property name}"
    Wait until page contains element    //button[@class='btn-input']
    ${ItemIsVisible?}    Run keyword and return status    Page should contain    ${Property name}
    Run Keyword If    ${ItemIsVisible?}==False    click element    //*[@id="big_tedit_wrapping_table"]/tbody/tr[1]/td/table/tbody/tr/td/button
    Run Keyword If    ${ItemIsVisible?}==False    Add/Update Shopper property.AD    ${Property name}
    Run Keyword If    ${ItemIsVisible?}==True    Get ID    id="table_rows"    ${Property name}    1    2
    go to    ${URL}/checker-prop-values.php?prop=${found ID}
    Set to dictionary    ${Dictionary}    ${found name}=${found ID}
    ${act id}    get text    //*[@id="table_rows"]/tbody/tr[1]/td[1]
    ${act name}    get text    //*[@id="table_rows"]/tbody/tr[1]/td[2]
    Set to dictionary    ${Dictionary}    ${act name}=${act id}
    ${act id}    get text    //*[@id="table_rows"]/tbody/tr[2]/td[1]
    ${act name}    get text    //*[@id="table_rows"]/tbody/tr[2]/td[2]
    Set to dictionary    ${Dictionary}    ${act name}=${act id}
    Log to console    ${Dictionary}

Validate element attribute.AD
    [Arguments]    ${element locator}    ${attribute}    ${expected result}
    Set focus to element    ${element locator}
    #Mouse down    ${element locator}
    ${act status}    Get element attribute    ${element locator}    ${attribute}
    Should Be Equal As Strings    ${act status}    ${expected result}
    Log to console    Element (locator="${element locator}") has attribute ${attribute}="${expected result}"

Check filled review (GLOBAL).SD
    Check default qry elements.SD
    Get ID from ad bar.AD    CritID=    &cc
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    #Click element    //input[@id='goBack']
    #    Page should not contain element    //span[@id='obj${Dictionary}[Q1]-placeholder']
    #    Page should contain    Hello,
    #    Page should contain    "Robot 02 [Full Name]"
    #    Page should contain    Qry Name: ${Robot q-ry}
    #    Page should contain    Client Name:
    #    Page should contain    Full branch name:
    #    Page should contain    ${RobotTestClient}
    #    Page should contain    We're conducting research on the different question types Checker Soft has to offer. This will help us make improvements to the existing tool and prioritize new features. The survey should only take a few minutes, and your responses are completely anonymous. You can only take the survey once, but you can edit your responses until the survey is closed. Questions marked with an asterisk (*) are required. If you have any questions about the survey, please email us:
    #    Page should contain    We really appreciate your input!
    #    Page should contain    checker-soft@email.com
    #    Element Should Be Visible    //img[contains(@src, "RFchecker.gif")]
    #    Element Should Not Be Visible    //span[@id='obj${Dictionary}[Q1]-placeholder']
    #    Click element    //input[@id='continue']
    Check default qry elements.SD
    Page should contain    Q1
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q2]-placeholder']
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q3]-placeholder']
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q4]-placeholder']
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q7]-placeholder']
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q8]-placeholder']
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q9]-placeholder']
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q10]-placeholder']
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q11]-placeholder']
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q12]-placeholder']
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q13]-placeholder']
    #
    Element Should Be Visible    //*[@id="obj${Dictionary}[c:WorInp]-placeholder"]/span[3]/button
    Element Should Be Visible    //*[@id="branchselection_TD"]/table/tbody/tr/td/span/button
    #
    Element Should Be Visible    //span[@id='obj${Dictionary}[Q1]-placeholder']
    Element should contain    //*[@id="obj${Dictionary}[Q1]-placeholder"]/span[1]    *Show text codes?
    Element text should be    //span[@id='obj${Dictionary}[Q1]-placeholder']/p[@class='max-multiple-msg']    You can only select 1 choice(s) below
    Element text should be    //span[@id='obj${Dictionary}[Q1]-placeholder']/span[@class='tedit-desc']    Question description Q1 (Qtype: Custom [DType: Check boxes])
    #Click element    checkbox_obj${Dictionary}[Q1]_${Dictionary}[SHOW]
    Validate element attribute.AD    checkbox_obj${Dictionary}[Q1]_${Dictionary}[SHOW]    class    checkboxAnswers checkboxAnswersChecked
    sleep    1
    #Click element    //input[@id='obj${Dictionary}[Q2]2']
    #Select dropdown.AD    //*[@id="JumpToTOC"]    //*[@id="JumpToTOC"]/option[2]
    #Click element    //input[@id='continue']
    #Page should contain    Text Code Formula
    #Click element    //input[@id='goBack']
    sleep    1
    Wait until element is visible    //span[@id='obj${Dictionary}[Q2]-placeholder']
    Element should contain    //*[@id="obj${Dictionary}[Q2]-placeholder"]/span[1]    *What is your age?
    Element should contain    //*[@id="obj${Dictionary}[Q2]-placeholder"]/span[2]    Question description Q2 (Qtype: CustomScale [DType: RadioButtons])
    #Click element    //input[@id='obj${Dictionary}[Q2]4']
    Validate element attribute.AD    //input[@id='obj${Dictionary}[Q2]4']    checked    true
    sleep    1
    Mouse over    //*[@id="JumpToTOC"]
    #Click element    //input[@id='goBack']
    Wait until element is visible    //span[@id='obj${Dictionary}[Q3]-placeholder']
    Element should contain    //*[@id="obj${Dictionary}[Q3]-placeholder"]/span[1]    *Select the corporate color of your brand (if exists)
    #Input text    //textarea[@id='obj${Dictionary}[Q3]-mi']    CHECKER
    Element should contain    //*[@id="obj${Dictionary}[Q3]-placeholder"]/span[2]    Question description Q3
    #Select dropdown.AD    //span[@id='obj${Dictionary}[Q3]-placeholder']/select    //*[@id="obj${Dictionary}[Q3]-placeholder"]/select/option[2]
    Validate value (value)    //span[@id='obj${Dictionary}[Q3]-placeholder']/select    ${Dictionary}[I want select branch, worker, finish time and sam field!]
    sleep    1
    Wait until element is visible    //*[@id="obj${Dictionary}[c:WorInp]-placeholder"]/span[3]/button
    Wait until element is visible    //*[@id="branchselection_TD"]/table/tbody/tr/td/span/button
    Wait until element is visible    //*[@id="obj${Dictionary}[c:FinisTime]"]
    Wait until element is visible    //*[@id="obj${Dictionary}[Q4]-placeholder"]/span[1]
    Element should contain    //*[@id="obj${Dictionary}[Q4]-placeholder"]/span[2]    Question description Q4
    Element should contain    //*[@id="obj${Dictionary}[Q4]-placeholder"]/span[1]    *Are you familiar with any Mystery Shopping Providers & CX/VoC Researchers?
    sleep    1
    Execute JavaScript    window.document.getElementById("branchselection_TD").scrollIntoView(true)
    #Validate element attribute.AD    //input[@id='obj${Dictionary}[Q2]2']    checked    true
    #Click element    //*[@id="branchselection_TD"]/table    #############
    #Select dropdown.AD    //span[@id='obj${Dictionary}[Q4]-placeholder']/select    //*[@id="obj${Dictionary}[Q4]-placeholder"]/select/option[3]
    Validate value (value)    //span[@id='obj${Dictionary}[Q4]-placeholder']/select    ${Dictionary}[YES!]
    #Validate value (value)    //*[@id="branchselection_TD"]/table    RF Branch 03 [Short name]
    sleep    1
    #Click element    //textarea[@id='obj${Dictionary}[Q3]-mi']
    Wait until element is visible    //*[@id="obj${Dictionary}[Q7]-placeholder"]/span[1]
    Element should contain    //*[@id="obj${Dictionary}[Q7]-placeholder"]/span[2]    Question description Q7
    Element should contain    //*[@id="obj${Dictionary}[Q7]-placeholder"]/span[1]    Are you interested in Checker Solution -> The Professional Platform For Mystery Shopping Providers & CX/VoC Researchers?
    #Click element    //input[@id='obj${Dictionary}[Q7]2']
    Validate element attribute.AD    //input[@id='obj${Dictionary}[Q7]2']    checked    true
    sleep    3
    Wait until element is visible    //*[@id="obj${Dictionary}[Q8]-placeholder"]/span[1]
    Element should contain    //*[@id="obj${Dictionary}[Q8]-placeholder"]/span[2]    Question description Q8 ([Type: Text Only])
    Element should contain    //*[@id="obj${Dictionary}[Q8]-placeholder"]/span[1]    Attach file (optional)
    Page should contain    Select files
    Input text    //*[@id="obj${Dictionary}[Q4]-mi"]    22
    Validate value (value)    //*[@id="obj${Dictionary}[Q4]-mi"]    22
    #Click element    //textarea[@id='obj${Dictionary}[Q3]-mi']
    sleep    1
    Wait until element is visible    //*[@id="obj${Dictionary}[Q9]-placeholder"]/span[1]
    Element should contain    //*[@id="obj${Dictionary}[Q9]-placeholder"]/span[1]    *How familiar are you with
    Element should contain    //*[@id="obj${Dictionary}[Q9]-placeholder"]/span[2]    Question description Q9
    sleep    1
    Element should contain    //*[@id="obj${Dictionary}[Q9]-placeholder"]/p    You can only select 2 choice(s) below
    #Click element    //*[@id="obj${Dictionary}[Q9]-placeholder"]/button
    Wait until element is visible    //input[@id='ui-multiselect-obj${Dictionary}[Q9]-option-0']
    #Click element    //input[@id='ui-multiselect-obj${Dictionary}[Q9]-option-0']
    #Click element    //input[@id='ui-multiselect-obj${Dictionary}[Q9]-option-4']
    Validate element attribute.AD    //input[@id='ui-multiselect-obj${Dictionary}[Q9]-option-0']    aria-selected    true
    Validate element attribute.AD    //input[@id='ui-multiselect-obj${Dictionary}[Q9]-option-4']    aria-selected    true
    #Click element    //*[@id="obj${Dictionary}[Q9]-placeholder"]/button
    sleep    4
    #Input text    //input[@id='obj${Dictionary}[Q9]-mi']    ${DD-MM-YY}
    Validate value (value)    //input[@id='obj${Dictionary}[Q9]-mi']    ${DD-MM-YY}
    #Click element    //*[@id="ui-datepicker-div"]/div[2]/button[2]
    sleep    2
    #
    Wait until element is visible    //*[@id="obj${Dictionary}[Q10]-placeholder"]/span[1]
    Element should contain    //*[@id="obj${Dictionary}[Q10]-placeholder"]/span[1]    *How likely is it that you would recommend our brand to a friend or colleague?
    Element should contain    //*[@id="obj${Dictionary}[Q10]-placeholder"]/span[2]    Question description Q10
    sleep    2
    Mouse down    checkbox_obj${Dictionary}[Q10]_${Dictionary}[Yes+]
    #Click element    checkbox_obj${Dictionary}[Q10]_${Dictionary}[Yes+]
    Validate element attribute.AD    checkbox_obj${Dictionary}[Q10]_${Dictionary}[Yes+]    class    checkboxAnswers checkboxAnswersChecked
    sleep    1
    Element should contain    //*[@id="obj${Dictionary}[Q10]-placeholder"]/p    You can only select 2 choice(s) below
    #Input text    //input[@id='obj${Dictionary}[Q10]-mi']    15:04:05
    Validate value (value)    //input[@id='obj${Dictionary}[Q10]-mi']    15:04:05
    Run keyword and ignore error    Click element    //*[@id="ui-datepicker-div"]/div[3]/button[2]
    sleep    2
    #
    Wait until element is visible    //*[@id="obj${Dictionary}[Q11]-placeholder"]/span[1]
    Element should contain    //*[@id="obj${Dictionary}[Q11]-placeholder"]/span[1]    *When did you first hear about our brand?
    Element should contain    //*[@id="obj${Dictionary}[Q11]-placeholder"]/span[2]    Question description Q11
    sleep    2
    Element should contain    //*[@id="obj${Dictionary}[Q11]-placeholder"]/p    You can only select 2 choice(s) below
    #Click element    //select[@id='obj${Dictionary}[Q11]']/option[2]
    #Click element    //select[@id='obj${Dictionary}[Q11]']/option[3]
    sleep    1
    #Input text    //input[@id='obj${Dictionary}[Q11]-mi']    5
    Validate value (value)    //input[@id='obj${Dictionary}[Q11]-mi']    5
    #
    sleep    2
    Wait until element is visible    //*[@id="obj${Dictionary}[Q12]-placeholder"]/span[1]
    Element should contain    //*[@id="obj${Dictionary}[Q12]-placeholder"]/span[1]    *Please rate our brand
    Element should contain    //*[@id="obj${Dictionary}[Q12]-placeholder"]/span[2]    Question description Q12
    #Click element    //*[@id="obj${Dictionary}[Q12]-placeholder"]/select/option[12]
    Validate value (text)    //*[@id="obj${Dictionary}[Q12]-placeholder"]/select/option[12]    10
    sleep    2
    #
    #Click element    //input[@id='obj${Dictionary}[Q11]-mi']
    Set focus to element    //input[@id='obj${Dictionary}[Q12]-mi']
    #Click element    //input[@id='obj${Dictionary}[Q12]-mi']
    #Input text    //input[@id='obj${Dictionary}[Q12]-mi']    10
    sleep    2
    Validate value (value)    //input[@id='obj${Dictionary}[Q12]-mi']    10
    #Click element    //span[@id='obj${Dictionary}[Q12]-placeholder']/select
    sleep    2
    Wait until element is visible    //*[@id="obj${Dictionary}[Q13]-placeholder"]/span[1]
    Element should contain    //*[@id="obj${Dictionary}[Q13]-placeholder"]/span[1]    *Would you like to join our email list?
    Element should contain    //*[@id="obj${Dictionary}[Q13]-placeholder"]/span[2]    Question description Q13
    sleep    1
    Element Should Not Be Visible    //*[@id="obj${Dictionary}[Q13]-placeholder"]/p/table/tbody/tr[3]    #2021
    sleep    1
    #Input text    //*[@id="obj${Dictionary}[Q13]-mi"]    robotmailbox01@gmail.com
    sleep    1
    Validate value (value)    //*[@id="obj${Dictionary}[Q13]-mi"]    robotmailbox01@gmail.com
    #Click element    //span[@id='obj${Dictionary}[Q12]-placeholder']/select
    sleep    1
    Page should contain    2022
    sleep    1
    #Click element    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2022]']/td[6]/input
    sleep    1
    sleep    1
    #Click element    //*[@id="obj${Dictionary}[Q13]-placeholder"]/select
    Click element    //*[@id="obj${Dictionary}[Q13]-placeholder"]/select/option[3]
    Validate value (value)    //*[@id="obj${Dictionary}[Q13]-placeholder"]/select    ${Dictionary}[YeS]
    sleep    2
    #Click element    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2022]']/td[8]/input
    #
    #Click element    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2021]']/td[6]/input
    sleep    1
    #Click element    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2021]']/td[8]/input
    sleep    1
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Wait until page contains    RF QGroup 01
    Wait until page contains    c:QGroup01
    Validate element attribute.AD    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2022]']/td[6]/input    checked    true
    Validate element attribute.AD    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2022]']/td[8]/input    checked    true
    Validate element attribute.AD    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2021]']/td[6]/input    checked    true
    Validate element attribute.AD    //table[@class='noanswer_obj${Dictionary}[c:QGroup01]']/tbody/tr[@class='noanswer_mi_obj${Dictionary}[c:QGroup01]_${Dictionary}[2021]']/td[8]/input    checked    true
    #Click element    //input[@id='goBack']
    Wait until page contains    *Are you interested in The Professional Platform For Mystery Shopping Providers & CX/VoC Researchers?
    sleep    2
    #Select dropdown.AD    //*[@id="obj${Dictionary}[c:WorInp]-placeholder"]/span[3]/button    //*[@id="obj${Dictionary}[c:WorInp]-placeholder"]/span[3]/button/span[2]
    Validate value (text)    //*[@id="obj${Dictionary}[c:WorInp]-placeholder"]/span[3]/button    RF Worker 01 [Active]
    #Input text    //input[@id='obj${Dictionary}[c:SamField]']    ${RobotTestClient}
    Validate value (value)    //input[@id='obj${Dictionary}[c:SamField]']    ${RobotTestClient}
    Validate element attribute.AD    //select[@id='obj${Dictionary}[Q11]']/option[2]    selected    true
    Validate element attribute.AD    //select[@id='obj${Dictionary}[Q11]']/option[3]    selected    true
    #Click element    //*[@id="obj${Dictionary}[c:FinisTime]"]
    sleep    2
    #Click element    //*[@id="ui-datepicker-div"]/div[3]/button[1]
    #Click element    //*[@id="ui-datepicker-div"]/div[3]/button[2]
    sleep    1
    #Click element    //*[@id="obj${Dictionary}[c:QGroup01]-placeholder"]/p/table/tbody/tr[4]/td[4]/input
    Click element    //input[@id='continue']
    #    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    sleep    1
    Check default qry elements.SD
    Wait until page contains    $[1,question_object_id]
    Page should contain    Q1 You have selected: "SHOW"
    Page should contain    Q3 Free text is: "CHECKER"
    Page should contain    Q9 Date of entered input is: "
    Page should contain    RF Questionnaire [GLOBAL]
    Page should contain    Q1 Your answer code is: "2"
    Page should contain    Q1 Is your ID answer equal to 2? "1"
    Page should contain    Q9 All selected answers are: "(Extremely familiar,Very familiar)"
    Page should contain    Q1 Is the selected answer is "SHOW"? YES
    Page should contain    Q1 Is your ID answer equal to 2? "1"
    Page should contain    Q4 You entered the next free text: "22"
    Page should contain    Q3 Is free text entered? "1"
    Page should contain    en_AU
    Page should contain    In progress
    Page should contain    Grade of the chosen question specified for this review: "50.00"
    Page should contain    Manager 1
    Page should contain    RF Worker 01 [Active]
    Page should contain    RF Branch 01 [Short name]
    Page should contain    RF Branch 01 [Full name]
    Page should contain    Robot 02 [Full Name]
    Page should contain    RFCheckerCode_02
    Page should contain    RFBrCode-01
    Page should contain    RFQRY-CER-04
    Page should contain    +74564456454
    Page should contain    Please use forgot my password to retrive your password
    Page should contain    Robot 02 [Short Name]
    Page should contain    ${RobotTestClient}
    Page should contain    Zelena street 45A, 44 345
    Page should contain    Robot city 01
    Page should contain    07:00 - 18:00
    Page should contain    ${found ID}
    Page should contain    RFQRY-CER-04
    Page should contain    robotmailbox01@gmail.com,robotmailbox02@gmail.com
    Page should contain    What Is a Content Brief?
    Page should contain    +380670118780
    Page should contain    This Is the End and THANK YOU!
    Page should contain    ${RF Project}
    Page should contain    ${Project ID}
    Page should contain element    //canvas
    #timer
    ${output}    Get text    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[9]/td[3]/span
    Should Match Regexp    ${output}    ^\\d{10}$    # Six numbers and nothing more    \\d{6} # Output contains six numbers
    ${output}    Get text    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[10]/td[3]
    Should Match Regexp    ${output}    ^\\d{10}$
    ${output}    Get text    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[13]/td[3]
    Should Match Regexp    ${output}    ^\\d{10}$
    ${output}    Get text    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[14]/td[3]
    Should Match Regexp    ${output}    ^\\d{10}$
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[8]/td[3]    0
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[16]/td[3]    ${found order ID}
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[7]/td[3]/span    ${test order description}
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[2]/td[3]/span/p    ${test order description}
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[6]/td[3]    4.00
    Element text should be    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[3]/td[3]    ${DD.MM.YY}
    Element should contain    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[11]/td[3]/span    ${DD.MM.YY}
    Element should contain    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[4]/td[3]/span    ${order start_time}:00 - ${order end_time}:00
    Element should contain    //*[@id="obj${Dictionary}[c:Text06]-placeholder"]/div/table/tbody/tr[12]/td[3]/span    ${DD.MM.YY}
    Element text should be    //*[@id="obj${Dictionary}[c:Text03]-placeholder"]/div/table/tbody/tr[3]/td[3]    Manager 1
    Element text should be    //*[@id="obj${Dictionary}[c:Text03]-placeholder"]/div/table/tbody/tr[4]/td[3]    Autotest-YES
    Element text should be    //*[@id="obj${Dictionary}[c:Text03]-placeholder"]/div/table/tbody/tr[2]/td[3]    ${Dictionary}[Manager 1]
    Element text should be    //*[@id="obj${Dictionary}[c:Text03]-placeholder"]/div/table/tbody/tr[10]/td[3]    ${ReviewID}
    #

Begin scorecard (OPlogic=no).SD
    [Arguments]    ${Add info1}    ${Add info2}    ${Free text}    ${Inter message}    ${Attach files?}
    [Timeout]
    Log To Console    Starting the scorecard...selecting the answers and additional info...
    Run keyword and ignore error    Execute Javascript    window.document.getElementById("accept").scrollIntoView(true);
    Run keyword and ignore error    Click element    //tr[${index}]/td[${Begin scorecard ID}]/form/input[1]
    ${brif visible?}    Run keyword and return status    page should contain    (2 min read)
    Run keyword if    "${brif visible?}"=="True"    Check brif.SD
    #
    ${Iframe}    set variable    questionnaire
    Set global variable    ${Iframe}
    Run keyword and ignore error    select frame    ${Iframe}
    #
    ${Get text}    get text    //form[@id='crit_form']/div[@id='question-area']/span[@class='tedit-desc'][1]
    ${Var 2}    Fetch From Left    ${Get text}    )
    ${Review Number}    Fetch From Right    ${Var 2}    :
    ${Review Number}    Strip String    ${Review Number}
    log to console    Review Number: [${Review Number}]
    Set global variable    ${Review Number}
    Get ID from ad bar.AD    CritID=    &cc
    Run keyword if    "${Attach files?}"=="YES"    Attach files.SD
    #######
    Execute JavaScript    window.scrollTo(1000, document.body.scrollHeight)
    #Run keyword if    "${Attach files?}"=="YES"    Page should contain element    //input[@id='Uploadfiles']
    #    Run keyword if    //select[@id='AltLangID']
    #    Run keyword if    Page should contain element    //*[@id="crit_form"]/div[2]/center[1]/table/tbody/tr/td/table
    #    Run keyword if    Page should contain element    //img[contains(@src, "images\\arrows\\bullet_green.png")]
    #    Run keyword if    Page should contain element    //span[@id='cntdwn']
    ### checking of free text boxes - opt and mand
    ${Iframe}    set variable    questionnaire
    Set global variable    ${Iframe}
    Run keyword and ignore error    select frame    ${Iframe}
    Run keyword and ignore error    click element    //*[@id="refresh_form"]
    Run keyword and ignore error    click element    //*[@id="crit_form"]
    Run keyword and ignore error    click element    //*[@id="question-area"]
    sleep    2
    Wait until page contains    ${Q1 TEXT}    8
    #
    Element text should be    //*[@id="charNum_obj${Q1 ID}"]    15 characters left. Minimum 3 characters
    Element text should be    //*[@id="charNum_obj${Q2 ID}"]    50 characters left. Minimum 10 characters
    Run keyword if    "${Attach files?}"=="YES"    Input text    //*[@id="obj${Q1 ID}-mi"]    *
    Run keyword if    "${Attach files?}"=="YES"    Click element    //*[@id="continue"]
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    Text too short (minimum length: 3)
    Run keyword if    "${Attach files?}"=="YES"    Element text should be    //*[@id="charNum_obj${Q1 ID}"]    14 characters left. Minimum 3 characters
    Run keyword if    "${Attach files?}"=="YES"    Input text    //*[@id="obj${Q2 ID}-mi"]    *
    Run keyword if    "${Attach files?}"=="YES"    Click element    //*[@id="continue"]
    Run keyword if    "${Attach files?}"=="YES"    Element text should be    //*[@id="charNum_obj${Q2 ID}"]    49 characters left. Minimum 10 characters
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    Text too short (minimum length: 10)
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains element    //input[@id='obj${Q3 ID}-mi']
    Run keyword if    "${Attach files?}"=="YES"    Run keyword and ignore error    set focus to element    //input[@id='obj${Q3 ID}-mi']
    Run keyword if    "${Attach files?}"=="YES"    Click element    //input[@id='obj${Q3 ID}-mi']
    Run keyword if    "${Attach files?}"=="YES"    Input text    //input[@id='obj${Q3 ID}-mi']    200
    Run keyword if    "${Attach files?}"=="YES"    Click element    //*[@id="continue"]
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    Value isn't in the allowed range
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    One field or more were not filled correctly.
    Run keyword if    "${Attach files?}"=="YES"    Wait until page contains    Please fix according to the instructions in red.
    #
    # Entering score data-1ST QUESTION -----------------------------------
    Page should contain    Question description Q1
    Page should contain    ${Q1 TEXT}
    Log Source
    #Simulate Event    Set focus to element    //*[@id="obj${Q1 ID}-mi"]
    Run keyword and ignore error    select frame    ${Iframe}
    sleep    1
    Input text    //*[@id="obj${Q1 ID}-mi"]    ***
    sleep    1
    Page should contain    15-25(green)
    Page should contain    26-35(black)
    Page should contain    36-45(red)
    Page should contain    46-55(yellow)
    Page should contain    56+(blue)
    # Check hidden qn (Q4) is not visible
    Element Should Not Be Visible    //select[@id='obj${Q4 ID}']/option[3]
    Element Should Not Be Visible    //select[@id='obj${Q4 ID}']/option[4]
    Element Should Not Be Visible    //select[@id='obj${Q4 ID}']
    Element Should Not Be Visible    //*[@id="obj${Q4 ID}-placeholder"]/span[1]
    Element Should Not Be Visible    //*[@id="obj${Q4 ID}-placeholder"]/span[2]
    Element Should Not Be Visible    //*[@id="obj${Q4 ID}-placeholder"]/p
    Run keyword and ignore error    Page should contain element    //*[@id="obj${Q1 ID}-critical"]
    Run keyword and ignore error    click element    //*[@id="obj${Q1 ID}-critical"]
    Run keyword and ignore error    select frame    ${Iframe}
    sleep    1
    Click element    obj${Q1 ID}3
    Run keyword and ignore error    Click element    obj${Q1 ID}3
    #Double Click Element    obj${Q1 ID}3
    # Entering score data-2ND QUESTION -----------------------------------
    Page should contain    ${Q2 TEXT}
    #    Wait until page contains    Question description Q2    10
    sleep    1
    Run keyword and ignore error    set focus to element    obj${Q1 ID}3
    Run keyword and ignore error    select frame    ${Iframe}
    Select Radio button    obj${Q2 ID}    ${Q2 answer ID}
    #Execute JavaScript    window.document.getElementById("obj${Q2 ID}-mi").scrollIntoView(true)
    sleep    1
    Wait until element is visible    //textarea[@id='obj${Q2 ID}-mi']    3
    #Wait until element is visible    //input[@id='obj${Q2 ID}2']
    click element    //input[@id='obj${Q2 ID}2']
    Run keyword and ignore error    set focus to element    //textarea[@id='obj${Q2 ID}-mi']
    #Execute JavaScript    window.document.getElementById("obj${Q2 ID}-mi").scrollIntoView(true)
    sleep    1
    Click Element    //textarea[@id='obj${Q2 ID}-mi']
    sleep    1
    Input text    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    Run keyword if    ${preprod?}    Input text    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    sleep    2
    Validate element attribute.AD    //input[@id='obj${Q2 ID}2']    checked    true
    Run keyword and ignore error    Click element    //*[@id="continue"]    //*[@id="obj1650681"]
    #Entering score data-3RD QUESTION -----------------------------------
    Page should contain    ${Q3 TEXT}
    Page should contain    Question description Q3    3
    Run keyword and ignore error    set focus to element    obj${Q3 ID}3
    sleep    1
    Run keyword and ignore error    select frame    ${Iframe}
    Select Radio button    obj${Q3 ID}    ${Q3 answer ID}
    sleep    1
    Double Click Element    obj${Q3 ID}3
    Click element    //input[@id='obj${Q3 ID}-mi']
    Click element    //*[@id="continue"]
    Input text    //input[@id='obj${Q3 ID}-mi']    ${Add info2}
    Run keyword if    ${preprod?}    sleep    3
    Run keyword if    ${preprod?}    Input text    //input[@id='obj${Q3 ID}-mi']    ${Add info2}
    Validate value (text)    //*[@id="obj${Q1 ID}-mi"]    ***
    Validate value (value)    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    Validate value (value)    //input[@id='obj${Q3 ID}-mi']    ${Add info2}
    Validate element attribute.AD    //input[@id='obj${Q1 ID}3']    checked    true
    Validate element attribute.AD    //input[@id='obj${Q2 ID}2']    checked    true
    Validate element attribute.AD    //input[@id='obj${Q3 ID}3']    checked    true
    #Entering score data-4 QUESTION -----------------------------------
    Validate element attribute.AD    //input[@id='obj${Q2 ID}2']    checked    true
    Click element    //*[@id="continue"]
    Wait until page contains    Bonus qn description    10
    Page should contain    ${Q4 TEXT}
    Run keyword and ignore error    select frame    ${Iframe}
    Click element    //select[@id='obj${Q4 ID}']
    sleep    1
    Page should contain element    //*[@id="obj${Q4 ID}"]/option[3]
    Click element    //*[@id="obj${Q4 ID}"]/option[3]
    sleep    1
    Click element    //*[@id="obj${Q4 ID}"]/option[4]
    sleep    1
    #
    #    ${Actual answer}    Get text    //textarea[@id='obj${Q1 ID}-mi']
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    set focus to element    //textarea[@id='obj${Q1 ID}-mi']
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    1
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Input text    //textarea[@id='obj${Q1 ID}-mi']    ***
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    2
    #    #
    #    ${Actual answer}    Get text    //textarea[@id='obj${Q2 ID}-mi']
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Click Element    //textarea[@id='obj${Q2 ID}-mi']
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    1
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Input text    //textarea[@id='obj${Q2 ID}-mi']    ${Add info1}
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    2
    #    #    ${preprod?} and "${Actual answer}"=="${empty}"
    #    ${Actual answer}    Get text    //input[@id='obj${Q3 ID}-mi']
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Click Element    //input[@id='obj${Q3 ID}-mi']
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    2
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    Input text    //input[@id='obj${Q3 ID}-mi']    ${Add info2}
    #    Run keyword if    ${preprod?} and "${Actual answer}"=="${empty}"    sleep    3
    #END OF questions
    sleep    1
    Validate element attribute.AD    //*[@id="obj${Q4 ID}"]/option[3]    selected    true
    Validate element attribute.AD    //*[@id="obj${Q4 ID}"]/option[4]    selected    true
    ####
    ${free text box visible?}    Run keyword and return status    page should contain element    //textarea[@id='CritFreeText']
    Run keyword if    "${free text box visible?}"=="True"    Input text    //textarea[@id='CritFreeText']    ${Free text}
    ${free text box visible?}    Run keyword and return status    page should contain element    //textarea[@id='message_to_operation']
    Run keyword if    "${free text box visible?}"=="True"    Input text    //textarea[@id='message_to_operation']    ${Inter message}
    Log to console    Entering the answers and click "Submit button"
    Run keyword and ignore error    select frame    ${Iframe}
    Run keyword and ignore error    Click element    //*[@id="continue"]
    #reload page
    Check errors on page [-1]
    [Teardown]

Manage passed certificates.AD
    go to.AD    ${URL}/manage-certificates.php?CertificateID=${CertID}
    #Wait until page contains
    log to console    Validating authorized shoppers...
    @{elements}    Get List Items    //*[@id="side_menu"]/tbody/tr/td[3]/center/form/table/tbody/tr/td[3]/select
    #iterate for each row
    FOR    ${element}    IN    @{elements}
        Log to console    Authorized assessor --> "${element}"
        Log    '${element}' vs '${RobotTestShopper 02}'
    END
    Return from keyword if    '${element}'=='${empty}'
    log to console    Removing the access ...
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/center/form/table/tbody/tr/td[3]/select/option
    Log to console    "${RobotTestShopper 02}" has an auto access
    Check errors on page [-1]
    #Click element    //*[@id="side_menu"]/tbody/tr/td[3]/center/form/table/tbody/tr/td[1]
    Scroll element into view    //*[contains(text(), '${RobotTestShopper 02}')]
    select from list by label    //*[@id="side_menu"]/tbody/tr/td[3]/center/form/table/tbody/tr/td[3]/select    Robot 02 [Full Name] (Robot 02 [Short Name])
    sleep    1
    Click element    //table[@id='side_menu']/tbody/tr/td[@class='middle-right']/center/form/table/tbody/tr/td[2]/input[1]
    Click Save/Add/Delete/Cancel button.AD
    ${actual value}    Get text    //*[@id="side_menu"]/tbody/tr/td[3]/center/form/table/tbody/tr/td[1]/select
    Should contain    ${actual value}    Robot 02 [Full Name] (Robot 02 [Short Name])
    Log to console    Access for "${RobotTestShopper 02}" has been removed
    [Return]    done

Check System UP-Time
    [Arguments]    ${page}    ${file name}    ${loop ID}    ${sheet arg}
    [Timeout]    #
    ${MM.DD.YY.Kyiv+Israel}    Get Current Date    result_format=%m.%d.%Y %H:%M
    ${MM.DD.YY.UTC}    Get Current Date    UTC    result_format=%H:%M
    ${MM.DD.YY.Japan}    Get Current Date    UTC    +9 hours    result_format=%H:%M
    ${MM.DD.YY.India}    Get Current Date    UTC    +5 hours 30 minutes    result_format=%H:%M
    ${start} =    Get Current Date
    ${duration}=    Set variable    *
    go to    ${URL}${page}
    Wait Until Page Contains element    //input[@id='do_login']
    ${stop} =    Get Current Date
    ${duration}=    Subtract Date From Date    ${stop}    ${start}
    #    Run Keyword And Warn On Failure
    Log to console    Uptime = "${duration}" ("sec.ms") [${URL}${page}]
    Should Be True    ${duration} < ${25}    # will fail if Up-time > 25 s
    ${files}=    List files in directory    ${CURDIR}\\Extra files\\RF LOAD RESULTS\\
    log    List of files in cur dir = "${files}"
    ${file exists?}=    Run Keyword And Return Status    Should contain    ${files}    ${CURDIR}\\Extra files\\RF LOAD RESULTS\\${file name}
    #####
    OpenPyxlLibrary.Open Excel    ${CURDIR}\\Extra files\\RF LOAD RESULTS\\${file name}
    Log    ${CURDIR}\\Extra files\\RF LOAD RESULTS\\${file name}
    ${Names}    OpenPyxlLibrary.Get Sheet Names
    ${WorkSheetName1}=    Get From List    ${Names}    0
    ${WorkSheetName2}=    Get From List    ${Names}    1
    Log    \nWorksheet name = "${WorkSheetName${sheet arg}}"
    ${strColCount} =    OpenPyxlLibrary.Get Column Count    ${WorkSheetName${sheet arg}}
    log    Cols are => ${strColCount}
    ${strRowCount} =    OpenPyxlLibrary.Get Row Count    ${WorkSheetName${sheet arg}}
    log    Rows are=> ${strRowCount}
    ${index}    Set variable    1
    #    ${ROW_ID1}    Set variable    1
    #    FOR    ${i}    IN RANGE    ${strRowCount}
    #    ${strTempTitleValue}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName${sheet arg}}    ${index}    ${ROW_ID1}
    #    #    ${ROW_ID1}    Evaluate    ${ROW_ID1}+1
    ${ROW_ID1}    Evaluate    ${strRowCount}+${1}
    ${ROW_ID_STAR}    Evaluate    ${strRowCount}+${2}
    #    #    log    ${ROW_ID1}. ${strTempTitleValue}
    #    END
    ${Dictionary}    Create list
    Append to list    ${Dictionary}    ${duration}
    ${sorted_list}=    Sort List    ${Dictionary}
    Run keyword and ignore error    log    ${Dictionary}[0]
    Log    UpTime: "${Dictionary}"
    #
    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    1    ${MM.DD.YY.Kyiv+Israel} (Kyiv+Israel) ${MM.DD.YY.UTC} (UTC) ${MM.DD.YY.Japan} (Japan) ${MM.DD.YY.India} (India)
    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    2    ${URL}${page}
    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    3    ${duration}
    Run keyword if    "${loop ID}"=="13"    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID_STAR}    2    *****
    #    ${date in a file}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    1
    #    Should be equal    ${date in a file}    ${stop}
    #    ${load time in a file}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    2
    #    Should be equal    ${load time in a file}    ${diff}
    OpenPyxlLibrary.Save Excel    ${CURDIR}\\Extra files\\RF LOAD RESULTS\\${file name}
    Log    Results are saved into a file ${CURDIR}\\Extra files\\RF LOAD RESULTS\\${file name} (+)

Check Review Subm Time
    [Arguments]    ${file name}    ${sheet arg}    ${expected message}
    ${MM.DD.YY.Kyiv+Israel}    Get Current Date    result_format=%m.%d.%Y %H:%M
    ${MM.DD.YY.UTC}    Get Current Date    UTC    result_format=%H:%M
    ${MM.DD.YY.Japan}    Get Current Date    UTC    +9 hours    result_format=%H:%M
    ${MM.DD.YY.India}    Get Current Date    UTC    +5 hours 30 minutes    result_format=%H:%M
    ${start} =    Get Current Date
    click element    //input[@id='finishCrit']
    Wait Until Page Contains    ${expected message}
    ${stop} =    Get Current Date
    ${diff} =    Subtract Date From Date    ${stop}    ${start}
    Log to console    Submission time (current iteration) = "${diff}" ("sec.ms")
    ${files}=    List files in directory    ${CURDIR}\\Extra files\\
    log    List of downloaded files = "${files}"
    #####
    OpenPyxlLibrary.Open Excel    ${CURDIR}\\Extra files\\RF LOAD RESULTS\\${file name}
    Log    ${CURDIR}\\Extra files\\RF LOAD RESULTS\\${file name}
    ${Names}    OpenPyxlLibrary.Get Sheet Names
    ${WorkSheetName1}=    Get From List    ${Names}    0
    ${WorkSheetName2}=    Get From List    ${Names}    1
    ${WorkSheetName3}=    Get From List    ${Names}    2
    ${WorkSheetName4}=    Get From List    ${Names}    3
    Log    \nWorksheet name = "${WorkSheetName${sheet arg}}"
    ${strColCount} =    OpenPyxlLibrary.Get Column Count    ${WorkSheetName${sheet arg}}
    Log To Console    Cols are => ${strColCount}
    ${strRowCount} =    OpenPyxlLibrary.Get Row Count    ${WorkSheetName${sheet arg}}
    Log To Console    Rows are=> ${strRowCount}
    ${index}    Set variable    1
    ${ROW_ID1}    Set variable    1
    ${Excel_List}    Create List    -1
    ${substructed value}    set variable    -
    FOR    ${i}    IN RANGE    ${strRowCount}
        log    ${ROW_ID1}
        #    ${strTempTitleValue}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName${sheet arg}}    ${index}    ${ROW_ID1}
        ${data1}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    2
        ${data2}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    4
        Run keyword if    "${data1}"=="None" or "${data1}"=="***" or "${data1}"=="[TESTING]" or "${data1}"=="Submission time"    Log to console    ${ROW_ID1}."${data1}" Skipping this!
        ...    ELSE IF    ${testing?}    Append to list    ${Excel_List}    ${data1}
        Run keyword if    "${data2}"=="None" or "${data2}"=="***" or "${data2}"=="[PREPRODUCTION]" or "${data2}"=="Submission time"    Log to console    ${ROW_ID1}."${data2}" Skipping this!
        ...    ELSE IF    ${preprod?}    Append to list    ${Excel_List}    ${data2}
        log    ${Excel_List}
        ${ROW_ID1}    Evaluate    ${ROW_ID1}+1
    #    Log to console    ${ROW_ID1}
    END
    ###############    ###############    ###############    ###############
    ${sorted_list}=    Sort List    ${Excel_List}
    Run keyword and ignore error    log to console    List of all prev values: ${Excel_List}
    Run keyword and ignore error    log to console    ${Excel_List}[0]
    #${smallest value}    set variable    ${Excel_List}[0]
    #
    Run keyword if    "${diff}">"${0}" and "${Excel_List}[0]">"${0}"    Substruct number    ${diff}    ${Excel_List}[0]
    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    1    ${MM.DD.YY.Kyiv+Israel} (Kyiv+Israel) ${MM.DD.YY.UTC} (UTC) ${MM.DD.YY.Japan} (Japan) ${MM.DD.YY.India} (India)
    #
    log    ${ROW_ID1}
    Run keyword if    ${testing?}    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    2    ${diff}
    Run keyword if    ${testing?} and "${substructed value}">0    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    3    ${substructed value}
    Run keyword if    ${testing?}    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    4    ***
    Run keyword if    ${testing?}    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    5    ***
    Run keyword if    ${preprod?}    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    2    ***
    Run keyword if    ${preprod?}    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    3    ***
    Run keyword if    ${preprod?}    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    4    ${diff}
    Run keyword if    ${preprod?} and "${substructed value}">0    Write Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    5    ${substructed value}
    #    ${date in a file}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    1
    #    Should be equal    ${date in a file}    ${stop}
    #    ${load time in a file}    OpenPyxlLibrary.Read Cell Data By Coordinates    ${WorkSheetName${sheet arg}}    ${ROW_ID1}    2
    #    Should be equal    ${load time in a file}    ${diff}
    OpenPyxlLibrary.Save Excel    ${CURDIR}\\Extra files\\RF LOAD RESULTS\\${file name}
    Log to console    Results are saved to ${CURDIR}\\Extra files\\RF LOAD RESULTS\\${file name}
    [Teardown]

Substruct number
    [Arguments]    ${diff}    ${smallest value}
    #Run keyword if    "${diff}"=="[PREPRODUCTION]" or "[TESTING]"    Return from keyword
    ${substructed value}    Evaluate    ${smallest value}-${diff}
    log to console    (the smallest ${smallest value}- submission time ${diff})=${substructed value}
    Set global variable    ${substructed value}

Create test order (MASS) - ADVANCED
    [Arguments]    ${test order description}    ${RobotTestClient}    ${Auto Questionnaire}    ${Reviews per branch}    ${Minimal gap}    ${Max gap}    ${allow holidays}    ${allow sp days}    ${Create order?}    ${Enforce WEO}    ${Date Policy}
    go to.AD    ${URL}/shahar_bridge.php?name=mass_order
    ${today-date-plus-5-days}    Add Time To Date    ${Ttime}    5 days    result_format=%d-%m-%Y
    ${date plus 4 days}    Add Time To Date    ${Ttime}    4 days    result_format=%d.%m.%Y
    ${date plus 2 days}    Add Time To Date    ${Ttime}    2 days    result_format=%d.%m.%Y
    ${date plus 1 day}    Add Time To Date    ${Ttime}    1 days    result_format=%d.%m.%Y
    Log to console    --------------------------CREATING MASS ORDER [ADVANCED]. Please wait...--------------------------
    Wait until page contains element    id=cke_setobjText
    sleep    1
    #
    Set Focus To Element    //div[@id='container']/table[@id='width_limiter']/tbody/tr/td[@id='the_cell_with_the_program']/table[@id='side_menu']/tbody/tr/td[@class='middle-right']/form/table/tbody/tr[2]/td[1]/b
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]/table/tbody/tr/td/span/button
    Set Focus To Element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]
    Click element    xpath=//li[contains(.,'${RobotTestClient}')]
    Validate value (text)    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[2]/td[2]/table/tbody/tr/td/span/button    ${RobotTestClient}
    Input text    //input[@id='start_time']    ${order start_time}
    Input text    //input[@id='end_time']    ${order end_time}
    Input text    //*[@id="dates"]/tbody/tr[3]/td/table/tbody/tr/td[1]/table/tbody/tr[1]/td/input    1
    Validate value (value)    //input[@id='start_time']    ${order start_time}    #    ${order start_time}
    Validate value (value)    //input[@id='end_time']    ${order end_time}
    Validate value (value)    //*[@id="dates"]/tbody/tr[3]/td/table/tbody/tr/td[1]/table/tbody/tr[1]/td/input    1
    Run Keyword if    "${Enforce WEO}"=="Enforce WEO-YES"    Set checkbox.AD    //input[@id='edwe']    true
    ...    ELSE    Set checkbox.AD    //input[@id='edwe']    None
    Run Keyword if    "${Date Policy}"=="Date Policy-YES"    Set checkbox.AD    //input[@id='EnforceFillingdates']    true
    ...    ELSE    Set checkbox.AD    //input[@id='EnforceFillingdates']    None
    Run Keyword if    "${Enforce WEO}"=="Enforce WEO-YES"    Validate element attribute.AD    //input[@id='edwe']    checked    true
    Run Keyword if    "${Date Policy}"=="Date Policy-YES"    Validate element attribute.AD    //input[@id='EnforceFillingdates']    checked    true
    Run Keyword if    "${Date Policy}"=="Date Policy-YES"    Input text    //input[@id='start_date']    ${today-date-plus-5-days}
    Run Keyword if    "${Date Policy}"=="Date Policy-YES"    Validate value (value)    //input[@id='start_date']    ${today-date-plus-5-days}
    #
    Wait until page contains element    id=cke_setobjText    10
    Click element    //*[@id="sets_data"]
    Set Focus To Element    //*[@id="sets_data"]
    Click element    xpath=//option[contains(.,'${Auto Questionnaire}')]
    List Selection Should Be    //*[@id="sets_data"]    ${Auto Questionnaire}
    Click element    form_data[Branches][Objects][Stock][]
    Click element    //form/table/tbody/tr[6]/td[2]/table[@class='doublebox']/tbody/tr/td[1]/select/option[1]
    sleep    2
    Click element    //form/table/tbody/tr[6]/td[2]/table[@class='doublebox']/tbody/tr/td[2]/input[@class='buttons'][2]
    #
    sleep    1
    Click element    //table[@id='dates']/tbody/tr[1]/td/table/tbody/tr/td[2]/table/tbody/tr[1]/td/input[${allow holidays}]
    sleep    1
    Click element    //table[@id='dates']/tbody/tr[1]/td/table/tbody/tr/td[2]/table/tbody/tr[2]/td/input[${allow sp days}]
    sleep    1
    Select dropdown.AD    //*[@id="BriefingID"]    xpath=//option[contains(.,'${RF Briefing}')]
    List Selection Should Be    //*[@id="BriefingID"]    ${RF Briefing}
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[2]/table/tbody/tr/td/span/button
    Click element    //div[3]/div/ul/li[2]/a/span[2]
    Set Focus To Element    xpath=//option[contains(.,'${RF Project}')]
    sleep    1
    click element    //div[3]/ul/li[1]/label/span
    Validate value (text)    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[3]/td[2]/table/tbody/tr/td/span/button    ${RF Project}
    #    Select From List By Label    Projects    ${RF Project}
    #    List Selection Should Be    Projects    ${RF Project}
    #Select Frame    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[1]/td[2]/span/span[2]/span/table/tbody/tr[2]/td/iframe
    #${Planned Day}    Get text
    #Input text    //input[@id='start_date']    28-10-2021
    #    Input text    //input[@id='end_date']    29-12-2022
    #    Validate value (value)    //input[@id='end_date']    29-12-2022
    ${Planned Time}    Get text    //input[@id='start_time']
    ${Planned Branch Name}    Get text    //table[@class='doublebox']/tbody/tr/td[3]/select
    ${Planned Date}    Get text    //input[@id='start_date']
    #    Click button    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    #    Element text should be    //div[@id='container']/table[@id='width_limiter']/tbody/tr/td[@id='the_cell_with_the_program']/table[@id='side_menu']/tbody/tr/td[@class='middle-right']/span/center    Please specify description
    Run Keyword If    ${testing?}    Enter editor text.AD    //*[@id="cke_57"]    ${test order description}
    Run Keyword If    ${preprod?}    Enter editor text.AD    //*[@id="cke_51"]    ${test order description}
    Run Keyword If    ${demo?}    Enter editor text.AD    //*[@id="cke_51"]    ${test order description}
    Execute JavaScript    window.scrollTo(500, document.body.scrollHeight)
    Input text    account_checks_per_branch    ${Reviews per branch}
    Input text    account_days_space_min    ${Minimal gap}
    Input text    account_days_space_max    ${Max gap}
    Set checkbox.AD    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[9]/td/fieldset/table/tbody/tr/td[1]/table/tbody/tr/td/input[2]    true
    Input text    form_data[Acquisition][Description]    RF Acquisition description
    Input text    form_data[Acquisition][Limit]    100
    Input text    form_data[Acquisition][CriticismPayment]    15
    Input text    form_data[Acquisition][NonRefundable]    10.5
    Input text    form_data[Acquisition][Transportation]    11
    Input text    form_data[Acquisition][BonusPayment]    5
    Click element    form_data[Branches][Objects][Stock][]
    #
    # Disable today`s day
    ${Sunday}    Set variable    1
    ${Monday}    Set variable    2
    ${Tuesday}    Set variable    3
    ${Wednesday}    Set variable    4
    ${Thursday}    Set variable    5
    ${Friday}    Set variable    6
    ${Saturday}    Set variable    7
    sleep    1
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="TODAY"    Scroll element into view    //*[@id="dates"]/tbody/tr[2]/td[2]/table/tbody/tr/td[${${Tday}}]/input
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="TODAY"    Click element    //*[@id="dates"]/tbody/tr[2]/td[2]/table/tbody/tr/td[${${Tday}}]/input    #
    #
    Run Keyword if    ${preprod?}    Select dropdown.AD    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[11]/td/fieldset/table/tbody/tr[17]/td[2]/table/tbody/tr/td/span/button    ui-multiselect-checker_1172-option-0
    Run Keyword if    ${testing?}    Select dropdown.AD    //*[@id="side_menu"]/tbody/tr/td[3]/form/table/tbody/tr[11]/td/fieldset/table/tbody/tr[194]/td[2]/table/tbody/tr/td/span    ui-multiselect-checker_1052-option-1
    #
    Set Focus To Element    //*[@id="slider-range"]/a[1]
    Click element    //*[@id="slider-range"]/a[1]
    #    Input text    //input[@id='agerangeDesc']    10 - 15
    #    Validate value (value)    //input[@id='agerangeDesc']    10 - 15
    Assign Id To Element    xpath=//*[@id="slider-range"]/a[1]    slider-left
    Execute Javascript    document.getElementById("slider-left").setAttribute("style","left: 15%;");
    sleep    1
    Double Click element    //*[@id="slider-range"]/a[2]
    Assign Id To Element    xpath=//*[@id="slider-range"]/a[2]    slider-right
    Execute Javascript    document.getElementById("slider-right").setAttribute("style","left: 45.8333%;");
    #Validate value (value)    //input[@id='agerangeDesc']    10 - 15
    #Click button    //input[@class='btn-input']
    #    Set focus to element    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    #    Wait until page contains element    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    #    Wait until page contains element    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    Click ELEMENT    //html/body/div[1]/table/tbody/tr/td[2]/table[4]/tbody/tr/td[3]/form/table/tbody/tr[12]/td/input
    # CHECK PRECRIATION DETAILS
    Wait until page contains element    //td[@class='report-dir'][1]
    ${Order Day}    Get text    //td[@class='report-dir'][1]
    ${Order Time}    Get text    //td[@class='report-dir'][2]
    ${Order Branch Name}    Get text    //td[@class='report-dir'][3]
    ${Order Date}    Get text    //td[@class='report-firstcol']
    #    Should be equal    ${Order Day}    ${Tday}
    #    Should be equal    ${Order Time}    ${order start_time}-${order end_time}
    Should be equal    ${Order Branch Name}    ${Short auto branch name 01}
    #    Should be equal    ${Order Date}    ${DD.MM.YY}
    Page should contain    ${test order description}
    #
    Page should contain    Questionnaire name: ${Auto Questionnaire}
    Page should contain    Start date:
    Page should contain    Number of branches: 1
    Page should contain    Reviews per branch: ${Reviews per branch}
    Page should contain    Number of visits scheduled: ${Reviews per branch}
    Page should contain    Description:
    Log to console    -------------------------------------------------------> Order`s precreation details are next: Date: "${Order Date}"; Day: "${Order Day}"; Time: "${Order Time}"; Short Branch Name: "${Order Branch Name}"
    #
    #
    #${Minimal gap}    Evaluate    ${Minimal gap}+1
    ${date plus min days}    Add Time To Date    ${Ttime}    ${Minimal gap} days    result_format=%d.%m.%Y
    Evaluate max gap.AD    ${Max gap}+${Max gap}-1    ${Max gap}
    ${date plus N days}    Add Time To Date    ${Ttime}    ${Max gap updated} days    result_format=%d.%m.%Y
    ${Order`s is Date}=    Set global variable    ${Order Date}
    sleep    2
    # 1,5,20,2,2
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="NO"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[1]    ${DD.MM.YY}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="NO"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[2]    ${Tday}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="NO"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="NO"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="NO"    Log to console    VISIT 1: Validation of precreation details: ${DD.MM.YY}, ${Tday}, ${order start_time}-${order end_time}, ${Short auto branch name 01}
    # 1,5,20,1,1
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="1" and "${allow sp days}"=="1" and "${Create order?}"=="NO"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[1]    ${date plus 2 days}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="1" and "${allow sp days}"=="1" and "${Create order?}"=="NO"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[2]    ${Order Day}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="1" and "${allow sp days}"=="1" and "${Create order?}"=="NO"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="1" and "${allow sp days}"=="1" and "${Create order?}"=="NO"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="1" and "${allow sp days}"=="1" and "${Create order?}"=="NO"    Log to console    VISIT 1: Validation of precreation details: ${date plus 2 days}, ${Order Day}, ${order start_time}-${order end_time}, ${Short auto branch name 01} (+)
    # 1,5,20,2,2+disable today`s day
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="TODAY"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[1]    ${date plus 1 day}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="TODAY"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="TODAY"    Element text should be    //*[@id="table_rows"]/tbody/tr/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="20" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Create order?}"=="TODAY"    Log to console    VISIT 1: Validation of precreation details: ${date plus 1 day}, ${Order Day}, ${order start_time}-${order end_time}, ${Short auto branch name 01} (+)
    # 3,1,1,1,1
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[1]    ${DD.MM.YY}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Element text should be    //*[@id="table_rows"]/tbody/tr[2]/td[1]    ${date plus 1 day}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Element text should be    //*[@id="table_rows"]/tbody/tr[3]/td[1]    ${date plus 2 days}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Element text should be    //*[@id="table_rows"]/tbody/tr[2]/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Element text should be    //*[@id="table_rows"]/tbody/tr[3]/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Element text should be    //*[@id="table_rows"]/tbody/tr[2]/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Element text should be    //*[@id="table_rows"]/tbody/tr[3]/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Log to console    VISIT 1: ${Short auto branch name 01}; ${order start_time}-${order end_time}; ${DD.MM.YY}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Log to console    VISIT 2: ${Short auto branch name 01}; ${order start_time}-${order end_time}; ${date plus 1 day}
    Run Keyword if    "${Reviews per branch}"=="3" and "${Minimal gap}"=="1" and "${Max gap}"=="1" and "${allow holidays}"=="1" and "${allow sp days}"=="1"    Log to console    VISIT 3: ${Short auto branch name 01}; ${order start_time}-${order end_time}; ${date plus 2 days}
    #2,2,6,2,2
    Run Keyword if    "${Reviews per branch}"=="2" and "${Minimal gap}"=="2" and "${Max gap}"=="6" and "${allow holidays}"=="2" and "${allow sp days}"=="2"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[1]    ${DD.MM.YY}
    Run Keyword if    "${Reviews per branch}"=="2" and "${Minimal gap}"=="2" and "${Max gap}"=="6" and "${allow holidays}"=="2" and "${allow sp days}"=="2"    Element text should be    //*[@id="table_rows"]/tbody/tr[2]/td[1]    ${date plus N days}
    Run Keyword if    "${Reviews per branch}"=="2" and "${Minimal gap}"=="2" and "${Max gap}"=="6" and "${allow holidays}"=="2" and "${allow sp days}"=="2"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="2" and "${Minimal gap}"=="2" and "${Max gap}"=="6" and "${allow holidays}"=="2" and "${allow sp days}"=="2"    Element text should be    //*[@id="table_rows"]/tbody/tr[2]/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="2" and "${Minimal gap}"=="2" and "${Max gap}"=="6" and "${allow holidays}"=="2" and "${allow sp days}"=="2"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="2" and "${Minimal gap}"=="2" and "${Max gap}"=="6" and "${allow holidays}"=="2" and "${allow sp days}"=="2"    Element text should be    //*[@id="table_rows"]/tbody/tr[2]/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="2" and "${Minimal gap}"=="2" and "${Max gap}"=="6" and "${allow holidays}"=="2" and "${allow sp days}"=="2"    Log to console    VISIT 1: ${Short auto branch name 01}; ${order start_time}-${order end_time}; ${DD.MM.YY}
    Run Keyword if    "${Reviews per branch}"=="2" and "${Minimal gap}"=="2" and "${Max gap}"=="6" and "${allow holidays}"=="2" and "${allow sp days}"=="2"    Log to console    VISIT 2: ${Short auto branch name 01}; ${order start_time}-${order end_time}; ${date plus N days}
    # 1, 5, 5, 2, 2, NO, Enforce WEO-NO,Date Policy-NO
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-NO" and "${Date Policy}"=="Date Policy-NO"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[1]    ${DD.MM.YY}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-NO" and "${Date Policy}"=="Date Policy-NO"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[2]    ${Order Day}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-NO" and "${Date Policy}"=="Date Policy-NO"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-NO" and "${Date Policy}"=="Date Policy-NO"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-NO" and "${Date Policy}"=="Date Policy-NO"    Log to console    VISIT 1: ${Short auto branch name 01}; ${order start_time}-${order end_time}; ${DD.MM.YY}; ${Order Day}
    #
    # 1, 5, 5, 2, 2, NO, Enforce WEO-YES,Date Policy-NO
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-YES" and "${Date Policy}"=="Date Policy-NO"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[1]    ${date plus 4 days}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-YES" and "${Date Policy}"=="Date Policy-NO"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[2]    ${Order Day}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-YES" and "${Date Policy}"=="Date Policy-NO"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[3]    ${order start_time}-${order end_time}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-YES" and "${Date Policy}"=="Date Policy-NO"    Element text should be    //*[@id="table_rows"]/tbody/tr[1]/td[4]    ${Short auto branch name 01}
    Run Keyword if    "${Reviews per branch}"=="1" and "${Minimal gap}"=="5" and "${Max gap}"=="5" and "${allow holidays}"=="2" and "${allow sp days}"=="2" and "${Enforce WEO}"=="Enforce WEO-YES" and "${Date Policy}"=="Date Policy-NO"    Log to console    VISIT 1: ${Short auto branch name 01}; ${order start_time}-${order end_time}; ${date plus 4 days}; ${Order Day} (+)
    #
    Log to console    Questionnaire name: "${Auto Questionnaire}" Start date: "${DD.MM.YY}" Number of branches: "1" Reviews per branch: "${Reviews per branch}" Number of visits scheduled: "${Reviews per branch}"
    Log to console    Test order description: "${test order description}"
    Log to console    Allow on holidays: "${allow holidays}" (1="NO"; 2="YES")
    Log to console    Allow on sp days: "${allow sp days}" (1="NO"; 2="YES")
    Log to console    Reviews per branch: "${Reviews per branch}" | Minimal gap: "${Minimal gap}" | Max gap: "${Max gap}"
    Log to console    Questionnaire name: "${Auto Questionnaire}"
    Log to console    Number of branches: "1"
    Log to console    Reviews per branch: "${Reviews per branch}"
    Log to console    Number of visits scheduled: "${Reviews per branch}"
    #
    Run Keyword if    "${Create order?}"=="YES"    Click button    //*[@id="side_menu"]/tbody/tr/td[3]/table/tbody/tr/td/form/input
    Run Keyword if    "${Create order?}"=="YES"    Wait until page contains element    id=cke_setobjText    30
    Check errors on page [-1]

Search order via OP.AD
    Go to2.AD    ${URL}/operation-panel.php?StatusID=1&start_date=&end_date=&DateType=0&ClientID%5B%5D=${client ID}
    #    Select dropdown.AD    //*[@id="StatusID"]    xpath=//option[contains(.,'Ordered, awaiting assignation')]
    Input text    //input[@id='end_date']    ${DD.MM.YY}
    Input text    //input[@id='start_date']    ${DD.MM.YY}]
    Click element    //input[@id='show']
    Wait until page contains element    //*[@id="table_rows"]/tbody/tr
    ${index}    Set Variable    1
    ${elements}=    Get Element Count    //*[@id="table_rows"]/tbody/tr
    #iterate for each row
    FOR    ${rowindex}    IN RANGE    ${elements}
        ${rowindex}=    Evaluate    ${rowindex}+1
        Set global variable    ${rowindex}
        ${actual order description}=    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[4]
        Set focus to element    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[3]
        Scroll element into view    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[3]
        Run Keyword If    "${actual order description}" == "${test order description}"    Get order ID
        Log to console    № ${rowindex}. Found order with description in AD --> ${actual order description}
    END    #
    Set global variable    ${rowindex}
    ${found order ID}    Get Text    //*[@id="table_rows"]/tbody/tr[${rowindex}]/td[3]
    Set global variable    ${found order ID}

Set assignment settings.AD
    [Arguments]    ${expected status}
    Go to2.AD    ${URL}/company-assignments.php
    Set checkbox.AD    //input[@id='field_AsgnConsiderAvailabilityHours']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderCheckerProps']    true
    Set checkbox.AD    //input[@id='field_AsgnConsiderFormerCheckerRefusal']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderChillingPeriod']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderMonthlyCritLimit']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderDailyCritLimit']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderFreeTimeAtDayEnd']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderMaxCritsPerDay']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderSetPermissions']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderBurnedCheckerBranches']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderCheckerRegions']    ${expected status}
    Set checkbox.AD    //input[@id='field_AsgnConsiderCheckerAvailabilityRadious']    ${expected status}
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    Assignments settings saved successfully
    #    Go to2.AD    ${URL}/company-assignments.php
    #    Validate value (value)    //input[@id='field_AsgnConsiderAvailabilityHours']    off
    #    Validate value (value)    //input[@id='field_AsgnConsiderCheckerProps']    on
    #    Validate value (value)    //input[@id='field_AsgnConsiderFormerCheckerRefusal']    off
    #    Validate value (value)    //input[@id='field_AsgnConsiderChillingPeriod']    off
    #    Validate value (value)    //input[@id='field_AsgnConsiderMonthlyCritLimit']    off
    #    Validate value (value)    //input[@id='field_AsgnConsiderDailyCritLimit']    off
    #    Validate value (value)    //input[@id='field_AsgnConsiderFreeTimeAtDayEnd']    off
    #    Validate value (value)    //input[@id='field_AsgnConsiderMaxCritsPerDay']    off
    #    Validate value (value)    //input[@id='field_AsgnConsiderSetPermissions']    off
    #    Validate value (value)    //input[@id='field_AsgnConsiderBurnedCheckerBranches']    off
    #    Validate value (value)    //input[@id='field_AsgnConsiderCheckerRegions']    off
    #3    Validate value (value)    //input[@id='field_AsgnConsiderCheckerAvailabilityRadious']    off

Evaluate max gap.AD
    [Arguments]    ${expected result}    ${Max gap}
    ${Max gap updated}    Evaluate    ${expected result}
    log    ${Max gap updated}
    set global variable    ${Max gap updated}

Search qns (OnePageLogic).SD
    ${value}=    Get Element Count    css:[class="opl-object opl-question"]
    Log to console    Found "${value}" QNs on page!
    ${index}    Set variable    1
    FOR    ${i}    IN RANGE    100    # expected number of questions on page
        ${is qn visible?}    Run keyword and return status    Page should contain element    //form[@id='crit_form']/div[@id='question-area']/div[${index}]
        Run keyword if    "${is qn visible?}"=="False"    Exit for loop
        ${QN ID}    Get element attribute    //form[@id='crit_form']/div[@id='question-area']/div[${index}]    id
        Log to console    Qn ${index}. ID="${QN ID}"
        ${QN ID only}    Remove string    ${QN ID}    opl-obj
        ${index}    Evaluate    ${index}+1
        sleep    1
        Execute JavaScript    window.document.getElementById("${QN ID}").scrollIntoView(true)
        Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/ul[@class='opl-horizontal']/li[${expected answer index}]/input    \    # select checkbox option horizontal
        Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/ul[@class='opl-vertical']/li[${expected answer index}]/input    \    # select checkbox option vertical
        Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/select/option[${expected answer index}]    \    # select "select" option
        #    Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/ul[@class='opl-vertical']/li[${expected answer index}]/label
        Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/div[@class='opl-mi']/textarea[@id='obj${QN ID only}-mi']    \    # click free text element
        sleep    1
        #    ${minilength}    Get element attribute    obj${QN ID only}-mi    data-minlength
        #    ${data-maxlength}    Get element attribute    obj${QN ID only}-mi    data-maxlength
        Run keyword and ignore error    Log to console    minilength=${minilength}; data-maxlength=${data-maxlength}
        Run keyword and ignore error    Input text    //div[@id='question-area']/div[@id='${QN ID}']/div[@class='opl-mi']/textarea[@id='obj${QN ID only}-mi']    FText(Qn ID${QN ID only})    # enter free text
        Run keyword and ignore error    Input text    //div[@id='question-area']/div[@id='${QN ID}']/div[@class='opl-mi']/input[@id='obj${QN ID only}-mi']    ${QN ID only}    # enter free text (number)
        Sleep    1
    #    Run keyword and ignore error    Click element    //input[@id='continue']
    END

Search QNs as shopper and select random answer.SD
    FOR    ${i}    IN RANGE    1    #num of pages
        ${is one page logic qn visible?}    Run keyword and return status    Page should contain element    //form[@id='crit_form']/div[@id='question-area']/div[1]
        ${is qn visible?}    Run keyword and return status    Page should contain element    //div[@id='question-area']/span[@class='questText'][1]
        Run keyword if    ${is one page logic qn visible?}    Search qns (OnePageLogic).SD
        ...    ELSE    Click element    //input[@id='continue']
        Run keyword if    ${is qn visible?}    Search qns (NotOnePageLogic).SD
        ...    ELSE    Log    No QNs
        Run keyword and ignore error    Click element    //input[@id='continue']
        Run keyword and ignore error    Click element    //input[@id='finishCrit']
        Log    Try № ${i}
    END
    sleep    1

Search qns (NotOnePageLogic).SD
    ${value}=    Get Element Count    css:[class="questText"]
    Log to console    Found "${value}" QNs on page!
    ${index}    Set variable    1
    FOR    ${i}    IN RANGE    100    # expected number of questions on page
        ${is qn visible?}    Run keyword and return status    Page should contain element    //div[@id='question-area']/span[@class='questText'][${index}]
        Run keyword if    "${is qn visible?}"=="False"    Exit for loop
        ${QN ID}    Get element attribute    //form[@id='crit_form']/div[@id='question-area']/div[${index}]    id
        Log to console    Qn ${index}. ID="${QN ID}"
        ${QN ID only}    Remove string    ${QN ID}    opl-obj
        ${index}    Evaluate    ${index}+1
        sleep    1
        Execute JavaScript    window.document.getElementById("${QN ID}").scrollIntoView(true)
        Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/ul[@class='opl-horizontal']/li[${expected answer index}]/input    \    # select checkbox option horizontal
        Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/ul[@class='opl-vertical']/li[${expected answer index}]/input    \    # select checkbox option vertical
        Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/select/option[${expected answer index}]    \    # select "select" option
        #    Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/ul[@class='opl-vertical']/li[${expected answer index}]/label
        Run keyword and ignore error    Click element    //div[@id='question-area']/div[@id='${QN ID}']/div[@class='opl-mi']/textarea[@id='obj${QN ID only}-mi']    \    # click free text element
        sleep    1
        Run keyword and ignore error    ${minilength}    Get element attribute    obj${QN ID only}-mi    data-minlength
        Run keyword and ignore error    ${data-maxlength}    Get element attribute    obj${QN ID only}-mi    data-maxlength
        Run keyword and ignore error    Log to console    minilength=${minilength}; data-maxlength=${data-maxlength}
        Run keyword and ignore error    Input text    //div[@id='question-area']/div[@id='${QN ID}']/div[@class='opl-mi']/textarea[@id='obj${QN ID only}-mi']    FText(Qn ID${QN ID only})    # enter free text
        Run keyword and ignore error    Input text    //div[@id='question-area']/div[@id='${QN ID}']/div[@class='opl-mi']/input[@id='obj${QN ID only}-mi']    ${QN ID only}    # enter free text (number)
        Sleep    1
    #    Run keyword and ignore error    Click element    //input[@id='continue']
    END

Order page - check order status. AD
    [Arguments]    ${order status}
    go to.AD    ${URL}/crit-order-assignments.php?OrderID=${found order ID}
    wait until page contains element    //td[1]/span[@class='critInfoItemTitle'][1]
    Element text should be    //td[1]/span[@class='critInfoItemTitle'][9]    Status
    Element text should be    //td[1]/span[@class='CritInfoItem'][9]    ${order status}
    ##
    Log To Console    Order status="${order status}" (+)

Check Edit review page.AD
    [Arguments]    ${exp status}    ${exp result}    ${check images?}
    go to.AD    ${URL}/edit-entire-crit.php?CritID=${Review Number}
    Element text should be    //span[@class='CritInfoItem'][9]    ${exp status}
    Validate value (text)    //textarea[@id='obj${Q1 ID}-mi']    ***
    Validate value (value)    //textarea[@id='obj${Q2 ID}-mi']    Additional info - ${DD.MM.YY} RF
    Validate value (value)    //input[@id='obj${Q3 ID}-mi']    2000
    Validate element attribute.AD    //input[@id='obj${Q1 ID}4']    checked    true
    Validate element attribute.AD    //input[@id='obj${Q2 ID}3']    checked    true
    Validate element attribute.AD    //input[@id='obj${Q3 ID}4']    checked    true
    Validate element attribute.AD    //select[@id='obj${Q4 ID}']/option[3]    selected    true
    Validate element attribute.AD    //select[@id='obj${Q4 ID}']/option[4]    selected    true
    ${act result}    Get text    //*[@id="side_menu"]/tbody/tr/td/table/tbody/tr/td/span[14]/a
    Should contain    ${exp result}    ${act result}
    Page should contain    ${Free text message}
    ####
    Run keyword if    "${check images?}"=="Yes"    Page should contain element    //img[contains(@src, "RFtestattachedfile.png")]
    Run keyword if    "${check images?}"=="Yes"    Page should contain element    //img[contains(@src, "RFtestattachedfile.jpg")]
    Run keyword if    "${check images?}"=="Yes"    Page should contain    file_example_WAV_1MG.wav
    Run keyword if    "${check images?}"=="Yes"    Page should contain    Download
    Run keyword if    "${check images?}"=="Yes"    Page should contain    1.02m
    Run keyword if    "${check images?}"=="Yes"    Page should contain    69.25k
    Run keyword if    "${check images?}"=="Yes"    Page should contain    152.51k
    Log to console    Page contains images: 1. //img[contains(@src, "RFtestattachedfile.png")] 2. //img[contains(@src, "RFtestattachedfile.jpg")] 3. file_example_WAV_1MG.wav

Add text into dictionary.AD
    [Arguments]    ${locator}    ${Keyword}
    ${actual text}    get text    ${locator}
    Set To Dictionary    ${Dictionary}    ${Keyword}=${actual text}
    Log to console    "${Keyword}" = "${Dictionary}[${Keyword}]"

Add (input) element attribute into dictionary.AD
    [Arguments]    ${locator}    ${Keyword}
    Wait until page contains element    ${locator}    6
    ${actual text}    get element attribute    ${locator}    value
    Set To Dictionary    ${Dictionary}    ${Keyword}=${actual text}
    Log to console    "${Keyword}" = "${Dictionary}[${Keyword}]"

GMAIL: Alert with attachments.SD
    [Arguments]    ${email subject}
    Log to console    Expected email: "${email subject}"
    Set global variable    ${email subject}
    Log to console    ${\n}--------------------------Open Mailbox ("${RFShopperEmail}")--------------------------
    Open Mailbox    host=${host}    user=${RFShopperEmail}    password=${shopper email app password}
    Wait for expected email
    Log to console    Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    Date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]    #    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com    #    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    ${RFShopperEmail}" <${RFShopperEmail}>
    should contain    ${subject}    ${email subject}
    ###
    Walk Multipart Email    ${LATEST}
    log    ${LATEST}
    ${payload}=    Get Multipart Payload    decode=True
    Walk Multipart Email    ${LATEST}
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    Set global variable    ${HTML}
    Log    Email content: ${HTML}
    Check default codes table    ${ReviewID}
    Should Contain    ${HTML}    Standard header text
    Should Contain    ${HTML}    Sectional grades
    Should Contain    ${HTML}    Final grade trend
    Should Contain    ${HTML}    Click here to view the review.
    Mark All Emails As Read
    Delete All Emails
    Close Mailbox
    Log to console    Email contains: This is an alert text Name of the client - ${Dictionary}[Client name] Name of the questionnaire ${Dictionary}[Questionnaire name] ID: ${ReviewID} EXTRA INFO City to which the branch is linked - Robot city 01 ID of the questionnaire - ${Dictionary}[Questionnaire ID] Text code of the questionnaire - ${Dictionary}[Questionnaire Code] Purchase Invoice value - Description of the order with HTML tags - Name of the project - Email of the shopper - ID number of the project - Date of the order - ${Dictionary}[Order due date] Time of the order - Purchase description of the order - Phone of the shopper - ${Dictionary}[Shopper phone] Order ID number - ${Dictionary}[Shopper 1 email],${Dictionary}[Shopper 2 email] ${Dictionary}[Mass order description] Status: ${Dictionary}[Review status] Result: ${Rounded result} \ Standard header text Sectional grades Final grade trend Click here to view the review.
    Log to console    Deleting all inbox email. Closing Mailbox.

GMAIL: concentrated alert.SD
    [Arguments]    ${email subject}
    Log to console    Expected email: "${email subject}"
    Set global variable    ${email subject}
    Log to console    ${\n}--------------------------Open Mailbox ("${user}")--------------------------
    Open Mailbox    host=${host}    user=${user}    password=${password}
    Wait for expected email
    Log to console    Email is received. Index = "${LATEST}". Checking email details...
    ${parts}=    Walk Multipart Email    ${LATEST}
    @{fields}=    Get Multipart Field Names
    ${from}=    Get Multipart Field    From
    ${to}=    Get Multipart Field    To
    ${subject}=    Get Multipart Field    Subject
    ${date}=    Get Multipart Field    Date
    Log to console    --------------------------EMAIL HEADER DETAILS--------------------------
    Log to console    SUBJECT = "${subject}"
    Log to console    FROM = "${from}"
    Log to console    TO = "${to}"
    Log to console    date = ${date}
    Log to console    --------------------------
    should contain    ${from}    Checker Software Systems LTD [${URLIndex} system]    #    Checker Software Systems LTD [${URLIndex} system]
    should contain    ${from}    info-${URL1index}-system@checker-soft.com    #    info-${URL1index}-system@checker-soft.com
    should contain    ${to}    ${user}" <${user}>
    should contain    ${subject}    ${email subject}
    ###
    FOR    ${i}    IN RANGE    ${parts}
        Walk Multipart Email    ${LATEST}
        ${content-type}=    Get Multipart Content Type
        Log to console    content-type="${content-type}"
        Continue For Loop If    '${content-type}' == 'text/html'
        ${payload}=    Get Multipart Payload    decode=True
        Log    ------------${payload}
        Log    Email content is correct (+)
    END
    log    ${LATEST}
    ###
    ${HTML} =    Get Email Body    ${LATEST}
    Set global variable    ${HTML}
    log to console    Email content: ${HTML}
    Should Contain    ${HTML}    E-mail 1: ${email subject}
    Should Contain    ${HTML}    E-mail 2: ${email subject}
    Should Not Contain    ${HTML}    E-mail 3: ${email subject}
    Should Contain X Times    ${HTML}    ******    4
    Should Contain    ${HTML}    Back to list
    Should Contain    ${HTML}    Click here to view the review.
    Should Contain    ${HTML}    ${1 Finished review ID}
    Should Contain    ${HTML}    ${2 Finished review ID}
    Should Contain X Times    ${HTML}    Standard header text    2
    Should Contain    ${HTML}    Final grade trend
    Should Contain    ${HTML}    This is an alert text "${AlertName}"
    log to console    Email contains next info: E-mail 1: ${email subject}; E-mail 2: ${email subject}; Back to list; Click here to view the review.; ${1 Finished review ID}; ${2 Finished review ID}; Standard header text; Final grade trend; This is an alert text "${AlertName}"; EXTRA INFO:; //a[contains(text(),'Click here to view the review.')]
    Mark All Emails As Read
    Delete All Emails
    Close Mailbox
    Log to console    Deleting all inbox email. Closing Mailbox.

Manage allowed users.AD
    [Arguments]    ${checked table?}    ${search item}    ${allow access from element}
    #Wait until page contains
    log to console    Validating non/authorized shoppers...
    @{elements}    Get List Items    ${checked table?}
    #iterate for each row
    FOR    ${element}    IN    @{elements}
        Log to console    Authorized assessor --> "${element}"
        Log    '${element}' vs '${search item}'
    END
    Return from keyword if    '${element}'=='${search item}'
    log to console    Granting the access ...
    Check errors on page [-1]
    Scroll element into view    //*[contains(text(), '${search item}')]
    select from list by label    ${allow access from element}    ${search item}
    click element    //tbody/tr[28]/td[2]/table/tbody/tr/td[2]/input[@id='moveButton']
    sleep    3
    [Return]    done

Get list of attached files.AD
    ${i}    Set variable    1
    Log to console    The following files are attached:
    FOR    ${i}    IN RANGE    ${any attachment?}
        ${i}    Evaluate    ${i}+1
        Add (input) element attribute into dictionary.AD    //*[@id="t_attachments"]/tbody/tr[${i}]/td[2]/input    File ${i}
    END

Wait for expected email
    FOR    ${i}    IN RANGE    10
        ${i}    Evaluate    ${i}+1
        ${LATEST} =    Wait For Email    sender=info-${URL1index}-system@checker-soft.com    timeout=30
        ${parts}=    Walk Multipart Email    ${LATEST}
        @{fields}=    Get Multipart Field Names
        ${from}=    Get Multipart Field    From
        ${to}=    Get Multipart Field    To
        ${subject}=    Get Multipart Field    Subject
        ${date}=    Get Multipart Field    Date
        Log to console    Try №${i} (Out of 10x20sec). Subject = "${subject}"
        Log to console    Waiting email from sender=info-${URL1index}-system@checker-soft.com; Please wait....
        ${expected email?}    Run keyword and return status    should contain    ${subject}    ${email subject}
        Run keyword if    ${expected email?}    Exit forloop
    END
    Log to console    Expected email is received. Index = "${LATEST}". Checking email details...
    Set global variable    ${LATEST}
    [Teardown]

Get Review handling details page.AD
    [Arguments]    ${ReviewID}
    go to.AD    ${URL}/crit-handling-details.php?CritID=${ReviewID}
    Wait Until Page Contains Element    //input[@id='checkAndSendAlerts']
    #Review handling details.Check default elements
    ${Review detail rows rotal}    Get Element Count    //div[@id='FiltersArea']/table/tbody/tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle']
    Log to console    Review details (WEB SERVER)===========================
    log    ${Review detail rows rotal}
    ${i}    Set variable    1
    Log to console    The following files are attached:
    FOR    ${i}    IN RANGE    ${Review detail rows rotal}
        ${i}    Evaluate    ${i}+1
        ${row title}    get text    //div[@id='FiltersArea']/table/tbody/tr[1]/td[1]/fieldset[1]/span[@class='critInfoItemTitle'][${i}]
        ${row value}    get text    //div[@id='FiltersArea']/table/tbody/tr[1]/td[1]/fieldset[1]/span[@class='CritInfoItem'][${i}]
        Set To Dictionary    ${Dictionary}    ${row title}=${row value}
        Log to console    ${row title}=${row value}
    END
    Page should contain element    //input[@class='btn-input']
    Page should contain element    id=SimulateAlerts
    Page should contain element    id=SimulateReview
    ${any attachment?}    Get Element Count    //*[@id="t_attachments"]/tbody/tr
    Set global variable    ${any attachment?}
    Run keyword if    ${any attachment?}>0    Get list of attached files.AD
    #
    ${Rounded result}    Evaluate    "%.0f" % ${Dictionary}[Result]
    Set To Dictionary    ${Dictionary}    Rounded result=${Rounded result}
    Set global variable    ${Rounded result}
    Log to console    Rounded result: ${Rounded result}
    Click link    default=${Dictionary}[Full name]
    Select Window    title:Edit branches
    Wait until page contains element    //input[@id='field_BranchCode']
    Add (input) element attribute into dictionary.AD    //input[@id='field_address']    Branch address
    Add (input) element attribute into dictionary.AD    //input[@id='field_BranchCode']    Branch code
    Add (input) element attribute into dictionary.AD    //textarea[@id='field_OpeningHours']    Opening hours
    Add (input) element attribute into dictionary.AD    //input[@id='field_BranchFullname']    Full branch name
    Add (input) element attribute into dictionary.AD    //input[@id='field_branchName']    Short branch name
    Add (input) element attribute into dictionary.AD    //input[@id='field_Phone']    Branch phone
    Run keyword and ignore error    Add (input) element attribute into dictionary.AD    //input[@id='field_CityName']    Branch city
    Run keyword and ignore error    Add text into dictionary.AD    //*[@id="field_CityName_DIV"]/table/tbody/tr/td/div/table/tbody/tr/td/span/button    Branch city
    #
    go to.AD    ${URL}/edit-entire-crit.php?CritID=${ReviewID}
    Add text into dictionary.AD    //span[@class='CritInfoItem'][9]    Review status
    Log to console    "${any attachment?}" attached files
    Log to console    ===========================
    Search the Q-ry (via search bar).AD    ${Dictionary}[Questionnaire name]
    Set To Dictionary    ${Dictionary}    Questionnaire ID=${found ID}
    Set To Dictionary    ${Dictionary}    Questionnaire Code=${code}
    #
    go to.AD    ${URL}/crit-handling-details.php?CritID=${ReviewID}
    Wait until page contains element    //span[@class='critInfoItemTitle'][1]
    Click link    default=${Dictionary}[Shopper name]
    Select Window    title:Shoppers
    Add (input) element attribute into dictionary.AD    //input[@id='field_CheckerCode']    Shopper code
    Click element    //*[@id="tabs"]/ul/li[3]
    sleep    1
    Wait until page contains element    //input[@id='field_Phone']    10
    Add (input) element attribute into dictionary.AD    //input[@id='field_Phone']    Shopper phone
    Add (input) element attribute into dictionary.AD    //input[@id='field_Email_Primary']    Shopper 1 email
    Add (input) element attribute into dictionary.AD    //input[@id='field_Email_Secondary']    Shopper 2 email
    #

Check default codes table
    [Arguments]    ${ReviewID}
    #    Run keyword if    ${preprod?}    GMAIL: BRIEFING
    Should Contain    ${HTML}    REVIEWER DETAILS
    Should Contain    ${HTML}    Review ID: ${ReviewID}
    Should Contain    ${HTML}    Status: ${Dictionary}[Review status]
    Should Contain    ${HTML}    Result: ${Dictionary}[Result]
    Should Contain    ${HTML}    Rounded result: ${Dictionary}[Rounded result]
    Should Contain    ${HTML}    Review start time: ${Dictionary}[Start time]
    Should Contain    ${HTML}    Numeric review start time:
    ${numeric value}    Get Regexp Matches    ${HTML}    Numeric review start time: \\d{10}
    Log to console    ${numeric value} - contains 10 digits (+)
    ${is it a numeric value?}    Get Substring    ${numeric value}    -10
    ${is it a numeric value?}    Convert To String    ${is it a numeric value?}
    Should Match Regexp    ${is it a numeric value?}    \\d{10}
    Should Contain    ${HTML}    Review finish time: ${Dictionary}[Finish time]
    Should Contain    ${HTML}    Numeric review finish time:
    ${numeric value}    Get Regexp Matches    ${HTML}    Numeric review finish time: \\d{10}
    Log to console    ${numeric value} - contains 10 digits (+)
    ${is it a numeric value?}    Get Substring    ${numeric value}    -10
    ${is it a numeric value?}    Convert To String    ${is it a numeric value?}
    Should Match Regexp    ${is it a numeric value?}    \\d{10}
    Should Contain    ${HTML}    REVIEWER DETAILS
    Should Contain    ${HTML}    Reviewer code: ${Dictionary}[Shopper code]
    ${string1}=    Set variable    ${Dictionary}[Shopper name]
    @{Shopper full name}    split string    ${string1}    ${SPACE}(
    Log to console    Shopper full name: ${Shopper full name}[0]
    ${Shopper short name}    Fetch From Left    ${Shopper full name}[1]    )
    Log to console    Shopper short name: ${Shopper short name}
    Should Contain    ${HTML}    Reviewer full name: ${Shopper full name}[0]
    Should Contain    ${HTML}    Short name of the shopper: ${Shopper short name}
    Run keyword if    ${testing?}    Should Contain    ${HTML}    Password of the shopper: Please use forgot my password to retrive your password
    Should Contain    ${HTML}    Email of the shopper:
    Should Contain    ${HTML}    Phone of the shopper:
    Should Contain    ${HTML}    If user is using a Mobile device?: 0
    #
    Should Contain    ${HTML}    ORDER DETAILS
    Should Contain    ${HTML}    Order ID number: ${Dictionary}[OrderID]
    Should Contain    ${HTML}    Description of the order with HTML tags:
    Should Contain    ${HTML}    Name of the project: ${Dictionary}[${expected project} name]
    Should Contain    ${HTML}    ID number of the project: ${Dictionary}[${expected project} ID]
    Should Contain    ${HTML}    Order Briefing:
    Should Contain    ${HTML}    Date of the order: ${Dictionary}[Order due date]
    Should Contain    ${HTML}    Time of the order:
    Should Contain    ${HTML}    Current date:
    Should Contain    ${HTML}    Current time:
    ${numeric value}    Get Regexp Matches    ${HTML}    Current date: \\d{10}
    ${is it a numeric value?}    Get Substring    ${numeric value}    -10
    ${is it a numeric value?}    Convert To String    ${is it a numeric value?}
    Should Match Regexp    ${is it a numeric value?}    \\d{10}
    ${numeric value}    Get Regexp Matches    ${HTML}    Current time: \\d{10}
    Log to console    ${numeric value} \ - contains 10 digits (+)
    ${is it a numeric value?}    Get Substring    ${numeric value}    -10
    ${is it a numeric value?}    Convert To String    ${is it a numeric value?}
    Should Match Regexp    ${is it a numeric value?}    \\d{10}
    Log to console    ${numeric value} \ - contains 10 digits (+)
    Should Contain    ${HTML}    Publicized application comment:
    #
    Should Contain    ${HTML}    QUESTIONNAIRE DETAILS
    Should Contain    ${HTML}    ID of the questionnaire: ${Dictionary}[Questionnaire ID]
    Should Contain    ${HTML}    Name of the questionnaire: ${Dictionary}[Questionnaire name]
    Should Contain    ${HTML}    Code of the questionnaire: ${Dictionary}[Questionnaire Code]
    Run keyword if    ${preprod?}    Should Contain    ${HTML}    Current language: en_AU
    #
    Should Contain    ${HTML}    CLIENT DETAILS
    Should Contain    ${HTML}    Name of the client: ${Dictionary}[Client name]
    Run keyword if    ${preprod?} and "${Dictionary}[Review status] "=="Approved"    Should Contain    ${HTML}    Current review client label: RF Label 01 [Automatically change to this label]
    Should Contain    ${HTML}    BRANCH DETAILS
    Should Contain    ${HTML}    Branch code: ${Dictionary}[Branch code]
    Should Contain    ${HTML}    Full branch name: ${Dictionary}[Full branch name]
    Should Contain    ${HTML}    Short branch name: ${Dictionary}[Short branch name]
    Should Contain    ${HTML}    Address of the branch: ${Dictionary}[Branch address]
    Should Contain    ${HTML}    City to which the branch is linked: Robot city 01
    Should Contain    ${HTML}    Branch phone number: ${Dictionary}[Branch phone]
    Should Contain    ${HTML}    Opening hours of the branch: ${Dictionary}[Opening hours]
    Should Contain    ${HTML}    BRANCH PROPERTY
    Should Contain    ${HTML}    Property option ID: ${Dictionary}[${Property option name}]
    Should Contain    ${HTML}    Property Name: ${Property option name}
    Should Contain    ${HTML}    If specified BR property was chosen for the branch as one of its characteristics?: 1
    Should Contain    ${HTML}    (SUB)SECTIONS DETAILS
    Should Contain    ${HTML}    Score of the chosen section for this review:
    #Run keyword if    ${preprod?}    Should Match Regexp    ${HTML}    Score of the chosen section for this review: \\d+.\\d+
    Run keyword if    ${preprod?}    Should Contain    ${HTML}    <td> \    \    \    \    Score of the chosen section for this review: ${Dictionary}[Result]</td>
    Run keyword if    ${preprod?}    Should Match Regexp    ${HTML}    Score of the chosen sub-section for this review: \\d+.\\d{6}
    Run keyword if    ${preprod?}    Should Contain    ${HTML}    Score of the chosen sub-section for this review: ${Dictionary}[Result]
    Run keyword if    ${preprod?}    Should Contain    ${HTML}    Weight of the chosen section for this review: ${Dictionary}[${exp section name} target].00
    Should Contain    ${HTML}    ******
    #
    #
    #
    #
    Run keyword if    ${ReviewID}>0    Should Contain    ${HTML}    ${ReviewID}
    Run keyword if    ${Dictionary}[Shopper phone]>0    Should Contain    ${HTML}    Phone of the shopper: ${Dictionary}[Shopper phone]
    Should Contain    ${HTML}    ${Dictionary}[Shopper 1 email],${Dictionary}[Shopper 2 email]
    ${keys}    Get Dictionary Keys    ${Dictionary}
    ${is mass desc present?}    Run keyword and return status    Should Contain    ${Dictionary}    Mass order description
    Run keyword if    ${is mass desc present?}    Should Contain    ${HTML}    ${Dictionary}[Mass order description]
    ...    ELSE    Should Contain    ${HTML}    Description of the order with HTML tags: No Description
    Log to console    Is mass desc present? =${is mass desc present?}
    #
    Run keyword if    ${any attachment?}>0 and "${Attachment}"=="List"    Should Contain    ${HTML}    The following files are attached to this review:
    ...    ELSE    Log to console    No image(s) attached to email
    FOR    ${i}    IN RANGE    ${any attachment?}
        ${i}    Evaluate    ${i}+1
        Run keyword if    "${any attachment?}">0 and "${Attachment}"=="List"    Should Contain    ${HTML}    ${Dictionary}[File ${i}]
        Run keyword if    "${any attachment?}">0 and "${Attachment}"=="List"    Log to console    "${Dictionary}[File ${i}]" is present in alert email
    END
    Log to console    Content is correct (+)

Get Order details page.AD
    [Arguments]    ${ReviewID}
    go to.AD    ${URL}/crit-order-assignments.php?OrderID=${ReviewID}
    ${Review detail rows rotal}    Get Element Count    //table/tbody/tr/td[1]/span[@class='critInfoItemTitle']
    Log to console    Review details (WEB SERVER)===========================
    log    ${Review detail rows rotal}
    ${i}    Set variable    1
    FOR    ${i}    IN RANGE    ${Review detail rows rotal}
        ${i}    Evaluate    ${i}+1
        ${row title}    get text    //table/tbody/tr/td[1]/span[@class='critInfoItemTitle'][${i}]
        ${row value}    get text    //table/tbody/tr/td[1]/span[@class='CritInfoItem'][${i}]
        Set To Dictionary    ${Dictionary}    ${row title}=${row value}
        Log to console    ${row title}=${row value}
    END
    Click link    default=${Dictionary}[Questionnaire name]
    #
    Log to console    ===========================
    Set To Dictionary    ${Dictionary}    Questionnaire ID=${found ID}
    Add (input) element attribute into dictionary.AD    //input[@id='field_SetCode']    Questionnaire Code
    #
    go to.AD    ${URL}/crit-order-assignments.php?OrderID=${ReviewID}
    Click link    default=${Dictionary}[Shopper]
    Select Window    title:Shoppers
    Add (input) element attribute into dictionary.AD    //input[@id='field_CheckerCode']    Shopper code
    Click element    //*[@id="tabs"]/ul/li[3]
    Add (input) element attribute into dictionary.AD    //input[@id='field_Phone']    Shopper phone
    Add (input) element attribute into dictionary.AD    //input[@id='field_Email_Primary']    Shopper 1 email
    Add (input) element attribute into dictionary.AD    //input[@id='field_Email_Secondary']    Shopper 2 email

Set client report custom text.AD
    go to.AD    ${URL}/client-visit-report-text-conditions.php?ClientID=${found ID}
    Log to console    Enabling all client report settings
    Wait until page contains    The text that you add here, will be displayed at the top of the visit report
    ${rf text field 01}    Set variable    RF Text field 01
    ${text visible?}    Run keyword and return status    Page should contain    ${rf text field 01}
    Run keyword if    "${text visible?}"=="False"    click link    default=Add
    Run keyword if    ${testing?}    Enter editor text.AD    //*[@id="cke_57_label"]    <p style="text-align:center"><img alt="" src="https://seoquick.com.ua/wp-content/uploads/2018/05/primery-sozdaniya-i-proverki-fayla-robots-txt-400x300.png" style="text-align:center" /></p> <p style="text-align:center">RF Text field 01 (Location=TOP)</p> ${Usual Text Codes Table} ${RF REVN DT}
    Run keyword if    ${preprod?}    Enter editor text.AD    //*[@id="cke_51_label"]    <p style="text-align:center"><img alt="" src="https://seoquick.com.ua/wp-content/uploads/2018/05/primery-sozdaniya-i-proverki-fayla-robots-txt-400x300.png" style="text-align:center" /></p> <p style="text-align:center">RF Text field 01 (Location=TOP)</p> ${Usual Text Codes Table} ${RF REVN DT}
    Select dropdown.AD    //*[@id="VRplaces_1"]    //*[@id="VRplaces_1"]/option[1]
    Input text    //tbody/tr[2]/td[2]/input[@class='text-input']    1=1
    Run keyword and ignore error    Input text    //tbody/tr[4]/td[2]/input[@class='text-input']    ${rf text field 01} (code)
    Run keyword and ignore error    Input text    //input[@id='IDCODE_1']    ${rf text field 01} (code)
    #    Select dropdown.AD    //*[@id="idRptBAlignEditbox"]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'Center')]
    Wait Until Page Contains element    id=Save
    Click element    id=Save
    Wait Until Page Contains    Text fields saved

Activate/Deactivate item on page.AD
    [Arguments]    ${exp page}    ${affected element}    ${exp status}
    go to.AD    ${exp page}
    Click link    default=${AlertName}
    Set checkbox.AD    ${affected element}    ${exp status}
    Sleep    1
    Click Save/Add/Delete/Cancel button.AD
    Wait until page contains    saved successfully

Open Operational Panel.AD
    go to.AD    ${URL}/operation-panel.php?StatusID=6
    Log to console    Searching a RF review (q-re="RF Questionnaire [Shoppers]")
    Wait until page contains element    //input[@id='end_date']
    #    Input text    //input[@id='end_date']    ${date minus 30 days}    #    ${DD-MM-YY}
    ${date minus 1 days}    Subtract Time From Date    ${Ttime}    5 days    result_format=%d-%m-%Y
    Input text    //input[@id='start_date']    ${date minus 1 days}
    Select dropdown.AD    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button    xpath=//li[contains(.,'${RobotTestClient}')]
    Validate value (text)    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[3]/td[1]/table/tbody/tr/td/span/button    AUTO 01 [RF CLIENT]
    Click element    //input[@id='show']
    Wait until page contains element    //*[@id="SetID"]
    Click element    //*[@id="SetID"]
    sleep    1
    Select from list by label    //*[@id="SetID"]    RF Questionnaire [Shoppers]
    #Validate value (value)    //*[@id="SetID"]    RF Questionnaire [Shoppers]
    #
    sleep    1
    Click element    //*[@id="side_menu"]/tbody/tr/td[3]/form[1]/table/tbody/tr[4]/td[3]/span/button
    sleep    2
    #Select from list by label    id=ProjectID    RF ACTIVE project 2022 [PROJECT]    #    ${Dictionary}[${Project Name} ID]
    Click element    //*[@id="ui-multiselect-ProjectID-option-0"]
    #
    Click element    //input[@id='show']
    Wait until page contains element    //*[@id="table_rows"]/tbody/tr[1]/td[3]/a[1]
    ${ReviewID}    Get text    //*[@id="table_rows"]/tbody/tr[1]/td[2]/a[1]
    Set global variable    ${ReviewID}

Get project ID.AD
    [Arguments]    ${expected project}
    go to.AD    ${URL}/projects.php?ClientID=${client ID}
    Set global variable    ${expected project}
    Wait until page contains    Edit projects for client
    ${IsElementVisible}=    Run keyword and return status    Page should contain    ${expected project}
    Run keyword If    ${IsElementVisible}    Get ID    id="table_rows"    ${expected project}    1    2
    Set To Dictionary    ${Dictionary}    ${expected project} ID=${found ID}
    Set To Dictionary    ${Dictionary}    ${expected project} name=${found name}
    log    ${Dictionary}
    Log to console    ${expected project} ID; ${expected project} name

Handle alerts and extra pop up
    FOR    ${rowindex}    IN RANGE    16
        ${is element visible}    Run keyword and return status    Page should contain    Wrong code
        #    Exit For Loop If    ${is element visible}==False
        Run keyword and ignore error    Handle Alert
    END
